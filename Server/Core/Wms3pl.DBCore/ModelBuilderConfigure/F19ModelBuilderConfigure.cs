using Microsoft.EntityFrameworkCore;
using Wms3pl.Datas.F19;

namespace Wms3pl.DBCore
{
  public partial class ModelBuilderConfigure
  {
    private static void SetF19ModelRelation(ModelBuilder modelBuilder)
    {
      modelBuilder.Entity<F190001>().HasKey(key => new { key.TICKET_ID });
      modelBuilder.Entity<F19000101>().HasKey(key => new { key.MILESTONE_ID });
      modelBuilder.Entity<F19000102>().HasKey(key => new { key.MILESTONE_NO });
      modelBuilder.Entity<F19000103>().HasKey(key => new { key.TICKET_TYPE, key.TICKET_CLASS });
      modelBuilder.Entity<F19000104>().HasKey(key => new { key.TICKET_ID, key.ALL_ID, key.DC_CODE });
      modelBuilder.Entity<F19000105>().HasKey(key => new { key.TICKET_ID, key.DELV_EFFIC });
      modelBuilder.Entity<F19000106>().HasKey(key => new { key.TICKET_ID, key.TICKET_NAME });
      modelBuilder.Entity<F190002>().HasKey(key => new { key.TICKET_ID, key.WAREHOUSE_TYPE });
      modelBuilder.Entity<F190003>().HasKey(key => new { key.GUP_CODE, key.CUST_CODE, key.DC_CODE, key.WORK_NO });
      modelBuilder.Entity<F190004>().HasKey(key => new { key.CHECK_NO });
      modelBuilder.Entity<F190010>().HasKey(key => new { key.ID });
      modelBuilder.Entity<F1901>().HasKey(key => new { key.DC_CODE });
      modelBuilder.Entity<F190101>().HasKey(key => new { key.DC_CODE, key.CUST_CODE, key.GUP_CODE });
      modelBuilder.Entity<F190102>().HasKey(key => new { key.DC_CODE, key.DELV_EFFIC });
      modelBuilder.Entity<F190205>().HasKey(key => new { key.TYPE, key.CHECK_TYPE, key.CHECK_NO, key.GUP_CODE, key.CUST_CODE });
      modelBuilder.Entity<F190206>().HasKey(key => new { key.ITEM_CODE, key.CHECK_TYPE, key.CHECK_NO, key.CUST_CODE, key.GUP_CODE });
      modelBuilder.Entity<F190207>().HasKey(key => new { key.ITEM_CODE, key.IMAGE_NO, key.GUP_CODE, key.CUST_CODE });
      modelBuilder.Entity<F1903>().HasKey(key => new { key.ITEM_CODE, key.GUP_CODE, key.CUST_CODE });
      modelBuilder.Entity<F1903_HISTORY>().HasKey(key => new { key.ID });
      modelBuilder.Entity<F190301>().HasKey(key => new { key.ITEM_CODE, key.UNIT_ID, key.GUP_CODE, key.CUST_CODE });
      modelBuilder.Entity<F190303>().HasKey(key => new { key.ITEM_CODE, key.VNR_CODE, key.GUP_CODE, key.CUST_CODE });
      modelBuilder.Entity<F190305>().HasKey(key => new { key.GUP_CODE, key.CUST_CODE, key.ITEM_CODE });
      modelBuilder.Entity<F1905>().HasKey(key => new { key.ITEM_CODE, key.CUST_CODE, key.GUP_CODE });
      modelBuilder.Entity<F190701>().HasKey(key => new { key.QID });
      modelBuilder.Entity<F190702>().HasKey(key => new { key.FUN_ID });
      modelBuilder.Entity<F190703>().HasKey(key => new { key.QID, key.SEQ });
      modelBuilder.Entity<F190704>().HasKey(key => new { key.GRP_ID, key.QID });
      modelBuilder.Entity<F1908>().HasKey(key => new { key.VNR_CODE, key.GUP_CODE, key.CUST_CODE });
      modelBuilder.Entity<F1909>().HasKey(key => new { key.CUST_CODE, key.GUP_CODE });
      modelBuilder.Entity<F190901>().HasKey(key => new { key.CUST_CODE, key.GUP_CODE, key.INVO_YEAR, key.INVO_MON, key.INVO_TITLE, key.INVO_NO_BEGIN, key.INVO_NO_END });
      modelBuilder.Entity<F190902>().HasKey(key => new { key.CUST_CODE, key.GUP_CODE, key.DM_SEQ });
      modelBuilder.Entity<F190904>().HasKey(key => new { key.CUST_CODE, key.GUP_CODE, key.DC_CODE });
      modelBuilder.Entity<F190905>().HasKey(key => new { key.DC_CODE, key.GUP_CODE, key.CUST_CODE, key.ALL_ID, key.CHANNEL, key.SUBCHANNEL });
      modelBuilder.Entity<F190906>().HasKey(key => new { key.IMG_NO });
      modelBuilder.Entity<F190907>().HasKey(key => new { key.PATH_NO });
      modelBuilder.Entity<F190908>().HasKey(key => new { key.DC_CODE, key.GUP_CODE, key.CUST_CODE, key.CHANNEL });
      modelBuilder.Entity<F190909>().HasKey(key => new { key.FTP_URL, key.FTP_USER, key.FTP_TYPE, key.GUP_CODE, key.CUST_CODE });
      modelBuilder.Entity<F1910>().HasKey(key => new { key.GUP_CODE, key.RETAIL_CODE, key.CUST_CODE, key.CHANNEL });
      modelBuilder.Entity<F191001>().HasKey(key => new { key.GUP_CODE, key.CUST_CODE, key.CHANNEL, key.LTYPE, key.MTYPE, key.STYPE });
      modelBuilder.Entity<F191002>().HasKey(key => new { key.RETAIL_CODE, key.GUP_CODE, key.CUST_CODE });
      modelBuilder.Entity<F1912>().HasKey(key => new { key.LOC_CODE, key.DC_CODE });
      modelBuilder.Entity<F191201>().HasKey(key => new { key.DC_CODE, key.TYPE, key.VALUE });
      modelBuilder.Entity<F191202>().HasKey(key => new { key.TRANS_NO });
      modelBuilder.Entity<F191204>().HasKey(key => new { key.ID });
      modelBuilder.Entity<F191205>().HasKey(key => new { key.DC_CODE, key.LOC_CODE });
      modelBuilder.Entity<F1913>().HasKey(key => new { key.LOC_CODE, key.ITEM_CODE, key.VALID_DATE, key.ENTER_DATE, key.MAKE_NO, key.DC_CODE, key.GUP_CODE, key.CUST_CODE, key.SERIAL_NO, key.VNR_CODE, key.BOX_CTRL_NO, key.PALLET_CTRL_NO });
      modelBuilder.Entity<F191301>().HasKey(key => new { key.SEQ });
      modelBuilder.Entity<F191302>().HasKey(key => new { key.ID });
      modelBuilder.Entity<F191303>().HasKey(key => new { key.ID });
      modelBuilder.Entity<F191304>().HasKey(key => new { key.DC_CODE, key.TRANSACTION_NO });
      modelBuilder.Entity<F191305>().HasKey(key => new { key.DC_CODE, key.TRANSACTION_NO });
      modelBuilder.Entity<F19130501>().HasKey(key => new { key.ID });
      modelBuilder.Entity<F1915>().HasKey(key => new { key.ACODE, key.GUP_CODE, key.CUST_CODE });
      modelBuilder.Entity<F1916>().HasKey(key => new { key.BCODE, key.ACODE, key.GUP_CODE, key.CUST_CODE });
      modelBuilder.Entity<F1917>().HasKey(key => new { key.CCODE, key.BCODE, key.ACODE, key.GUP_CODE, key.CUST_CODE });
      modelBuilder.Entity<F1919>().HasKey(key => new { key.AREA_CODE, key.WAREHOUSE_ID, key.DC_CODE });
      modelBuilder.Entity<F191901>().HasKey(key => new { key.ATYPE_CODE });
      modelBuilder.Entity<F191902>().HasKey(key => new { key.DC_CODE, key.GUP_CODE, key.CUST_CODE, key.WAREHOUSE_ID, key.AREA_CODE });
      modelBuilder.Entity<F1924>().HasKey(key => new { key.EMP_ID });
      modelBuilder.Entity<F192401>().HasKey(key => new { key.EMP_ID, key.GRP_ID });
      modelBuilder.Entity<F192401_IMPORTLOG>().HasKey(key => new { key.LOG_ID });
      modelBuilder.Entity<F192402>().HasKey(key => new { key.EMP_ID, key.DC_CODE, key.CUST_CODE, key.GUP_CODE });
      modelBuilder.Entity<F192403>().HasKey(key => new { key.EMP_ID, key.WORK_ID });
      modelBuilder.Entity<F192404>().HasKey(key => new { key.CLIENT_IP, key.DC_CODE });
      modelBuilder.Entity<F192405>().HasKey(key => new { key.EMP_ID, key.SCHEDULE_ID });
      modelBuilder.Entity<F1925>().HasKey(key => new { key.DEP_ID });
      modelBuilder.Entity<F1928>().HasKey(key => new { key.OUTSOURCE_ID });
      modelBuilder.Entity<F1929>().HasKey(key => new { key.GUP_CODE });
      modelBuilder.Entity<F1933>().HasKey(key => new { key.COUDIV_ID });
      modelBuilder.Entity<F1934>().HasKey(key => new { key.ZIP_CODE });
      modelBuilder.Entity<F1942>().HasKey(key => new { key.LOC_TYPE_ID });
      modelBuilder.Entity<F1943>().HasKey(key => new { key.LOC_STATUS_ID });
      modelBuilder.Entity<F1944>().HasKey(key => new { key.DC_CODE, key.GUP_CODE, key.CUST_CODE, key.PICK_MARTERIAL });
      modelBuilder.Entity<F1946>().HasKey(key => new { key.DC_CODE, key.WORKSTATION_CODE });
      modelBuilder.Entity<F1947>().HasKey(key => new { key.ALL_ID, key.DC_CODE });
      modelBuilder.Entity<F194701>().HasKey(key => new { key.ALL_ID, key.DELV_TIME, key.DC_CODE, key.DELV_TMPR, key.DELV_EFFIC, key.PAST_TYPE });
      modelBuilder.Entity<F19470101>().HasKey(key => new { key.ALL_ID, key.DC_CODE, key.DELV_TIME, key.DELV_TMPR, key.ZIP_CODE, key.DELV_EFFIC, key.PAST_TYPE });
      modelBuilder.Entity<F194702>().HasKey(key => new { key.CAR_KIND_ID });
      modelBuilder.Entity<F194703>().HasKey(key => new { key.DC_CODE, key.ALL_ID, key.CAR_KIND_ID, key.IN_OUT });
      modelBuilder.Entity<F194704>().HasKey(key => new { key.ALL_ID, key.DC_CODE, key.GUP_CODE, key.CUST_CODE });
      modelBuilder.Entity<F194705>().HasKey(key => new { key.ROUTE_NO, key.DC_CODE });
      modelBuilder.Entity<F194706>().HasKey(key => new { key.CHANNEL });
      modelBuilder.Entity<F194707>().HasKey(key => new { key.ALL_ID, key.DC_CODE, key.ACC_AREA_ID, key.DELV_EFFIC, key.DELV_TMPR, key.CUST_TYPE, key.LOGI_TYPE, key.ACC_KIND, key.ACC_DELVNUM_ID, key.ACC_TYPE, key.BASIC_VALUE });
      modelBuilder.Entity<F194708>().HasKey(key => new { key.ACC_AREA_ID, key.ALL_ID, key.DC_CODE });
      modelBuilder.Entity<F19470801>().HasKey(key => new { key.ALL_ID, key.DC_CODE, key.ACC_AREA_ID, key.ZIP_CODE });
      modelBuilder.Entity<F194709>().HasKey(key => new { key.ACC_DELVNUM_ID, key.ALL_ID, key.DC_CODE });
      modelBuilder.Entity<F194710>().HasKey(key => new { key.ID });
      modelBuilder.Entity<F19471001>().HasKey(key => new { key.ID });
      modelBuilder.Entity<F194711>().HasKey(key => new { key.DC_CODE, key.GUP_CODE, key.CUST_CODE, key.ALL_ID });
      modelBuilder.Entity<F194712>().HasKey(key => new { key.DC_CODE, key.GUP_CODE, key.ALL_ID, key.CUSTOMER_ID, key.CONSIGN_TYPE, key.ISTEST, key.CUST_CODE, key.CHANNEL });
      modelBuilder.Entity<F19471201>().HasKey(key => new { key.DC_CODE, key.GUP_CODE, key.ALL_ID, key.CUSTOMER_ID, key.CONSIGN_TYPE, key.CONSIGN_NO, key.ISTEST, key.CUST_CODE, key.CHANNEL });
      modelBuilder.Entity<F194713>().HasKey(key => new { key.DC_CODE, key.GUP_CODE, key.CUST_CODE, key.ALL_ID, key.ESERVICE });
      modelBuilder.Entity<F194714>().HasKey(key => new { key.STATUS_ID, key.ALL_ID });
      modelBuilder.Entity<F194715>().HasKey(key => new { key.CUSTOMER_ID, key.ISTEST, key.ALL_ID });
      modelBuilder.Entity<F194716>().HasKey(key => new { key.DC_CODE, key.GUP_CODE, key.CUST_CODE, key.DELV_NO });
      modelBuilder.Entity<F19471601>().HasKey(key => new { key.DC_CODE, key.GUP_CODE, key.CUST_CODE, key.DELV_NO, key.RETAIL_CODE });
      modelBuilder.Entity<F1948>().HasKey(key => new { key.ACC_AREA_ID, key.DC_CODE });
      modelBuilder.Entity<F194801>().HasKey(key => new { key.DC_CODE, key.ACC_AREA_ID, key.ZIP_CODE });
      modelBuilder.Entity<F194901>().HasKey(key => new { key.CARRIAGE_ID });
      modelBuilder.Entity<F1950>().HasKey(key => new { key.UCT_ID });
      modelBuilder.Entity<F1951>().HasKey(key => new { key.UCC_CODE, key.UCT_ID });
      modelBuilder.Entity<F1952>().HasKey(key => new { key.EMP_ID });
      modelBuilder.Entity<F1952_HISTORY>().HasKey(key => new { key.EMP_ID, key.CRT_DATE });
      modelBuilder.Entity<F1953>().HasKey(key => new { key.GRP_ID });
      modelBuilder.Entity<F195301>().HasKey(key => new { key.FUN_CODE, key.GRP_ID });
      modelBuilder.Entity<F195301_IMPORTLOG>().HasKey(key => new { key.LOG_ID });
      modelBuilder.Entity<F195302>().HasKey(key => new { key.SCHEDULE_ID, key.GRP_ID });
      modelBuilder.Entity<F1954>().HasKey(key => new { key.FUN_CODE });
      modelBuilder.Entity<F195402>().HasKey(key => new { key.MENU_CODE });
      modelBuilder.Entity<F19540201>().HasKey(key => new { key.ID });
      modelBuilder.Entity<F19540202>().HasKey(key => new { key.MENU_CODE, key.CATEGORY_LEVEL, key.CATEGORY });
      modelBuilder.Entity<F1954_I18N>().HasKey(key => new { key.FUN_CODE, key.LANG });
      modelBuilder.Entity<F1963>().HasKey(key => new { key.WORK_ID });
      modelBuilder.Entity<F196301>().HasKey(key => new { key.WORK_ID, key.LOC_CODE, key.DC_CODE });
      modelBuilder.Entity<F1970>().HasKey(key => new { key.LABEL_CODE, key.CUST_CODE, key.GUP_CODE });
      modelBuilder.Entity<F197001>().HasKey(key => new { key.LABEL_SEQ, key.CUST_CODE, key.GUP_CODE });
      modelBuilder.Entity<F197002>().HasKey(key => new { key.YEAR });
      modelBuilder.Entity<F19700201>().HasKey(key => new { key.SEQ_NO });
      modelBuilder.Entity<F1980>().HasKey(key => new { key.WAREHOUSE_ID, key.DC_CODE });
      modelBuilder.Entity<F198001>().HasKey(key => new { key.TYPE_ID });
      modelBuilder.Entity<F1981>().HasKey(key => new { key.PIER_CODE, key.DC_CODE });
      modelBuilder.Entity<F1983>().HasKey(key => new { key.CHECK_NO });
      modelBuilder.Entity<F199001>().HasKey(key => new { key.DC_CODE, key.TMPR_TYPE, key.LOC_TYPE_ID, key.ACC_UNIT, key.ACC_ITEM_KIND_ID });
      modelBuilder.Entity<F199002>().HasKey(key => new { key.DC_CODE, key.ACC_ITEM_KIND_ID, key.ORD_TYPE, key.ACC_KIND, key.ACC_UNIT, key.DELV_ACC_TYPE });
      modelBuilder.Entity<F199003>().HasKey(key => new { key.SEQ });
      modelBuilder.Entity<F199005>().HasKey(key => new { key.SEQ });
      modelBuilder.Entity<F199006>().HasKey(key => new { key.DC_CODE, key.ACC_ITEM_NAME, key.ACC_UNIT, key.DELV_ACC_TYPE });
      modelBuilder.Entity<F199007>().HasKey(key => new { key.DC_CODE, key.GUP_CODE, key.CUST_CODE, key.ACC_PROJECT_NO });
      modelBuilder.Entity<F190105>().HasKey(key => new { key.DC_CODE });
      modelBuilder.Entity<F190106>().HasKey(key => new { key.ID });
      modelBuilder.Entity<F1945>().HasKey(key => new { key.DC_CODE, key.COLLECTION_CODE });
      modelBuilder.Entity<F194501>().HasKey(key => new { key.DC_CODE, key.CELL_TYPE });
      modelBuilder.Entity<F191206>().HasKey(key => new { key.DC_CODE, key.PK_AREA });
      modelBuilder.Entity<F19120601>().HasKey(key => new { key.DC_CODE, key.PK_AREA, key.LINE_SEQ });
      modelBuilder.Entity<F19120602>().HasKey(key => new { key.ID });
      modelBuilder.Entity<F1955>().HasKey(key => new { key.DC_CODE, key.CONVENIENT_CODE });
      modelBuilder.Entity<F1956>().HasKey(key => new { key.PRIORITY_CODE});
      modelBuilder.Entity<F195601>().HasKey(key => new { key.PRIORITY_CODE, key.DC_CODE, key.DEVICE_TYPE });
      modelBuilder.Entity<F1903_ASYNC>().HasKey(key => new { key.ID });
    }
  }
}
