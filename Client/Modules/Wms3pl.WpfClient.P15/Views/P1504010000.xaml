<uiLib:Wms3plUserControl x:Class="Wms3pl.WpfClient.P15.Views.P1504010000"
			xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
			xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"                        
			xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d" 
			xmlns:uiLib="clr-namespace:Wms3pl.WpfClient.UILib;assembly=Wms3pl.WpfClient.UILib"
			xmlns:controls="clr-namespace:Wms3pl.WpfClient.UILib.Controls;assembly=Wms3pl.WpfClient.UILib"
			xmlns:common="clr-namespace:Wms3pl.WpfClient.Common;assembly=Wms3pl.WpfClient.Common"
			xmlns:viewModel="clr-namespace:Wms3pl.WpfClient.P15.ViewModel"
			xmlns:Properties="clr-namespace:Wms3pl.WpfClient.P15.Properties" 
			xmlns:res="clr-namespace:Wms3pl.WpfClient.Resources;assembly=Wms3pl.WpfClient.Resources" 
			xmlns:converters="clr-namespace:Wms3pl.WpfClient.Common.Converters;assembly=Wms3pl.WpfClient.Common"
			x:Name="Window" Margin="0,0,0,0" HorizontalAlignment="Stretch" FontSize="18" MinWidth="800"
			controls:PermissionService.FunctionId="P1504010000"
			controls:PermissionService.FunctionName="調撥缺貨處理"
			FormException="{Binding Exception}">
	<uiLib:Wms3plUserControl.DataContext>
		<viewModel:P1504010000_ViewModel x:Name="Vm"/>
	</uiLib:Wms3plUserControl.DataContext>
	<uiLib:Wms3plUserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/Wms3pl.WpfClient.UILib;component/Generic.xaml"/>
			</ResourceDictionary.MergedDictionaries>
			<common:NotConverter x:Key="NotConverter" />
			<viewModel:P1504010000_ViewModel x:Key="Vm"/>
			<converters:IntParaToVisibilityConverter x:Key="IntParaToVisibilityConverter"/>
			<converters:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter"/>
			<converters:EnumToNotVisibilityConverter x:Key="EnumToNotVisibilityConverter"/>
			<converters:EnumBooleanConverter x:Key="EnumBooleanConverter"/>
            <converters:StringToVisiablityConverter x:Key="StringToVisiablityConverter" />
            <converters:StringToLocCodeConverter x:Key="StringToLocCodeConverter" />
            <converters:DateTimeToStringConverter x:Key="DateTimeToStringConverter" />
			<FrameworkElement x:Key="ProxyElement" DataContext="{Binding}"></FrameworkElement>
		</ResourceDictionary>
	</uiLib:Wms3plUserControl.Resources>
	<telerik:RadBusyIndicator x:Name="GridBusyIndicator" BusyContent="{x:Static res:Resources.Loading}" IsIndeterminate="False" IsBusy="{Binding IsBusy}">
		<uiLib:BasicMaster x:Name="Master">
			<uiLib:BasicMaster.ToolBarArea>
				<WrapPanel>
					<Button Style="{StaticResource SearchButton}" controls:PermissionService.FunctionId="BP1504010001" Command="{Binding SearchCommand}" />
					<Button Style="{StaticResource AddButton}" controls:PermissionService.FunctionId="BP1504010002" Command="{Binding AddCommand}" Visibility="Collapsed"/>
                    <Button Style="{StaticResource EditButton}" controls:PermissionService.FunctionId="BP1504010003" Command="{Binding EditCommand}" Visibility="Collapsed"/>
                    <Button Style="{StaticResource CancelButton}" controls:PermissionService.FunctionId="BP1504010004" Command="{Binding CancelCommand}" Visibility="Collapsed"/>
                    <Button Style="{StaticResource SaveButton}" controls:PermissionService.FunctionId="BP1504010005" Command="{Binding SaveCommand}" IsEnabled="{Binding Path=(Validation.HasError), ElementName=LayoutRoot, Converter={StaticResource NotConverter}}" Visibility="Collapsed"/>
				</WrapPanel>
			</uiLib:BasicMaster.ToolBarArea>
			<uiLib:BasicMaster.MainContent>
				<TabControl x:Name="LayoutRoot">
                    <TabControl.BindingGroup>
                        <BindingGroup Name="errorGroup" />
                    </TabControl.BindingGroup>
                    <TabItem Header="{x:Static Properties:Resources.cbDC_CODE_ALLOT}" Width="Auto" Name="AllotTab"  Visibility="{Binding SelectedIndex,ElementName=cbWorkType,Converter={StaticResource IntParaToVisibilityConverter},ConverterParameter=1}">
						<DockPanel Visibility="{Binding SelectedIndex,ElementName=cbWorkType,Converter={StaticResource IntParaToVisibilityConverter},ConverterParameter=1}">
							<ScrollViewer DockPanel.Dock="Top">
								<DockPanel >
									<!---調撥-查詢條件-查詢模式-->
									<GroupBox Header="{x:Static res:Resources.QueryCondition}" DockPanel.Dock="Top" Visibility="{Binding SHOWQUERYPAGE}">
										<Expander DockPanel.Dock="Top" Width="Auto" IsExpanded="True" Name="ExpQueryCondition1_Allot">
											<WrapPanel DockPanel.Dock="Top">
												<Grid >
													<Grid.RowDefinitions>
														<RowDefinition/>
														<RowDefinition/>
														<RowDefinition/>
													</Grid.RowDefinitions>
													<Grid.ColumnDefinitions>
														<ColumnDefinition Width="100"/>
														<ColumnDefinition Width="160"/>
														<ColumnDefinition Width="100"/>
														<ColumnDefinition Width="160"/>
														<ColumnDefinition Width="100"/>
														<ColumnDefinition Width="Auto"/>
													</Grid.ColumnDefinitions>
													<Label Grid.Row="0" Grid.Column="0" Content="{x:Static Properties:Resources.WorkType}" Style="{StaticResource LbStyle}" HorizontalAlignment="Right" />
													<ComboBox Grid.Row="0" Grid.Column="1" HorizontalAlignment="Left" Style="{StaticResource ComboStyle}" Width="100"
															 Name="cbWorkType3" SelectedValuePath="Tag" SelectedIndex="{Binding cbWorkType,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" >
                                                        <ComboBox.Items>
                                                            <ComboBoxItem Content="{x:Static Properties:Resources.Transfer}" Tag="1"/>
														</ComboBox.Items>
													</ComboBox>
													<Label Grid.Row="0" Grid.Column="2" Content="{x:Static res:Resources.Dc}" Style="{StaticResource LbStyle}"  HorizontalAlignment="Right"/>
													<ComboBox Grid.Row="0" Grid.Column="3" Width="140" HorizontalAlignment="Left" Style="{StaticResource ComboStyle}"
																SelectedValue="{Binding cbDC_CODE_ALLOT,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding DcList}" 
																SelectedValuePath="Value" DisplayMemberPath="Name" SelectedIndex="0"/>
													<Label Grid.Row="0" Grid.Column="4" Content="{x:Static Properties:Resources.cbSTATUS}" Style="{StaticResource LbStyle}"  HorizontalAlignment="Right"/>
													<ComboBox Grid.Row="0" Grid.Column="5" HorizontalAlignment="Left" Width="120" Style="{StaticResource ComboStyle}"
																SelectedValue="{Binding cbSTATUS_ALLOT,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding STATUSList_ALLOT}" 
																SelectedValuePath="Value" DisplayMemberPath="Name" SelectedIndex="0"/>
													<Label Grid.Row="1" Grid.Column="0" Content="{x:Static Properties:Resources.tbPICK_ORD_NO_ALLOT}" Style="{StaticResource LbStyle}"  HorizontalAlignment="Right"/>
													<TextBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="5" Style="{StaticResource TxtStyle}" HorizontalAlignment="Left" MinWidth="160" Width="160"
															 Text="{Binding tbPICK_ORD_NO_ALLOT,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" MaxLength="20" InputMethod.IsInputMethodEnabled="False"/>
												</Grid>
											</WrapPanel>
										</Expander>
									</GroupBox>
									<!---調撥-查詢條件-新增模式-->
									<GroupBox Header="{x:Static res:Resources.QueryCondition}" DockPanel.Dock="Top" Visibility="{Binding SHOWADDPAGE}">
										<Expander DockPanel.Dock="Top" Width="Auto" IsExpanded="True"  Name="ExpQueryCondition2_Allot">
											<WrapPanel DockPanel.Dock="Top">
												<Grid >
													<Grid.RowDefinitions>
														<RowDefinition/>
														<RowDefinition/>
														<RowDefinition/>
													</Grid.RowDefinitions>
													<Grid.ColumnDefinitions>
														<ColumnDefinition Width="100"/>
														<ColumnDefinition Width="160"/>
														<ColumnDefinition Width="100"/>
														<ColumnDefinition Width="160"/>
														<ColumnDefinition Width="100"/>
														<ColumnDefinition Width="Auto"/>
													</Grid.ColumnDefinitions>
													<Label Grid.Row="0" Grid.Column="0" Content="{x:Static Properties:Resources.WorkType}" Style="{StaticResource LbStyle}" HorizontalAlignment="Right" />
													<ComboBox Grid.Row="0" Grid.Column="1" HorizontalAlignment="Left" Style="{StaticResource ComboStyle}" Width="100"
															 Name="cbWorkType4" SelectedValuePath="Tag" SelectedIndex="{Binding cbWorkType,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" >
                                                        <ComboBox.Items>
                                                            <ComboBoxItem Content="{x:Static Properties:Resources.Transfer}" Tag="1"/>
														</ComboBox.Items>
													</ComboBox>
													<Label Grid.Row="0" Grid.Column="2" Content="{x:Static res:Resources.Dc}" Style="{StaticResource LbStyle}"  HorizontalAlignment="Right"/>
													<ComboBox Grid.Row="0" Grid.Column="3" Width="140" HorizontalAlignment="Left" Style="{StaticResource ComboStyle}"
																SelectedValue="{Binding cbDC_CODE_ALLOT,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding DcList}" 
																SelectedValuePath="Value" DisplayMemberPath="Name" SelectedIndex="0"/>
													<Label Grid.Row="1" Grid.Column="0" Content="{x:Static Properties:Resources.tbPICK_ORD_NO_ALLOT}" Style="{StaticResource LbStyle}"  HorizontalAlignment="Right"/>
													<WrapPanel Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="5">
													<TextBox  Style="{StaticResource TxtStyle}" MinWidth="160" Width="160" MaxLength="20" InputMethod.IsInputMethodEnabled="False"
															 Text="{Binding tbPICK_ORD_NO_ALLOT,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
													<Button Content="{x:Static res:Resources.Query}" Width="100" Height="35" Command="{Binding SearchCommand_Add}"   
															controls:PermissionService.FunctionId="BP1504010006"/>
													</WrapPanel>
												</Grid>
											</WrapPanel>
										</Expander>
									</GroupBox>
									<!---調撥-查詢結果-查詢模式-->
									<GroupBox DockPanel.Dock="Top" Header ="{x:Static res:Resources.OueryResult}" Visibility="{Binding SHOWQUERYPAGE}">
										<Expander Width="Auto"  IsExpanded="True"  Name="ExpQueryResult1_Allot">
											<DataGrid Style="{StaticResource DgStyle}" ItemsSource="{Binding PickList_Allot}" 
															SelectedItem="{Binding PickSelected_Allot,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
															IsReadOnly="False" CellStyle="{StaticResource SingleClickEdit}" SelectionMode="Single" Height="200">
												<DataGrid.Columns>
													<DataGridComboBoxColumn Header="{x:Static res:Resources.Dc}" IsReadOnly="True" SelectedValueBinding="{Binding TAR_DC_CODE}" 
																					ItemsSource="{Binding DcList, Source={StaticResource Vm}}"
																					SelectedValuePath="Value" DisplayMemberPath="Name" />
													<DataGridTextColumn Header="{x:Static Properties:Resources.tbPICK_ORD_NO_ALLOT}" Binding="{Binding ALLOCATION_NO}" IsReadOnly="True"/>
													<DataGridComboBoxColumn Header="{x:Static Properties:Resources.cbSTATUS}" IsReadOnly="True" SelectedValueBinding="{Binding STATUS}" 
																					ItemsSource="{Binding STATUSList_ALLOT, Source={StaticResource Vm}}"
																					SelectedValuePath="Value" DisplayMemberPath="Name" />
											
												</DataGrid.Columns>
											</DataGrid>
										</Expander>
									</GroupBox>
									<!---調撥-查詢結果-新增模式-->
									<GroupBox DockPanel.Dock="Top" Header ="{x:Static res:Resources.OueryResult}" Visibility="{Binding SHOWADDPAGE}">
										<Expander Width="Auto"  IsExpanded="True" Name="ExpQueryResult2_Allot">
											<DataGrid Style="{StaticResource DgStyle}" ItemsSource="{Binding PickList2_Allot}" 
															SelectedItem="{Binding PickSelected2_Allot,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
															IsReadOnly="False" CellStyle="{StaticResource SingleClickEdit}" SelectionMode="Single"  Height="200">
												<DataGrid.Columns>
													<DataGridComboBoxColumn Header="{x:Static res:Resources.Dc}" IsReadOnly="True" SelectedValueBinding="{Binding TAR_DC_CODE}" 
																					ItemsSource="{Binding DcList, Source={StaticResource Vm}}"
																					SelectedValuePath="Value" DisplayMemberPath="Name" />
													<DataGridTextColumn Header="{x:Static Properties:Resources.tbPICK_ORD_NO_ALLOT}" Binding="{Binding ALLOCATION_NO}" IsReadOnly="True"/>
												</DataGrid.Columns>
											</DataGrid>
										</Expander>
									</GroupBox>
									<!---調撥-缺貨處理設定-查詢模式-->
									<GroupBox Header ="{x:Static Properties:Resources.SHOWQUERYPAGE}" Visibility="{Binding SHOWQUERYPAGE}" DockPanel.Dock="Top" Width="Auto">
										<DockPanel>
                                            <WrapPanel DockPanel.Dock="Top">
                                                <Label Content="{x:Static Properties:Resources.tbPICK_ORD_NO_ALLOT}" Style="{StaticResource LbStyle}"/>
                                                <TextBox Style="{StaticResource TxtStyle}" Width="170" HorizontalAlignment="Left" IsEnabled="False" Text="{Binding ALLOCATION_NO}" MaxLength="20" InputMethod.IsInputMethodEnabled="False"/>
                                            </WrapPanel>
                                            <controls:ValidationDataGrid Style="{StaticResource DgStyle}" ItemsSource="{Binding LackList_Allot}" 
															SelectedItem="{Binding LackSelected_Allot,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
															 Name="dgLack_Allot" CellStyle="{StaticResource SingleClickEdit}" IsReadOnly="False"  Height="200"
															ScrollViewer.HorizontalScrollBarVisibility="Auto">

												<DataGrid.Columns>
                                                    <DataGridCheckBoxColumn Binding="{Binding ISSELECTED,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" 
																			Visibility="{Binding DataContext.UserOperateMode, Source={StaticResource ProxyElement}, 
																						Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static uiLib:OperateMode.Edit}}">
                                                        <DataGridCheckBoxColumn.HeaderTemplate>
                                                            <DataTemplate>
                                                                <CheckBox Style="{StaticResource CheckStyle}" Content="{x:Static res:Resources.SelectAll}" 
																		IsChecked="{Binding DataContext.IsCheckAll3, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl},Mode = TwoWay,UpdateSourceTrigger=PropertyChanged}"
																		Command="{Binding DataContext.CheckSelectedAllCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
																		CommandParameter="ALLOT_Q" />
                                                            </DataTemplate>
                                                        </DataGridCheckBoxColumn.HeaderTemplate>
                                                        <DataGridCheckBoxColumn.ElementStyle>
                                                            <Style TargetType="CheckBox">
                                                                <Setter Property="VerticalAlignment" Value="Center"/>
                                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                                            </Style>
                                                        </DataGridCheckBoxColumn.ElementStyle>
                                                    </DataGridCheckBoxColumn>
                                                    <DataGridTextColumn Header="{x:Static Properties:Resources.ALLOCATION_SEQ}" Binding="{Binding ROWNUM,StringFormat=\{0:000\}}" IsReadOnly="True"/>
													<DataGridTextColumn Header="{x:Static Properties:Resources.ITEM_CODE}" Binding="{Binding ITEM_CODE}" IsReadOnly="True"/>
													<DataGridTextColumn Header="{x:Static Properties:Resources.ITEM_NAME}" Binding="{Binding ITEM_NAME}" IsReadOnly="True"/>
													<DataGridTextColumn Header="{x:Static Properties:Resources.SRC_QTY}" Binding="{Binding SRC_QTY}" IsReadOnly="True"/>
                                                    <DataGridTextColumn Header="{x:Static Properties:Resources.LACK_QTY}" Binding="{Binding LACK_QTY,UpdateSourceTrigger=PropertyChanged}"  IsReadOnly="True">
                                                        <DataGridTextColumn.EditingElementStyle>
                                                            <Style TargetType="{x:Type TextBox}">
                                                                <Setter Property="MaxLength" Value="6"/>
                                                                <Setter Property="InputMethod.IsInputMethodEnabled" Value="False"/>
                                                            </Style>
                                                        </DataGridTextColumn.EditingElementStyle>
                                                    </DataGridTextColumn>
													<DataGridComboBoxColumn Header="{x:Static Properties:Resources.REASON}" SelectedValueBinding="{Binding REASON,UpdateSourceTrigger=PropertyChanged}" 
																					SelectedValuePath="UCC_CODE" DisplayMemberPath="CAUSE"  IsReadOnly="True" >
														<DataGridComboBoxColumn.ElementStyle>
															<Style TargetType="ComboBox">
																<Setter Property="ItemsSource" Value="{Binding DataContext.REASONList_Allot,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type uiLib:Wms3plUserControl}}}"/>
															</Style>
														</DataGridComboBoxColumn.ElementStyle>
														<DataGridComboBoxColumn.EditingElementStyle>
															<Style TargetType="ComboBox">
                                                                <Setter Property="ItemsSource" Value="{Binding DataContext.REASONList_Allot,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type uiLib:Wms3plUserControl}}}"/>
                                                            </Style>
														</DataGridComboBoxColumn.EditingElementStyle>
													</DataGridComboBoxColumn>
                                                    <DataGridComboBoxColumn Header="{x:Static Properties:Resources.cbRETURN_FLAG}" SelectedValueBinding="{Binding STATUS,UpdateSourceTrigger=PropertyChanged}" 
																					SelectedValuePath="Value" DisplayMemberPath="Name"  IsReadOnly="True" >
                                                        <DataGridComboBoxColumn.ElementStyle>
                                                            <Style TargetType="ComboBox">
                                                                <Setter Property="ItemsSource" Value="{Binding DataContext.RETURN_FLAGList_ALLOT,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type uiLib:Wms3plUserControl}}}"/>
                                                            </Style>
                                                        </DataGridComboBoxColumn.ElementStyle>
                                                        <DataGridComboBoxColumn.EditingElementStyle>
                                                            <Style TargetType="ComboBox">
                                                                <Setter Property="ItemsSource" Value="{Binding DataContext.RETURN_FLAGList_ALLOT,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type uiLib:Wms3plUserControl}}}"/>
                                                            </Style>
                                                        </DataGridComboBoxColumn.EditingElementStyle>
                                                    </DataGridComboBoxColumn>
                                                    <DataGridTextColumn Header="{x:Static Properties:Resources.NOTE}" Width="200" Binding="{Binding MEMO}" IsReadOnly="True">
                                                        <DataGridTextColumn.EditingElementStyle>
                                                            <Style TargetType="{x:Type TextBox}">
                                                                <Setter Property="MaxLength" Value="200"/>
                                                                <Setter Property="DataGridCell.IsEnabled" Value="False"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding DataContext.LackSelected_Allot.REASON, RelativeSource={RelativeSource FindAncestor,AncestorType=DataGrid}}" Value="999">
                                                                        <Setter Property="DataGridCell.IsEnabled" Value="True"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </DataGridTextColumn.EditingElementStyle>
                                                    </DataGridTextColumn>
                                                    <DataGridTextColumn Header="{x:Static Properties:Resources.LACK_TYPE}" Binding="{Binding LACK_TYPE}" IsReadOnly="True" />
                                                    <DataGridTextColumn Header="{x:Static Properties:Resources.SRC_LOC_CODE}" Binding="{Binding SRC_LOC_CODE,Converter={StaticResource StringToLocCodeConverter}}" IsReadOnly="True" />
                                                    <DataGridTextColumn Header="{x:Static Properties:Resources.TAR_LOC_CODE}" Binding="{Binding TAR_LOC_CODE,Converter={StaticResource StringToLocCodeConverter}}" IsReadOnly="True" />
                                                    <DataGridTextColumn Header="{x:Static Properties:Resources.ScanSerialNo}" Binding="{Binding SERIAL_NO}" IsReadOnly="True" />
                                                    <DataGridTextColumn Header="{x:Static Properties:Resources.VALID_DATE}" Binding="{Binding VALID_DATE,Converter={StaticResource DateTimeToStringConverter}, ConverterParameter='yyyy/MM/dd'}" IsReadOnly="True"/>
                                                    <DataGridTextColumn Header="{x:Static Properties:Resources.MAKE_NO}" Binding="{Binding MAKE_NO}" IsReadOnly="True"/>
                                                    <DataGridTextColumn Header="{x:Static Properties:Resources.ENTER_DATE}" Binding="{Binding ENTER_DATE,Converter={StaticResource DateTimeToStringConverter}, ConverterParameter='yyyy/MM/dd'}" IsReadOnly="True"/>
                                                    <DataGridTextColumn Header="{x:Static Properties:Resources.VNR_CODE}" Binding="{Binding VNR_CODE}" IsReadOnly="True"/>
                                                    <DataGridTextColumn Header="{x:Static Properties:Resources.PALLET_CTRL_NO}" Binding="{Binding PALLET_CTRL_NO}" IsReadOnly="True"/>
                                                    <DataGridTextColumn Header="{x:Static Properties:Resources.BOX_NO}" Binding="{Binding BOX_CTRL_NO}" IsReadOnly="True"/>
                                                    <DataGridTextColumn Header="{x:Static Properties:Resources.CRT_DATE}" Binding="{Binding CRT_DATE,Converter={StaticResource DateTimeToStringConverter}, ConverterParameter='yyyy/MM/dd HH:mm:ss'}" IsReadOnly="True"/>
                                                    <DataGridTextColumn Header="{x:Static Properties:Resources.CRT_NAME}" Binding="{Binding CRT_NAME}" IsReadOnly="True"/>
                                                    <DataGridTextColumn Header="{x:Static Properties:Resources.UPD_DATE}" Binding="{Binding UPD_DATE,Converter={StaticResource DateTimeToStringConverter}, ConverterParameter='yyyy/MM/dd HH:mm:ss'}" IsReadOnly="True"/>
                                                    <DataGridTextColumn Header="{x:Static Properties:Resources.UPD_NAME}" Binding="{Binding UPD_NAME}" IsReadOnly="True"/>
												</DataGrid.Columns>
											</controls:ValidationDataGrid>
										</DockPanel>
									</GroupBox>
									<!---調撥-缺貨處理設定-新增模式-->
                                    <GroupBox Header ="{x:Static Properties:Resources.SHOWQUERYPAGE}"  Visibility="{Binding SHOWADDPAGE}" DockPanel.Dock="Top" Width="Auto">
										<DockPanel>
											<WrapPanel DockPanel.Dock="Top">
												<Label Content="{x:Static Properties:Resources.tbPICK_ORD_NO_ALLOT}" Style="{StaticResource LbStyle}"/>
												<TextBox Style="{StaticResource TxtStyle}" Width="170" HorizontalAlignment="Left" IsEnabled="False" Text="{Binding ALLOCATION_NO}" MaxLength="20" InputMethod.IsInputMethodEnabled="False"/>
											</WrapPanel>
											<controls:ValidationDataGrid Style="{StaticResource DgStyle}" ItemsSource="{Binding LackList2_Allot}" 
																									 	SelectedItem="{Binding LackSelected2_Allot,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
																					 Name="dgLack2_Allot"		 CellStyle="{StaticResource SingleClickEdit}" IsReadOnly="False"  Height="200" VerticalAlignment="Top">
												<DataGrid.Columns>
													<DataGridCheckBoxColumn Binding="{Binding ISSELECTED,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True"
																			Visibility="{Binding DataContext.UserOperateMode, Source={StaticResource ProxyElement}, 
																						Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static uiLib:OperateMode.Edit}}">
														<DataGridCheckBoxColumn.HeaderTemplate>
															<DataTemplate>
																<CheckBox Style="{StaticResource CheckStyle}" Content="{x:Static res:Resources.SelectAll}" 
																			IsChecked="{Binding DataContext.IsCheckAll4, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl},Mode = TwoWay,UpdateSourceTrigger=PropertyChanged}"
																			Command="{Binding DataContext.CheckSelectedAllCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
																			CommandParameter="ALLOT_A" />
															</DataTemplate>
														</DataGridCheckBoxColumn.HeaderTemplate>
														<DataGridCheckBoxColumn.ElementStyle>
															<Style TargetType="CheckBox">
																<Setter Property="VerticalAlignment" Value="Center"/>
																<Setter Property="HorizontalAlignment" Value="Center"/>
															</Style>
														</DataGridCheckBoxColumn.ElementStyle>
													</DataGridCheckBoxColumn>
                                                    <DataGridTextColumn Header="{x:Static Properties:Resources.ALLOCATION_SEQ}" Binding="{Binding ROWNUM,StringFormat=\{0:000\}}" IsReadOnly="True"/>
													<DataGridTextColumn Header="{x:Static Properties:Resources.ITEM_CODE}" Binding="{Binding ITEM_CODE}" IsReadOnly="True"/>
													<DataGridTextColumn Header="{x:Static Properties:Resources.ITEM_NAME}" Binding="{Binding ITEM_NAME}" IsReadOnly="True"/>
													<DataGridTextColumn Header="{x:Static Properties:Resources.SRC_QTY}" Binding="{Binding SRC_QTY}" IsReadOnly="True"/>
                                                    <DataGridTextColumn Header="{x:Static Properties:Resources.LACK_QTY}" Binding="{Binding LACK_QTY,UpdateSourceTrigger=PropertyChanged}"  IsReadOnly="True">
                                                        <DataGridTextColumn.EditingElementStyle>
                                                            <Style TargetType="{x:Type TextBox}">
                                                                <Setter Property="MaxLength" Value="6"/>
                                                                <Setter Property="InputMethod.IsInputMethodEnabled" Value="False"/>
                                                            </Style>
                                                        </DataGridTextColumn.EditingElementStyle>
                                                    </DataGridTextColumn>
													<DataGridComboBoxColumn Header="{x:Static Properties:Resources.REASON}" SelectedValueBinding="{Binding REASON,UpdateSourceTrigger=PropertyChanged}" 
																					SelectedValuePath="UCC_CODE" DisplayMemberPath="CAUSE"  IsReadOnly="True">
														<DataGridComboBoxColumn.ElementStyle>
															<Style TargetType="ComboBox">
																<Setter Property="ItemsSource" Value="{Binding DataContext.REASONList_Allot,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type uiLib:Wms3plUserControl}}}"/>
															</Style>
														</DataGridComboBoxColumn.ElementStyle>
														<DataGridComboBoxColumn.EditingElementStyle>
															<Style TargetType="ComboBox">
                                                                <Setter Property="ItemsSource" Value="{Binding DataContext.REASONList_Allot,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type uiLib:Wms3plUserControl}}}"/>
                                                            </Style>
														</DataGridComboBoxColumn.EditingElementStyle>
													</DataGridComboBoxColumn>
                                                    <DataGridTextColumn Header="{x:Static Properties:Resources.NOTE}" Width="200" Binding="{Binding MEMO}" IsReadOnly="True">
														<DataGridTextColumn.EditingElementStyle>
                                                            <Style TargetType="{x:Type TextBox}">
                                                                <Setter Property="MaxLength" Value="200"/>
                                                                <Setter Property="DataGridCell.IsEnabled" Value="False"/>
                                                                <Style.Triggers>
																	<DataTrigger Binding="{Binding DataContext.LackSelected2_Allot.REASON, RelativeSource={RelativeSource FindAncestor,AncestorType=DataGrid}}" Value="999">
																		<Setter Property="DataGridCell.IsEnabled" Value="True"/>
																	</DataTrigger>
																</Style.Triggers>
															</Style>
														</DataGridTextColumn.EditingElementStyle>
													</DataGridTextColumn>
                                                    <DataGridTextColumn Header="{x:Static Properties:Resources.LACK_TYPE}" Binding="{Binding LACK_TYPE}" IsReadOnly="True" />
                                                    <DataGridTextColumn Header="{x:Static Properties:Resources.SRC_LOC_CODE}" Binding="{Binding SRC_LOC_CODE,Converter={StaticResource StringToLocCodeConverter}}" IsReadOnly="True" />
                                                    <DataGridTextColumn Header="{x:Static Properties:Resources.TAR_LOC_CODE}" Binding="{Binding TAR_LOC_CODE,Converter={StaticResource StringToLocCodeConverter}}" IsReadOnly="True" />
                                                    <DataGridTextColumn Header="{x:Static Properties:Resources.ScanSerialNo}" Binding="{Binding SERIAL_NO}" IsReadOnly="True" />
                                                    <DataGridTextColumn Header="{x:Static Properties:Resources.VALID_DATE}" Binding="{Binding VALID_DATE,Converter={StaticResource DateTimeToStringConverter}, ConverterParameter='yyyy/MM/dd'}" IsReadOnly="True"/>
                                                    <DataGridTextColumn Header="{x:Static Properties:Resources.MAKE_NO}" Binding="{Binding MAKE_NO}" IsReadOnly="True"/>
                                                    <DataGridTextColumn Header="{x:Static Properties:Resources.ENTER_DATE}" Binding="{Binding ENTER_DATE,Converter={StaticResource DateTimeToStringConverter}, ConverterParameter='yyyy/MM/dd'}" IsReadOnly="True"/>
                                                    <DataGridTextColumn Header="{x:Static Properties:Resources.VNR_CODE}" Binding="{Binding VNR_CODE}" IsReadOnly="True"/>
                                                    <DataGridTextColumn Header="{x:Static Properties:Resources.PALLET_CTRL_NO}" Binding="{Binding PALLET_CTRL_NO}" IsReadOnly="True"/>
                                                    <DataGridTextColumn Header="{x:Static Properties:Resources.BOX_NO}" Binding="{Binding BOX_CTRL_NO}" IsReadOnly="True"/>
                                                </DataGrid.Columns>
											</controls:ValidationDataGrid>
										</DockPanel>
									</GroupBox>
								</DockPanel>
							</ScrollViewer>
						</DockPanel>
					</TabItem>
				</TabControl>
			</uiLib:BasicMaster.MainContent>
		</uiLib:BasicMaster>
	</telerik:RadBusyIndicator>
</uiLib:Wms3plUserControl>
