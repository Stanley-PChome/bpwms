<?xml version="1.0" encoding="utf-8"?>
<uiLib:Wms3plUserControl x:Class="Wms3pl.WpfClient.P19.Views.P1905070000" xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d" xmlns:uiLib="clr-namespace:Wms3pl.WpfClient.UILib;assembly=Wms3pl.WpfClient.UILib" xmlns:controls="clr-namespace:Wms3pl.WpfClient.UILib.Controls;assembly=Wms3pl.WpfClient.UILib" xmlns:common="clr-namespace:Wms3pl.WpfClient.Common;assembly=Wms3pl.WpfClient.Common" xmlns:viewModel="clr-namespace:Wms3pl.WpfClient.P19.ViewModel" xmlns:Properties="clr-namespace:Wms3pl.WpfClient.P19.Properties" xmlns:res="clr-namespace:Wms3pl.WpfClient.Resources;assembly=Wms3pl.WpfClient.Resources" xmlns:converter="clr-namespace:Wms3pl.WpfClient.Common.Converters;assembly=Wms3pl.WpfClient.Common" x:Name="Window" Margin="0,0,0,0" HorizontalAlignment="Stretch" FontSize="18" MinWidth="800" controls:PermissionService.FunctionId="P1905070000" controls:PermissionService.FunctionName="作業群組設定" FormException="{Binding Exception}">
  <uiLib:Wms3plUserControl.DataContext>
    <viewModel:P1905070000_ViewModel x:Name="Vm" />
  </uiLib:Wms3plUserControl.DataContext>
  <uiLib:Wms3plUserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Wms3pl.WpfClient.UILib;component/Generic.xaml" />
      </ResourceDictionary.MergedDictionaries>
      <common:NotConverter x:Key="NotConverter" />
      <converter:CheckStateConverter x:Key="CheckStateConverter" />
      <converter:EnumBooleanConverter x:Key="EnumBooleanConverter" />
      <converter:EnumToNotBooleanConverter x:Key="EnumToNotBooleanConverter" />
      <converter:EnumToNotVisibilityConverter x:Key="EnumToNotVisibilityConverter" />
      <Style TargetType="WrapPanel">
        <Setter Property="Margin" Value="5" />
      </Style>
      <Style TargetType="Label">
        <Setter Property="VerticalContentAlignment" Value="Center" />
      </Style>
      <Style TargetType="TextBox" BasedOn="{StaticResource TxtStyle}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="140" />
      </Style>
      <Style TargetType="ComboBox">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="140" />
      </Style>
      <Style TargetType="Button">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Width" Value="100" />
      </Style>
    </ResourceDictionary>
  </uiLib:Wms3plUserControl.Resources>
  <telerik:RadBusyIndicator x:Name="GridBusyIndicator" BusyContent="{x:Static res:Resources.Loading}" IsIndeterminate="False" IsBusy="{Binding IsBusy}">
    <uiLib:BasicMaster x:Name="Master">
      <uiLib:BasicMaster.ToolBarArea>
        <WrapPanel>
          <Button Style="{StaticResource SearchButton}" controls:PermissionService.FunctionId="BP1905070004" Command="{Binding SearchCommand}" />
          <Button Style="{StaticResource AddButton}" controls:PermissionService.FunctionId="BP1905070001" Command="{Binding AddCommand}" />
          <Button Style="{StaticResource EditButton}" controls:PermissionService.FunctionId="BP1905070011" Command="{Binding EditCommand}" />
          <Button Style="{StaticResource CancelButton}" controls:PermissionService.FunctionId="BP1905070005" Command="{Binding CancelCommand}" />
          <Button Style="{StaticResource DeleteButton}" controls:PermissionService.FunctionId="BP1905070003" Command="{Binding DeleteCommand}" />
          <Button Style="{StaticResource SaveButton}" controls:PermissionService.FunctionId="BP1905070002" Command="{Binding SaveCommand}" IsEnabled="{Binding Path=(Validation.HasError), ElementName=LayoutRoot, Converter={StaticResource NotConverter}}" />
        </WrapPanel>
      </uiLib:BasicMaster.ToolBarArea>
      <uiLib:BasicMaster.MainContent>
        <TabControl x:Name="LayoutRoot">
          <TabControl.BindingGroup>
            <BindingGroup Name="errorGroup" />
          </TabControl.BindingGroup>
          <TabItem Header="{x:Static res:Resources.Main}" Width="Auto">
            <DockPanel>
              <!-- 由此處開始加入畫面項目 -->
              <DockPanel DockPanel.Dock="Top">
                <GroupBox Header="{x:Static res:Resources.QueryCondition}">
                  <WrapPanel Orientation="Horizontal">
                    <Label Content="{x:Static Properties:Resources.SearchWorkgroupName}" Foreground="Blue" />
                    <TextBox Name="txtWorkgroupName" VerticalContentAlignment="Center" MaxLength="30" Width="400" Text="{Binding SearchWorkgroupName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}" />
                  </WrapPanel>
                </GroupBox>
              </DockPanel>
              <DockPanel DockPanel.Dock="Left">
                <Grid>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                  </Grid.RowDefinitions>
                  <DataGrid Name="dgWorkgroupList" Grid.Row="0" Width="300" ItemsSource="{Binding WorkgroupList}" SelectedItem="{Binding SelectedWorkgroupItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" SelectionMode="Single" SelectionUnit="FullRow" IsReadOnly="True" IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}" IsSynchronizedWithCurrentItem="True" HorizontalScrollBarVisibility="Visible">
                    <DataGrid.Columns>
                      <DataGridTextColumn Header="{x:Static Properties:Resources.GRP_ID}" Binding="{Binding WORK_ID}" Width="60*" />
                      <DataGridTextColumn Header="{x:Static Properties:Resources.GRP_NAME}" Binding="{Binding WORK_NAME}" Width="180*" />
                      <DataGridTextColumn Header="{x:Static Properties:Resources.GRP_DESC}" Binding="{Binding WORK_DESC}" Width="140*" />
                    </DataGrid.Columns>
                  </DataGrid>
                  <WrapPanel Grid.Row="1" Orientation="Vertical">
                    <WrapPanel Orientation="Horizontal" Visibility="{Binding UserOperateMode, Converter={StaticResource EnumToNotVisibilityConverter}, ConverterParameter={x:Static uiLib:OperateMode.Add}}">
                      <Label Content="{x:Static Properties:Resources.GRP_ID}" />
                      <TextBox IsEnabled="False" Text="{Binding EditableWorkgroupItem.WORK_ID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxLength="5" Width="200" />
                    </WrapPanel>
                    <WrapPanel Orientation="Horizontal">
                      <Label Content="{x:Static Properties:Resources.GRP_NAME}" />
                      <TextBox x:Name="txtWorkName" Text="{Binding EditableWorkgroupItem.WORK_NAME, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True}" IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}" MaxLength="30" Width="200" />
                    </WrapPanel>
                    <WrapPanel Orientation="Horizontal">
                      <Label Content="{x:Static Properties:Resources.GRP_DESC}" VerticalContentAlignment="Top" />
                      <TextBox TextWrapping="Wrap" VerticalContentAlignment="Top" AcceptsReturn="True" Text="{Binding EditableWorkgroupItem.WORK_DESC, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}" MaxLength="60" Width="200" Height="90" />
                    </WrapPanel>
                  </WrapPanel>
                </Grid>
              </DockPanel>
              <DockPanel DockPanel.Dock="Left">
                <WrapPanel DockPanel.Dock="Top">
                  <Label Content="{x:Static Properties:Resources.WORK_ZONE}" Foreground="Red" />
                </WrapPanel>
                <GroupBox DockPanel.Dock="Top">
                  <WrapPanel Orientation="Vertical">
                    <WrapPanel Orientation="Horizontal">
                      <Label Content="DC" />
                      <ComboBox Name="cbDcList" ItemsSource="{Binding DcList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedDcItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Value" IsSynchronizedWithCurrentItem="True">
                        <ComboBox.ItemTemplate>
                          <DataTemplate>
                            <WrapPanel Orientation="Horizontal">
                              <TextBlock Text="{Binding Name}" />
                            </WrapPanel>
                          </DataTemplate>
                        </ComboBox.ItemTemplate>
                      </ComboBox>
                      <Label Content="{x:Static Properties:Resources.WAREHOUSE_ID}" />
                      <ComboBox ItemsSource="{Binding WarehouseList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedWarehouseItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinWidth="200">
                        <ComboBox.ItemTemplate>
                          <DataTemplate>
                            <WrapPanel Orientation="Horizontal">
                              <TextBlock Text="{Binding Name}" />
                            </WrapPanel>
                          </DataTemplate>
                        </ComboBox.ItemTemplate>
                      </ComboBox>
                      <Label Content="{x:Static Properties:Resources.Floor}" />
                      <ComboBox ItemsSource="{Binding FloorList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedFloorItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <ComboBox.ItemTemplate>
                          <DataTemplate>
                            <WrapPanel Orientation="Horizontal">
                              <TextBlock Text="{Binding Name}" />
                            </WrapPanel>
                          </DataTemplate>
                        </ComboBox.ItemTemplate>
                      </ComboBox>
                    </WrapPanel>
                    <WrapPanel Orientation="Horizontal">
                      <Label Content="{x:Static Properties:Resources.StartLocCode}" Foreground="Blue" />
                      <TextBox Text="{Binding StartLocCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxLength="14" />
                      <Label Content=" ~ " Foreground="Blue" Width="30" />
                      <TextBox Text="{Binding EndLocCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxLength="14" />
                      <Button Command="{Binding SearchLocCommand}" controls:PermissionService.FunctionId="BP1905070006" Content="{x:Static Properties:Resources.SEARCH}" />
                    </WrapPanel>
                  </WrapPanel>
                </GroupBox>
                <Grid DockPanel.Dock="Top" Margin="10, 0, 10, 0">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="140" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                  </Grid.RowDefinitions>
                  <Label Content="{x:Static Properties:Resources.UNSET_LOC_CODE}" HorizontalContentAlignment="Center" Grid.Column="0" Grid.Row="0" />
                  <Label Content="{x:Static Properties:Resources.SETTED_LOC_CODE}" HorizontalContentAlignment="Center" Grid.Column="2" Grid.Row="0" />
                <ScrollViewer Grid.Column="0" Grid.Row="1" Margin="3">
                 <telerik:RadTreeView x:Name="nonAllowedTreeView" Height="auto" IsOptionElementsEnabled="True" SelectionMode="Single" Margin="3" IsTriStateMode="False" ItemsSource="{Binding NonAllowedP190507LocNodes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" BorderBrush="DarkGray" BorderThickness="1" IsVirtualizing="True" FontSize="14" Checked="RadTreeView_Checked" Unchecked="RadTreeView_Unchecked">
                    <telerik:RadTreeView.ItemTemplate>
                      <HierarchicalDataTemplate ItemsSource="{Binding LocNodes}">
                        <TreeViewItem Header="{Binding Name}" />
                      </HierarchicalDataTemplate>
                    </telerik:RadTreeView.ItemTemplate>
                    <telerik:RadTreeView.ItemContainerStyle>
                      <Style TargetType="telerik:RadTreeViewItem">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
                        <Setter Property="CheckState" Value="{Binding IsChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource CheckStateConverter}}" />
                        <!--<Setter Property="Command" Value="{Binding DataContext.CheckedLocNodeCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
												<Setter Property="CommandParameter" Value="{Binding}"/>-->
                      </Style>
                    </telerik:RadTreeView.ItemContainerStyle>
                  </telerik:RadTreeView>
                    </ScrollViewer>
                    <WrapPanel Orientation="Vertical" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center">
                    <Button Name="btnAssignAll" Content="＞＞" Command="{Binding MoveItemsCommand}" CommandParameter="{x:Static viewModel:P190505MovingType.AssignAll}" controls:PermissionService.FunctionId="BP1905070007" />
                    <Button Name="btnAssign" Content="＞" Command="{Binding MoveItemsCommand}" CommandParameter="{x:Static viewModel:P190505MovingType.Assign}" controls:PermissionService.FunctionId="BP1905070018" />
                    <Button Name="btnUnAssign" Content="＜" Command="{Binding MoveItemsCommand}" CommandParameter="{x:Static viewModel:P190505MovingType.UnAssign}" controls:PermissionService.FunctionId="BP1905070009" />
                    <Button Name="btnUnAssignAll" Content="＜＜" Command="{Binding MoveItemsCommand}" CommandParameter="{x:Static viewModel:P190505MovingType.UnAssignAll}" controls:PermissionService.FunctionId="BP1905070010" />
                  </WrapPanel>
                  <ScrollViewer Grid.Column="2" Grid.Row="1" Margin="3">
                  <telerik:RadTreeView x:Name="allowedTreeView" Height="auto" IsOptionElementsEnabled="True" SelectionMode="Single" Margin="3" IsTriStateMode="False" ItemsSource="{Binding AllowedP190507LocNodes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" BorderBrush="DarkGray" BorderThickness="1" IsVirtualizing="True" FontSize="14" Checked="RadTreeView_Checked" Unchecked="RadTreeView_Unchecked">
                    <telerik:RadTreeView.ItemTemplate>
                      <HierarchicalDataTemplate ItemsSource="{Binding LocNodes}">
                        <TreeViewItem Header="{Binding Name}" />
                      </HierarchicalDataTemplate>
                    </telerik:RadTreeView.ItemTemplate>
                    <telerik:RadTreeView.ItemContainerStyle>
                      <Style TargetType="telerik:RadTreeViewItem">
                      <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
                        <Setter Property="CheckState" Value="{Binding IsChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource CheckStateConverter}}" />
                        <!--<Setter Property="Command" Value="{Binding DataContext.CheckedLocNodeCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
												<Setter Property="CommandParameter" Value="{Binding}"/>-->
                      </Style>
                    </telerik:RadTreeView.ItemContainerStyle>
                  </telerik:RadTreeView>
                  </ScrollViewer>
              </Grid>
              </DockPanel>
            </DockPanel>
          </TabItem>
        </TabControl>
      </uiLib:BasicMaster.MainContent>
    </uiLib:BasicMaster>
  </telerik:RadBusyIndicator>
</uiLib:Wms3plUserControl>