<?xml version="1.0" encoding="utf-8"?>
<uiLib:Wms3plUserControl x:Class="Wms3pl.WpfClient.P19.Views.P1905060000" xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d" xmlns:uiLib="clr-namespace:Wms3pl.WpfClient.UILib;assembly=Wms3pl.WpfClient.UILib" xmlns:controls="clr-namespace:Wms3pl.WpfClient.UILib.Controls;assembly=Wms3pl.WpfClient.UILib" xmlns:common="clr-namespace:Wms3pl.WpfClient.Common;assembly=Wms3pl.WpfClient.Common" xmlns:converters="clr-namespace:Wms3pl.WpfClient.Common.Converters;assembly=Wms3pl.WpfClient.Common" xmlns:viewModel="clr-namespace:Wms3pl.WpfClient.P19.ViewModel" xmlns:Properties="clr-namespace:Wms3pl.WpfClient.P19.Properties" xmlns:res="clr-namespace:Wms3pl.WpfClient.Resources;assembly=Wms3pl.WpfClient.Resources" x:Name="Window" Margin="0,0,0,0" HorizontalAlignment="Stretch" FontSize="18" MinWidth="800" controls:PermissionService.FunctionId="P1905060000" controls:PermissionService.FunctionName="使用者安全控制設定" xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" FormException="{Binding Exception}">
  <uiLib:Wms3plUserControl.DataContext>
    <viewModel:P1905060000_ViewModel x:Name="Vm" />
  </uiLib:Wms3plUserControl.DataContext>
  <uiLib:Wms3plUserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Wms3pl.WpfClient.UILib;component/Generic.xaml" />
      </ResourceDictionary.MergedDictionaries>
      <common:NotConverter x:Key="NotConverter" />
      <converters:StringToBoolConverter x:Key="StringToBoolConverter" />
      <converters:EnumBooleanConverter x:Key="EnumBooleanConverter" />
      <converters:EnumToNotBooleanConverter x:Key="EnumToNotBooleanConverter" />
      <Style TargetType="WrapPanel">
        <Setter Property="Margin" Value="5" />
      </Style>
      <Style TargetType="Label" BasedOn="{StaticResource LbTitleStyle}" />
      <Style TargetType="TextBox" BasedOn="{StaticResource TxtStyle}" />
      <Style TargetType="CheckBox" BasedOn="{StaticResource CheckStyle}" />
      <Style TargetType="Button">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Width" Value="100" />
      </Style>
    </ResourceDictionary>
  </uiLib:Wms3plUserControl.Resources>
  <telerik:RadBusyIndicator x:Name="GridBusyIndicator" BusyContent="{x:Static res:Resources.Loading}" IsIndeterminate="False" IsBusy="{Binding IsBusy}">
    <uiLib:BasicMaster x:Name="Master" RenderTransformOrigin="0.503,0.495">
      <uiLib:BasicMaster.ToolBarArea>
        <WrapPanel>
          <Button Style="{StaticResource SearchButton}" controls:PermissionService.FunctionId="BP1905060001" Command="{Binding SearchCommand}" />
          <Button Style="{StaticResource EditButton}" controls:PermissionService.FunctionId="BP1905060004" Command="{Binding EditCommand}" />
          <Button Style="{StaticResource CancelButton}" controls:PermissionService.FunctionId="BP1905060005" Command="{Binding CancelCommand}" />
          <Button Style="{StaticResource SaveButton}" controls:PermissionService.FunctionId="BP1905060002" Command="{Binding SaveCommand}" IsEnabled="{Binding Path=IsEnableEdit, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
          <!--Command="{Binding SaveCommand}"-->
        </WrapPanel>
      </uiLib:BasicMaster.ToolBarArea>
      <uiLib:BasicMaster.MainContent>
        <TabControl x:Name="LayoutRoot">
          <TabControl.BindingGroup>
            <BindingGroup Name="errorGroup" />
          </TabControl.BindingGroup>
          <TabItem Header="{x:Static res:Resources.Main}" Width="Auto">
            <DockPanel>
              <WrapPanel DockPanel.Dock="Top">
                <GroupBox Header="{x:Static res:Resources.QueryCondition}">
                  <WrapPanel Orientation="Horizontal">
                    <Label Content="{x:Static Properties:Resources.SearchEmpId}" Foreground="Blue" />
                    <TextBox Name="txtEmpID" VerticalContentAlignment="Center" MaxLength="30" Width="400" Text="{Binding SearchEmpId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}" />
                  </WrapPanel>
                </GroupBox>
              </WrapPanel>
              <DockPanel>
                <DataGrid DockPanel.Dock="Left" ItemsSource="{Binding EmpList,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectEmp,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" IsReadOnly="True" SelectionMode="Single" IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}">
                  <DataGrid.Columns>
                    <DataGridTextColumn Header="{x:Static Properties:Resources.SearchEmpId}" Binding="{Binding EMP_ID}" Width="120" />
                    <DataGridTextColumn Header="{x:Static Properties:Resources.EMP_NAME}" Binding="{Binding EMP_NAME}" Width="120" />
                  </DataGrid.Columns>
                  <DataGrid.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="DodgerBlue" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="White" />
                  </DataGrid.Resources>
                </DataGrid>
                <Grid DockPanel.Dock="Left">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="160" />
                    <ColumnDefinition Width="166" />
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                  </Grid.RowDefinitions>
                  <Label Content="{x:Static Properties:Resources.SearchEmpId}" Grid.Row="0" Grid.Column="0" />
                  <TextBox Width="160" MaxLength="16" Grid.Row="0" Grid.Column="1" IsEnabled="False" Text="{Binding EmpId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                  <Label Content="{x:Static Properties:Resources.EMP_NAME}" Grid.Row="1" Grid.Column="0" />
                  <TextBox Width="160" Grid.Row="1" Grid.Column="1" MaxLength="16" IsEnabled="False" Text="{Binding EmpName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                  <StackPanel Grid.Column="0" Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Label Content="{Binding PasswordLabel}" Foreground="Red" HorizontalAlignment="Left" Margin="3,4,0,2" VerticalAlignment="Center" />
                    <Label Content="{x:Static Properties:Resources.PASSWORD}" VerticalContentAlignment="Center" />
                  </StackPanel>
                  <!--<TextBox  Grid.Column="1" Grid.Row="2" Width="160" MaxLength="16" VerticalContentAlignment="Center" Text="{Binding PassWord, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />-->
                  <PasswordBox x:Name="pbPassword" Grid.Column="1" Grid.Row="2" Margin="3" TabIndex="1" MaxLength="30" IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}" />
                  <Label Content="{x:Static Properties:Resources.PASSWORD_CHECK}" Grid.Column="0" Grid.Row="3" VerticalContentAlignment="Center" />
                  <!--<TextBox Grid.Column="1" Grid.Row="3"  Width="160" MaxLength="16" VerticalContentAlignment="Center" Text="{Binding CheckPassWord, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />-->
                  <PasswordBox x:Name="pbConfirmPassword" Grid.Column="1" Grid.Row="3" Margin="3" TabIndex="1" MaxLength="30" IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}" />
                  <Label Grid.Column="0" Grid.Row="4" Content="{x:Static Properties:Resources.CheckPackage}"></Label>
                  <CheckBox Grid.Column="1" Grid.Row="4" IsChecked="{Binding CheckPackage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringToBoolConverter}}" IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}"></CheckBox>
                  <Button Grid.Column="1" Grid.Row="5" Command="{Binding ExportExcelCommand}" controls:PermissionService.FunctionId="BP1905060003" Content="{x:Static Properties:Resources.ExportExcelList}" Width="Auto " />
                  <WrapPanel Grid.Column="0" Grid.Row="6" Grid.ColumnSpan="2" HorizontalAlignment="Center">
                    <DataGrid ItemsSource="{Binding ScheduleAuthorizeData}" Width="Auto" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" SelectionMode="Single" SelectionUnit="FullRow" IsEnabled="{Binding UserOperateMode, Converter={StaticResource EnumToNotBooleanConverter}, ConverterParameter={x:Static uiLib:OperateMode.Query}}">
                      <DataGrid.Columns>
                        <!--<DataGridCheckBoxColumn Header="選取" Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringToBoolConverter}}" IsReadOnly="False" />-->
                        <DataGridCheckBoxColumn Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                          <DataGridCheckBoxColumn.HeaderTemplate>
                            <DataTemplate>
                              <CheckBox IsChecked="{Binding IsScheduleAuthorizeAll, ElementName=Vm, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding CheckAllTask, ElementName=Vm}" CommandParameter="ScheduleAuthorize" Content="{x:Static res:Resources.SelectAll}"></CheckBox>
                            </DataTemplate>
                          </DataGridCheckBoxColumn.HeaderTemplate>
                          <DataGridCheckBoxColumn.ElementStyle>
                            <Style TargetType="CheckBox">
                              <Setter Property="VerticalAlignment" Value="Center" />
                              <Setter Property="HorizontalAlignment" Value="Center" />
                              <Setter Property="IsEnabled" Value="{Binding DataContext.UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" />
                            </Style>
                          </DataGridCheckBoxColumn.ElementStyle>
                        </DataGridCheckBoxColumn>
                        <DataGridTextColumn Header="{x:Static Properties:Resources.ScheduleName}" Binding="{Binding Item.ScheduleName}" IsReadOnly="True" />
                      </DataGrid.Columns>
                    </DataGrid>
                  </WrapPanel>
                </Grid>
                <DockPanel>
                  <Label Content="{x:Static Properties:Resources.SET_JOB_GROUP}" HorizontalContentAlignment="Left" Foreground="Red" DockPanel.Dock="Top" />
                  <DataGrid Name="dgGroufpsList" ItemsSource="{Binding GroupList}" DockPanel.Dock="Top" Height="200" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" SelectionMode="Single" SelectionUnit="FullRow" IsReadOnly="True" IsSynchronizedWithCurrentItem="True">
                    <DataGrid.Columns>
                      <DataGridCheckBoxColumn Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <DataGridCheckBoxColumn.HeaderTemplate>
                          <DataTemplate>
                            <CheckBox IsChecked="{Binding IsFuncSelectedAll, ElementName=Vm, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding CheckAllTask, ElementName=Vm}" CommandParameter="FunctionGroup" Content="{x:Static res:Resources.SelectAll}"></CheckBox>
                          </DataTemplate>
                        </DataGridCheckBoxColumn.HeaderTemplate>
                        <DataGridCheckBoxColumn.ElementStyle>
                          <Style TargetType="CheckBox">
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="IsEnabled" Value="{Binding DataContext.UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" />
                          </Style>
                        </DataGridCheckBoxColumn.ElementStyle>
                      </DataGridCheckBoxColumn>
                      <DataGridTextColumn Header="{x:Static Properties:Resources.GRPID}" Binding="{Binding Item.GRP_ID}" />
                      <DataGridTextColumn Header="{x:Static Properties:Resources.GRPNAME}" Binding="{Binding Item.GRP_NAME}" />
                      <DataGridTextColumn Header="{x:Static Properties:Resources.GRPDESC}" Binding="{Binding Item.GRP_DESC}" />
                    </DataGrid.Columns>
                    <DataGrid.Resources>
                      <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="DodgerBlue" />
                      <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="White" />
                    </DataGrid.Resources>
                  </DataGrid>
                  <Label Content="{x:Static Properties:Resources.WorkgroupList}" HorizontalContentAlignment="Left" DockPanel.Dock="Top" Foreground="Red" />
                  <DataGrid Name="dgGrouffpsList" ItemsSource="{Binding WorkgroupList}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" SelectionMode="Single" SelectionUnit="FullRow" IsReadOnly="True" IsSynchronizedWithCurrentItem="True">
                    <DataGrid.Columns>
                      <DataGridCheckBoxColumn Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <DataGridCheckBoxColumn.HeaderTemplate>
                          <DataTemplate>
                            <CheckBox IsChecked="{Binding IsJobSelectedAll, ElementName=Vm, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding CheckAllTask, ElementName=Vm}" CommandParameter="JobGroup" Content="{x:Static res:Resources.SelectAll}"></CheckBox>
                          </DataTemplate>
                        </DataGridCheckBoxColumn.HeaderTemplate>
                        <DataGridCheckBoxColumn.ElementStyle>
                          <Style TargetType="CheckBox">
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="IsEnabled" Value="{Binding DataContext.UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" />
                          </Style>
                        </DataGridCheckBoxColumn.ElementStyle>
                      </DataGridCheckBoxColumn>
                      <DataGridTextColumn Header="{x:Static Properties:Resources.WORK_ID}" Binding="{Binding Item.WORK_ID}" />
                      <DataGridTextColumn Header="{x:Static Properties:Resources.WORK_NAME}" Binding="{Binding Item.WORK_NAME}" />
                      <DataGridTextColumn Header="{x:Static Properties:Resources.WORK_DESC}" Binding="{Binding Item.WORK_DESC}" />
                    </DataGrid.Columns>
                    <DataGrid.Resources>
                      <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="DodgerBlue" />
                      <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="White" />
                    </DataGrid.Resources>
                  </DataGrid>
                </DockPanel>
              </DockPanel>
            </DockPanel>
          </TabItem>
        </TabControl>
      </uiLib:BasicMaster.MainContent>
      <Ellipse Fill="#FFF4F4F5" Height="100" Stroke="Black" Width="100" />
    </uiLib:BasicMaster>
  </telerik:RadBusyIndicator>
</uiLib:Wms3plUserControl>