<?xml version="1.0" encoding="utf-8" ?>
<uiLib:Wms3plUserControl
    x:Class="Wms3pl.WpfClient.P19.Views.P1901710000"
    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    mc:Ignorable="d"
    xmlns:uiLib="clr-namespace:Wms3pl.WpfClient.UILib;assembly=Wms3pl.WpfClient.UILib"
    xmlns:controls="clr-namespace:Wms3pl.WpfClient.UILib.Controls;assembly=Wms3pl.WpfClient.UILib"
    xmlns:common="clr-namespace:Wms3pl.WpfClient.Common;assembly=Wms3pl.WpfClient.Common"
    xmlns:converters="clr-namespace:Wms3pl.WpfClient.Common.Converters;assembly=Wms3pl.WpfClient.Common"
    xmlns:viewModel="clr-namespace:Wms3pl.WpfClient.P19.ViewModel"
    xmlns:Properties="clr-namespace:Wms3pl.WpfClient.P19.Properties"
    xmlns:res="clr-namespace:Wms3pl.WpfClient.Resources;assembly=Wms3pl.WpfClient.Resources"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" 
    x:Name="Window"
    Margin="0,0,0,0"
    HorizontalAlignment="Stretch"
    FontSize="18"
    MinWidth="800"
    controls:PermissionService.FunctionId="P1901710000"
    controls:PermissionService.FunctionName="物流中心出貨指示"
    FormException="{Binding Exception}">
  <uiLib:Wms3plUserControl.DataContext>
    <viewModel:P1901710000_ViewModel x:Name="Vm" />
  </uiLib:Wms3plUserControl.DataContext>
  <uiLib:Wms3plUserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Wms3pl.WpfClient.UILib;component/Generic.xaml" />
      </ResourceDictionary.MergedDictionaries>
      <common:NotConverter x:Key="NotConverter" />
      <converters:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter" />
      <converters:EnumToNotVisibilityConverter x:Key="EnumToNotVisibilityConverter" />
      <converters:NameValuePairConverter x:Key="NameValuePairConverter" />
      <converters:DateTimeToStringConverter x:Key="DateTimeToStringConverter" />
      <converters:StringEmptyToNullConverter x:Key="StringEmptyToNullConverter" />
      <converters:StringToBoolConverter x:Key="StringToBoolConverter" />
      <converters:EnumBooleanConverter x:Key="EnumBooleanConverter" />
      <converters:NameValuePairMultiConverter x:Key="NameValuePairMultiConverter"/>
      <converters:EnumToNotBooleanConverter x:Key="EnumToNotBooleanConverter"/>
      <converters:ZeroPointConverter x:Key="ZeroPointConverter" />
    </ResourceDictionary>
  </uiLib:Wms3plUserControl.Resources>
  <telerik:RadBusyIndicator x:Name="GridBusyIndicator" BusyContent="{x:Static res:Resources.Loading}" IsIndeterminate="False" IsBusy="{Binding IsBusy}">
    <uiLib:BasicMaster x:Name="Master">
      <uiLib:BasicMaster.ToolBarArea>
        <WrapPanel>
          <Button Style="{StaticResource SearchButton}" controls:PermissionService.FunctionId="BP1901710001" Command="{Binding SearchCommand}" />
          <Button Style="{StaticResource EditButton}" controls:PermissionService.FunctionId="BP1901710002" Command="{Binding EditCommand}" />
          <Button Style="{StaticResource CancelButton}" controls:PermissionService.FunctionId="BP1901710003" Command="{Binding CancelCommand}" />
          <Button Style="{StaticResource SaveButton}" controls:PermissionService.FunctionId="BP1901710004" Command="{Binding SaveCommand}" IsEnabled="{Binding Path=(Validation.HasError), ElementName=LayoutRoot, Converter={StaticResource NotConverter}}" />
        </WrapPanel>
      </uiLib:BasicMaster.ToolBarArea>
      <uiLib:BasicMaster.MainContent>
        <TabControl x:Name="LayoutRoot"   SelectedIndex="{Binding SelectedIndex,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
          <TabControl.BindingGroup>
            <BindingGroup Name="errorGroup" />
          </TabControl.BindingGroup>
          <TabItem Header="{x:Static res:Resources.Main}" Name="Main" Width="Auto">
            <!-- 由此處開始加入畫面項目 -->
            <DockPanel DockPanel.Dock="Top">
              <DockPanel>
                <DockPanel DockPanel.Dock="Top">
                  <GroupBox Header="{x:Static res:Resources.QueryCondition}" DockPanel.Dock="Top">
                    <Grid>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <Label Grid.Row="0" Grid.Column="0" Content="{x:Static Properties:Resources.P1901710000_DC_CODE}" Style="{StaticResource LbTitleStyle}" />
                      <ComboBox Grid.Row="0" Grid.Column="1" Style="{StaticResource ComboStyle}"
                            ItemsSource="{Binding DcList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            DisplayMemberPath="Name" SelectedValuePath="Value"
                            SelectedValue="{Binding SelectedDcCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>
                  </GroupBox>
                </DockPanel>
                <DockPanel DockPanel.Dock="Top">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <GroupBox Header="{x:Static Properties:Resources.P1901710000_StartSetting}" Grid.Row="0" Grid.Column="0">
                      <Grid>
                        <Grid.RowDefinitions>
                          <RowDefinition Height="Auto"/>
                          <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <CheckBox Grid.Row="0" Grid.Column="0" Style="{StaticResource CheckStyle}" Content="{x:Static Properties:Resources.P1901710000_OpenAutoAllocStock}" IsChecked="{Binding F190105Data.OPEN_AUTO_ALLOC_STOCK,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource StringToBoolConverter}}" IsEnabled="{Binding UserOperateMode ,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Edit}}"/>
                        <CheckBox Grid.Row="1" Grid.Column="0" Style="{StaticResource CheckStyle}" Content="在人工倉揀貨完成且第一箱容器放入集貨場後，才派發自動倉揀貨任務" IsChecked="{Binding F190105Data.WAIT_SEND_AUTO_PICK,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource StringToBoolConverter}}" IsEnabled="{Binding UserOperateMode ,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Edit}}"/>
                      </Grid>
                    </GroupBox>
                    <GroupBox Header="{x:Static Properties:Resources.P1901710000_PickingListSegmentationConditions}" Grid.Row="0" Grid.Column="1">
                      <Grid>
                        <Grid.RowDefinitions>
                          <RowDefinition Height="Auto"/>
                          <RowDefinition Height="Auto"/>
                          <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto"/>
                          <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Row="0" Grid.Column="0" Style="{StaticResource  LbStyle}" Content="{x:Static Properties:Resources.P1901710000_PickOrderMaxRecord}"/>
                        <TextBox Grid.Row="0" Grid.Column="1" Style="{StaticResource TxtStyle}" Text="{Binding F190105Data.PICKORDER_MAX_RECORD,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxLength="3" IsEnabled="{Binding UserOperateMode ,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Edit}}"/>
                        <Label Grid.Row="1" Grid.Column="0" Style="{StaticResource LbStyle}" Content="{x:Static Properties:Resources.P1901710000_OrderMaxRecord}"/>
                        <TextBox Grid.Row="1" Grid.Column="1" Style="{StaticResource TxtStyle}" Text="{Binding F190105Data.ORDER_MAX_RECORD,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxLength="3" IsEnabled="{Binding UserOperateMode ,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Edit}}"/>
                        <Label Grid.Row="2" Grid.Column="0" Style="{StaticResource LbStyle}" Content="{x:Static Properties:Resources.P1901710000_OrderMaxItemCnt}"/>
                        <TextBox Grid.Row="2" Grid.Column="1" Style="{StaticResource TxtStyle}" Text="{Binding F190105Data.ORDER_MAX_ITEMCNT,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxLength="3" IsEnabled="{Binding UserOperateMode ,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Edit}}"/>
                      </Grid>
                    </GroupBox>
                    <GroupBox Header="{x:Static Properties:Resources.P1901710000_pdaPresetAllocation}" Grid.Row="1" Grid.Column="0">
                      <Grid>
                        <Grid.RowDefinitions>
                          <RowDefinition Height="Auto"/>
                          <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto"/>
                          <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Row="0" Grid.Column="0" Style="{StaticResource  LbStyle}" Content="{x:Static Properties:Resources.P1901710000_B2BPdaPickPecent}"/>
                        <TextBox Grid.Row="0" Grid.Column="1"  Text="{Binding F190105Data.B2B_PDA_PICK_PECENT,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,StringFormat=0}" IsEnabled="{Binding UserOperateMode ,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Edit}}"/>
                        <Label Grid.Row="1" Grid.Column="0" Style="{StaticResource  LbStyle}" Content="{x:Static Properties:Resources.P1901710000_B2BPdaPickPrecent}"/>
                        <TextBox Grid.Row="1" Grid.Column="1" Style="{StaticResource TxtStyle}" Text="{Binding F190105Data.B2C_PDA_PICK_PERCENT,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,StringFormat=0}" IsEnabled="{Binding UserOperateMode ,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Edit}}"/>
                      </Grid>
                    </GroupBox>
                    <WrapPanel Grid.Row="2" Grid.Column="0" Orientation="Vertical">
                      <CheckBox Content="是否指定周轉箱" Style="{StaticResource CheckStyle}" IsChecked="{Binding F190105Data.IS_DIRECT_CONTAINER_TYPE,Mode=OneWay,Converter={StaticResource StringToBoolConverter},ConverterParameter='1'}" IsEnabled="False"/>
                      <GroupBox Header="基礎周轉箱設定" >
                        <Grid>
                          <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                          </Grid.RowDefinitions>
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                          </Grid.ColumnDefinitions>
                          <Label Grid.Row="0" Grid.Column="0" Style="{StaticResource  LbStyle}" Content="最長邊(內徑)"/>
                          <TextBox Grid.Row="0" Grid.Column="1" Style="{StaticResource TxtStyle}" Text="{Binding baseContainerMaxLength,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding UserOperateMode ,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Edit}}" />
                          <Label Grid.Row="0" Grid.Column="2" Style="{StaticResource  LbStyle}" Content="cm"/>
                          <Label Grid.Row="0" Grid.Column="3" Style="{StaticResource  LbStyle}" Content="次長邊(內徑)"/>
                          <TextBox Grid.Row="0" Grid.Column="4" Style="{StaticResource TxtStyle}" Text="{Binding baseContainerMidLength,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding UserOperateMode ,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Edit}}" />
                          <Label Grid.Row="0" Grid.Column="5" Style="{StaticResource  LbStyle}" Content="cm"/>
                          <Label Grid.Row="1" Grid.Column="0" Style="{StaticResource  LbStyle}" Content="最短邊(內徑)"/>
                          <TextBox Grid.Row="1" Grid.Column="1" Style="{StaticResource TxtStyle}" Text="{Binding baseContainerMinLength,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding UserOperateMode ,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Edit}}" />
                          <Label Grid.Row="1" Grid.Column="2" Style="{StaticResource  LbStyle}" Content="cm"/>
                          <Label Grid.Row="1" Grid.Column="3" Style="{StaticResource  LbStyle}" Content="可用容積"/>
                          <TextBox Grid.Row="1" Grid.Column="4" Style="{StaticResource TxtStyle}" Text="{Binding baseContainerVolumn,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding UserOperateMode ,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Edit}}"/>
                          <TextBlock Grid.Row="1" Grid.Column="5" VerticalAlignment="Center" ><Run Text="cm"/><Run Text="3" FontSize="12" BaselineAlignment="Superscript"/></TextBlock>
                        </Grid>
                      </GroupBox>
                    </WrapPanel>
                  </Grid>
                </DockPanel>
              </DockPanel>
            </DockPanel>
          </TabItem>
          <TabItem Header="{x:Static Properties:Resources.P1901710000_AllocationInventorySetting}"  Width="Auto">
            <DockPanel DockPanel.Dock="Top">
              <DockPanel>
                <DockPanel DockPanel.Dock="Top">
                  <GroupBox Header="{x:Static res:Resources.QueryCondition}" DockPanel.Dock="Top">
                    <Grid>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <Label Grid.Row="0" Grid.Column="0" Content="{x:Static Properties:Resources.P1901710000_DC_CODE}" Style="{StaticResource LbTitleStyle}" />
                      <ComboBox Grid.Row="0" Grid.Column="1" Style="{StaticResource ComboStyle}"
                            ItemsSource="{Binding DcList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            DisplayMemberPath="Name" SelectedValuePath="Value"
                            SelectedValue="{Binding SelectedDcCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>
                  </GroupBox>
                </DockPanel>
                <DockPanel >
                  <WrapPanel DockPanel.Dock ="Top">
                    <Grid>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <Label Grid.Row="0" Grid.Column="0" Style="{StaticResource LbTitleStyle}" Content="{x:Static Properties:Resources.P1901710000_StartTime}"/>
                      <TextBox Grid.Row="0" Grid.Column="1" Style="{StaticResource TxtStyle}" Text="{Binding AllocationStockStartTime,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Edit}}" Width="150" Height="30" />
                      <!--<TextBox Style="{StaticResource TxtStyle}" Text="{Binding AllocationStockStartTime,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding UserOperateMode ,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Edit}}" MaxLength="5"/>-->
                      <!--<TimePicker  Value="{Binding AllocationStockStartTime,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding UserOperateMode ,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Edit}}"/>-->
                      <Label Grid.Row="0" Grid.Column="2" Style="{StaticResource LbTitleStyle}" Content="{x:Static Properties:Resources.P1901710000_EndTime}"/>
                      <TextBox Grid.Row="0" Grid.Column="3" Style="{StaticResource TxtStyle}" Text="{Binding Path=AllocationStockEndTime,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding UserOperateMode ,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Edit}}" Width="150" Height="30" />
                      <Label Grid.Row="0" Grid.Column="4" Style="{StaticResource LbTitleStyle}" Content="{x:Static Properties:Resources.P1901710000_ExecuteEveryFewMinutes}"/>
                      <TextBox Grid.Row="0" Grid.Column="5" Style="{StaticResource TxtStyle}" Text="{Binding AllocationStockPeriod,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding UserOperateMode ,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Edit}}" Width="150" Height="30"/>
                      <GroupBox Grid.Row="0" Grid.Column="6" Header="{x:Static Properties:Resources.P1901710000_NoticeItem}" Width="380" BorderBrush="Red">
                        <TextBlock FontSize="14"  TextWrapping="Wrap" Text="{x:Static Properties:Resources.P1901710000_Wording_1}" />
                      </GroupBox>
                    </Grid>
                  </WrapPanel>
                  <WrapPanel  DockPanel.Dock="Top" Margin="5" Grid.Row="1" Grid.Column="0">
                    <Button Content="{x:Static Properties:Resources.AddDetail}" Width="100" Height="35" controls:PermissionService.FunctionId="BP1901710005" Command="{Binding AddAllocationStockDetailCommand}" />
                    <Button Content="{x:Static Properties:Resources.DelDetail}" Width="100" Height="35" Margin="20,0" controls:PermissionService.FunctionId="BP1901710006" Command="{Binding DelAllocationStockDetailCommand}" />
                  </WrapPanel>
                  <controls:ValidationDataGrid Name="dgList" Style="{StaticResource DgStyle}" ItemsSource="{Binding AllocationStockScheduleSetting,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" CellStyle="{StaticResource SingleClickEdit}" SelectionUnit="FullRow" SelectionMode="Single"  SelectedItem="{Binding SelectedData,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False" IsEnabled="{Binding UserOperateMode ,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Edit}}">
                    <DataGrid.Columns>
                      <DataGridCheckBoxColumn Binding="{Binding IsSelected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Width="Auto">
                        <DataGridCheckBoxColumn.HeaderTemplate>
                          <DataTemplate>
                            <CheckBox Style="{StaticResource CheckStyle}" Content="{x:Static res:Resources.SelectAll}" IsChecked="{Binding DataContext.IsCheckAllAllocationStockSchedule, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl},Mode = TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                          </DataTemplate>
                        </DataGridCheckBoxColumn.HeaderTemplate>
                        <DataGridCheckBoxColumn.ElementStyle>
                          <Style TargetType="CheckBox">
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="HorizontalAlignment" Value="Center" />
                          </Style>
                        </DataGridCheckBoxColumn.ElementStyle>
                      </DataGridCheckBoxColumn>
                      <DataGridTextColumn Header="{x:Static Properties:Resources.P1901050000_START_TIME}" Binding="{Binding Item.START_TIME}" IsReadOnly="True" />
                      <DataGridTextColumn Header="{x:Static Properties:Resources.P1901050000_END_TIME}" Binding="{Binding Item.END_TIME}" IsReadOnly="True"/>
                      <DataGridTextColumn Header="{x:Static Properties:Resources.P1901050000_PERIOD}" Binding="{Binding Item.PERIOD}" IsReadOnly="True"/>
                      <DataGridTextColumn Header="{x:Static Properties:Resources.P1901050000_CRT_STAFF}" Binding="{Binding  Item.CRT_STAFF}" IsReadOnly="True"/>
                      <DataGridTextColumn Header="{x:Static Properties:Resources.P1901050000_CRT_DATE}" Binding="{Binding  Item.CRT_DATE,Converter={StaticResource DateTimeToStringConverter}, ConverterParameter='yyyy/MM/dd HH:mm:ss'}" IsReadOnly="True"/>
                    </DataGrid.Columns>
                  </controls:ValidationDataGrid>

                </DockPanel>
              </DockPanel>
            </DockPanel>
          </TabItem>
          <TabItem Header="{x:Static Properties:Resources.P1901710000_PickingScheduleSetting}" Width="Auto">
            <DockPanel DockPanel.Dock="Top">
              <DockPanel>
                <DockPanel DockPanel.Dock="Top">
                  <GroupBox Header="{x:Static res:Resources.QueryCondition}" DockPanel.Dock="Top">
                    <Grid>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <Label Grid.Row="0" Grid.Column="0" Content="{x:Static Properties:Resources.P1901710000_DC_CODE}" Style="{StaticResource LbTitleStyle}" />
                      <ComboBox Grid.Row="0" Grid.Column="1" Style="{StaticResource ComboStyle}"
                            ItemsSource="{Binding DcList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            DisplayMemberPath="Name" SelectedValuePath="Value"
                            SelectedValue="{Binding SelectedDcCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>
                  </GroupBox>
                </DockPanel>
                <DockPanel >
                  <WrapPanel DockPanel.Dock ="Top">
                    <Grid>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <Label Grid.Row="0" Grid.Column="0" Style="{StaticResource LbTitleStyle}" Content="{x:Static Properties:Resources.P1901710000_StartTime}"/>

                      <TextBox Grid.Row="0" Grid.Column="1" Style="{StaticResource TxtStyle}" Text="{Binding Path=PickingStartTime,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding UserOperateMode ,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Edit}}"   Width="150" Height="30" />
                      <Label Grid.Row="0" Grid.Column="2" Style="{StaticResource LbTitleStyle}" Content="{x:Static Properties:Resources.P1901710000_EndTime}"/>
                      <TextBox Grid.Row="0" Grid.Column="3" Style="{StaticResource TxtStyle}" Text="{Binding Path=PickingEndTime,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding UserOperateMode ,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Edit}}"  Width="150" Height="30"/>
                      <Label Grid.Row="0" Grid.Column="4" Style="{StaticResource LbTitleStyle}" Content="{x:Static Properties:Resources.P1901710000_ExecuteEveryFewMinutes}"/>
                      <TextBox Grid.Row="0" Grid.Column="5" Style="{StaticResource TxtStyle}"  Text="{Binding PickingPeriod,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding UserOperateMode ,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Edit}}" Width="150" Height="30"/>
                      <GroupBox Grid.Row="0" Grid.Column="6" Header="{x:Static Properties:Resources.P1901710000_NoticeItem}" Width="380" BorderBrush="Red">
                        <TextBlock FontSize="14"  TextWrapping="Wrap" Text="{x:Static Properties:Resources.P1901710000_Wording_1}" />
                      </GroupBox>
                    </Grid>
                  </WrapPanel>
                  <WrapPanel  DockPanel.Dock="Top" Margin="5">
                    <Button Content="{x:Static Properties:Resources.AddDetail}" Width="100" Height="35" controls:PermissionService.FunctionId="BP1901710007" Command="{Binding AddPickingDetailCommand}" />
                    <Button Content="{x:Static Properties:Resources.DelDetail}" Width="100" Height="35" Margin="20,0" controls:PermissionService.FunctionId="BP1901710008" Command="{Binding DelPickingDetailCommand}" />
                  </WrapPanel>
                  <controls:ValidationDataGrid Style="{StaticResource DgStyle}" ItemsSource="{Binding PickingScheduleSetting,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" CellStyle="{StaticResource SingleClickEdit}" SelectionUnit="FullRow" SelectionMode="Single"  SelectedItem="{Binding SelectedData,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False" IsEnabled="{Binding UserOperateMode ,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Edit}}" >
                    <DataGrid.Columns>
                      <DataGridCheckBoxColumn Binding="{Binding IsSelected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Width="Auto">
                        <DataGridCheckBoxColumn.HeaderTemplate>
                          <DataTemplate>
                            <CheckBox Style="{StaticResource CheckStyle}" Content="{x:Static res:Resources.SelectAll}" IsChecked="{Binding DataContext.IsCheckAllBatchPickNoSchedule, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl},Mode = TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                          </DataTemplate>
                        </DataGridCheckBoxColumn.HeaderTemplate>
                        <DataGridCheckBoxColumn.ElementStyle>
                          <Style TargetType="CheckBox">
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="HorizontalAlignment" Value="Center" />
                          </Style>
                        </DataGridCheckBoxColumn.ElementStyle>
                      </DataGridCheckBoxColumn>
                      <DataGridTextColumn Header="{x:Static Properties:Resources.P1901050000_START_TIME}" Binding="{Binding Item.START_TIME}" IsReadOnly="True" />
                      <DataGridTextColumn Header="{x:Static Properties:Resources.P1901050000_END_TIME}" Binding="{Binding Item.END_TIME}" IsReadOnly="True"/>
                      <DataGridTextColumn Header="{x:Static Properties:Resources.P1901050000_PERIOD}" Binding="{Binding Item.PERIOD}" IsReadOnly="True"/>
                      <DataGridTextColumn Header="{x:Static Properties:Resources.P1901050000_CRT_STAFF}" Binding="{Binding  Item.CRT_STAFF}" IsReadOnly="True"/>
                      <DataGridTextColumn Header="{x:Static Properties:Resources.P1901050000_CRT_DATE}" Binding="{Binding  Item.CRT_DATE,Converter={StaticResource DateTimeToStringConverter}, ConverterParameter='yyyy/MM/dd HH:mm:ss'}" IsReadOnly="True"/>
                    </DataGrid.Columns>
                  </controls:ValidationDataGrid>
                </DockPanel>
              </DockPanel>
            </DockPanel>
          </TabItem>
        </TabControl>

      </uiLib:BasicMaster.MainContent>
    </uiLib:BasicMaster>
  </telerik:RadBusyIndicator>
</uiLib:Wms3plUserControl>