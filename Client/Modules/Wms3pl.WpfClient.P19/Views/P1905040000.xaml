<?xml version="1.0" encoding="utf-8"?>
<uiLib:Wms3plUserControl x:Class="Wms3pl.WpfClient.P19.Views.P1905040000" xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d" xmlns:uiLib="clr-namespace:Wms3pl.WpfClient.UILib;assembly=Wms3pl.WpfClient.UILib" xmlns:controls="clr-namespace:Wms3pl.WpfClient.UILib.Controls;assembly=Wms3pl.WpfClient.UILib" xmlns:common="clr-namespace:Wms3pl.WpfClient.Common;assembly=Wms3pl.WpfClient.Common" xmlns:viewModel="clr-namespace:Wms3pl.WpfClient.P19.ViewModel" xmlns:Properties="clr-namespace:Wms3pl.WpfClient.P19.Properties" xmlns:res="clr-namespace:Wms3pl.WpfClient.Resources;assembly=Wms3pl.WpfClient.Resources" x:Name="Window" Margin="0,0,0,0" HorizontalAlignment="Stretch" FontSize="18" MinWidth="800" controls:PermissionService.FunctionId="P1905040000" controls:PermissionService.FunctionName="工作群組設定" xmlns:converter="clr-namespace:Wms3pl.WpfClient.Common.Converters;assembly=Wms3pl.WpfClient.Common" FormException="{Binding Exception}">
  <uiLib:Wms3plUserControl.DataContext>
    <viewModel:P1905040000_ViewModel x:Name="Vm" />
  </uiLib:Wms3plUserControl.DataContext>
  <uiLib:Wms3plUserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Wms3pl.WpfClient.UILib;component/Generic.xaml" />
      </ResourceDictionary.MergedDictionaries>
      <common:NotConverter x:Key="NotConverter" />
      <converter:CheckStateConverter x:Key="CheckStateConverter" />
      <converter:StringToBoolConverter x:Key="StringToBoolConverter" />
      <converter:EnumToNotBooleanConverter x:Key="EnumToNotBooleanConverter" />
      <converter:EnumBooleanConverter x:Key="EnumBooleanConverter" />
      <converter:EnumToNotVisibilityConverter x:Key="EnumToNotVisibilityConverter" />
      <Style TargetType="WrapPanel">
        <Setter Property="Margin" Value="10" />
      </Style>
      <Style TargetType="TextBox" BasedOn="{StaticResource TxtStyle}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
      </Style>
    </ResourceDictionary>
  </uiLib:Wms3plUserControl.Resources>
  <telerik:RadBusyIndicator x:Name="GridBusyIndicator" BusyContent="{x:Static res:Resources.Loading}" IsIndeterminate="False" IsBusy="{Binding IsBusy}">
    <uiLib:BasicMaster x:Name="Master">
      <uiLib:BasicMaster.ToolBarArea>
        <WrapPanel>
          <Button Style="{StaticResource SearchButton}" controls:PermissionService.FunctionId="BP1905040004" Command="{Binding SearchCommand}" />
          <Button Style="{StaticResource AddButton}" controls:PermissionService.FunctionId="BP1905040001" Command="{Binding AddCommand}" />
          <Button Style="{StaticResource EditButton}" controls:PermissionService.FunctionId="BP1905040006" Command="{Binding EditCommand}" />
          <Button Style="{StaticResource CancelButton}" controls:PermissionService.FunctionId="BP1905040005" Command="{Binding CancelCommand}" />
          <Button Style="{StaticResource DeleteButton}" controls:PermissionService.FunctionId="BP1905040003" Command="{Binding DeleteCommand}" />
          <Button Style="{StaticResource SaveButton}" controls:PermissionService.FunctionId="BP1905040002" Command="{Binding SaveCommand}" IsEnabled="{Binding Path=(Validation.HasError), ElementName=LayoutRoot, Converter={StaticResource NotConverter}}" />
        </WrapPanel>
      </uiLib:BasicMaster.ToolBarArea>
      <uiLib:BasicMaster.MainContent>
        <TabControl x:Name="LayoutRoot">
          <TabControl.BindingGroup>
            <BindingGroup Name="errorGroup" />
          </TabControl.BindingGroup>
          <TabItem Header="{x:Static res:Resources.Main}" Width="Auto">
            <DockPanel>
              <!-- 由此處開始加入畫面項目 -->
              <DockPanel DockPanel.Dock="Top">
                <GroupBox Header="{x:Static res:Resources.QueryCondition}">
                  <WrapPanel Orientation="Horizontal">
                    <Label Content="{x:Static Properties:Resources.hGroupName}" Foreground="Blue" />
                    <TextBox Name="txtSearchGroupName" VerticalContentAlignment="Center" MaxLength="30" Width="400" Text="{Binding SearchGroupName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                  </WrapPanel>
                </GroupBox>
              </DockPanel>
              <DockPanel>
                <DataGrid Name="dgGroupList" Width="400" ItemsSource="{Binding GroupList}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" SelectionMode="Single" SelectionUnit="FullRow" IsReadOnly="True" IsEnabled="{Binding UserOperateMode, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static uiLib:OperateMode.Query}}" SelectedItem="{Binding SelectedGroupItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                  <DataGrid.Columns>
                    <DataGridTextColumn Header="{x:Static Properties:Resources.GRP_ID}" Binding="{Binding GRP_ID}" Width="60*" />
                    <DataGridTextColumn Header="{x:Static Properties:Resources.GRP_NAME}" Binding="{Binding GRP_NAME}" Width="180*" />
                    <DataGridTextColumn Header="{x:Static Properties:Resources.GRP_DESC}" Binding="{Binding GRP_DESC}" Width="140*" />
                  </DataGrid.Columns>
                </DataGrid>
              </DockPanel>
              <DockPanel Margin="0,-0.2,0,0">
                <WrapPanel Orientation="Vertical">
                  <WrapPanel Orientation="Horizontal" Visibility="{Binding UserOperateMode, Converter={StaticResource EnumToNotVisibilityConverter}, ConverterParameter={x:Static uiLib:OperateMode.Add}}">
                    <Label Content="{x:Static Properties:Resources.GRP_ID}" />
                    <TextBox IsEnabled="False" Text="{Binding EditableGroupItem.GRP_ID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="60" />
                  </WrapPanel>
                  <WrapPanel Orientation="Horizontal">
                    <Label Content="{x:Static Properties:Resources.GRP_NAME}" />
                    <TextBox MaxLength="30" Name="txtGroupName" Text="{Binding EditableGroupItem.GRP_NAME, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" Width="180" IsEnabled="{Binding UserOperateMode, Converter={StaticResource EnumToNotBooleanConverter}, ConverterParameter={x:Static uiLib:OperateMode.Query}}" />
                  </WrapPanel>
                  <WrapPanel Orientation="Horizontal">
                    <Label Content="{x:Static Properties:Resources.GRP_DESC}" />
                    <TextBox MaxLength="60" Text="{Binding EditableGroupItem.GRP_DESC, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="180" IsEnabled="{Binding UserOperateMode, Converter={StaticResource EnumToNotBooleanConverter}, ConverterParameter={x:Static uiLib:OperateMode.Query}}" />
                  </WrapPanel>
                  <WrapPanel Orientation="Horizontal">
                    <CheckBox Name="chkShowInfo" IsChecked="{Binding EditableGroupItem.SHOWINFO, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringToBoolConverter}}" Content="{x:Static Properties:Resources.SHOWINFO}" Margin="3,0,0,0" IsEnabled="{Binding UserOperateMode, Converter={StaticResource EnumToNotBooleanConverter}, ConverterParameter={x:Static uiLib:OperateMode.Query}}" />
                  </WrapPanel>
                  <WrapPanel>
                    <DataGrid ItemsSource="{Binding ScheduleAuthorizeData}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" SelectionMode="Single" SelectionUnit="FullRow" IsEnabled="{Binding UserOperateMode, Converter={StaticResource EnumToNotBooleanConverter}, ConverterParameter={x:Static uiLib:OperateMode.Query}}">
                      <DataGrid.Columns>
                        <!--<DataGridCheckBoxColumn Header="選取" Binding="{Binding Checked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringToBoolConverter}}" IsReadOnly="False" />-->
                        <DataGridCheckBoxColumn Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                          <DataGridCheckBoxColumn.HeaderTemplate>
                            <DataTemplate>
                              <CheckBox IsChecked="{Binding IsScheduleAuthorizeAll, ElementName=Vm, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding CheckAllTask, ElementName=Vm}" CommandParameter="ScheduleAuthorize" Content="{x:Static res:Resources.SelectAll}"></CheckBox>
                            </DataTemplate>
                          </DataGridCheckBoxColumn.HeaderTemplate>
                          <DataGridCheckBoxColumn.ElementStyle>
                            <Style TargetType="CheckBox">
                              <Setter Property="VerticalAlignment" Value="Center" />
                              <Setter Property="HorizontalAlignment" Value="Center" />
                              <Setter Property="IsEnabled" Value="{Binding DataContext.UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" />
                            </Style>
                          </DataGridCheckBoxColumn.ElementStyle>
                        </DataGridCheckBoxColumn>
                        <DataGridTextColumn Header="{x:Static Properties:Resources.ScheduleName}" Binding="{Binding Item.ScheduleName}" IsReadOnly="True" />
                      </DataGrid.Columns>
                    </DataGrid>
                  </WrapPanel>
                </WrapPanel>
              </DockPanel>
              <DockPanel LastChildFill="True">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                  </Grid.RowDefinitions>
                  <Label Grid.Row="0" Grid.Column="0" DockPanel.Dock="Top" Content="{x:Static Properties:Resources.SET_EXPANDABLE_FUNC_NAME}" Foreground="Red"></Label>
                  <ScrollViewer Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="3">
                  <telerik:RadTreeView  BorderThickness="1" Height="auto" FontSize="14" Name="tvTreeView" IsOptionElementsEnabled="True" IsTriStateMode="False" IsVirtualizing="True" SelectionMode="Single" BorderBrush="DarkGray" AutoScrollToSelectedItem="True" ItemsSource="{Binding P190504FunCodes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedP190504FunNode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Checked="RadTreeView_Checked" Unchecked="RadTreeView_Unchecked">
                    <telerik:RadTreeView.ItemTemplate>
                      <HierarchicalDataTemplate ItemsSource="{Binding FunNodes}">
                        <TreeViewItem Header="{Binding Name}" />
                      </HierarchicalDataTemplate>
                    </telerik:RadTreeView.ItemTemplate>
                    <telerik:RadTreeView.ItemContainerStyle>
                      <Style TargetType="telerik:RadTreeViewItem">
                        <Setter Property="IsEnabled" Value="{Binding DataContext.UserOperateMode, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}, Converter={StaticResource EnumToNotBooleanConverter}, ConverterParameter={x:Static uiLib:OperateMode.Query}}" />
                        <Setter Property="IsExpanded" Value="{Binding IsExpend,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                        <Setter Property="CheckState" Value="{Binding IsChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource CheckStateConverter}}" />
                      </Style>
                    </telerik:RadTreeView.ItemContainerStyle>
                  </telerik:RadTreeView>
                  </ScrollViewer>
                                </Grid>
              </DockPanel>
            </DockPanel>
          </TabItem>
        </TabControl>
      </uiLib:BasicMaster.MainContent>
    </uiLib:BasicMaster>
  </telerik:RadBusyIndicator>
</uiLib:Wms3plUserControl>