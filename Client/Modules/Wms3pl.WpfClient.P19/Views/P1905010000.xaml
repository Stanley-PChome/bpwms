<?xml version="1.0" encoding="utf-8"?>
<uiLib:Wms3plUserControl x:Class="Wms3pl.WpfClient.P19.Views.P1905010000" xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d" xmlns:uiLib="clr-namespace:Wms3pl.WpfClient.UILib;assembly=Wms3pl.WpfClient.UILib" xmlns:controls="clr-namespace:Wms3pl.WpfClient.UILib.Controls;assembly=Wms3pl.WpfClient.UILib" xmlns:common="clr-namespace:Wms3pl.WpfClient.Common;assembly=Wms3pl.WpfClient.Common" xmlns:viewModel="clr-namespace:Wms3pl.WpfClient.P19.ViewModel" xmlns:Properties="clr-namespace:Wms3pl.WpfClient.P19.Properties" xmlns:res="clr-namespace:Wms3pl.WpfClient.Resources;assembly=Wms3pl.WpfClient.Resources" x:Name="Window" Margin="0,0,0,0" HorizontalAlignment="Stretch" FontSize="18" MinWidth="800" xmlns:converter="clr-namespace:Wms3pl.WpfClient.Common.Converters;assembly=Wms3pl.WpfClient.Common" controls:PermissionService.FunctionId="P1905010000" controls:PermissionService.FunctionName="人員主檔維護" FormException="{Binding Exception}">
  <uiLib:Wms3plUserControl.DataContext>
    <viewModel:P1905010000_ViewModel x:Name="Vm" />
  </uiLib:Wms3plUserControl.DataContext>
  <uiLib:Wms3plUserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Wms3pl.WpfClient.UILib;component/Generic.xaml" />
      </ResourceDictionary.MergedDictionaries>
      <common:NotConverter x:Key="NotConverter" />
      <converter:CheckStateConverter x:Key="CheckStateConverter" />
      <converter:StringToBoolConverter x:Key="StringToBoolConverter" />
      <converter:StringToNotBoolConverter x:Key="StringToNotBoolConverter" />
      <converter:EnumToNotBooleanConverter x:Key="EnumToNotBooleanConverter" />
      <converter:StringEmptyToNullConverter x:Key="StringEmptyToNullConverter" />
      <converter:EnumToNotVisibilityConverter x:Key="EnumToNotVisibilityConverter" />
      <Style TargetType="WrapPanel">
        <Setter Property="Margin" Value="5" />
      </Style>
      <Style TargetType="TextBox" BasedOn="{StaticResource TxtStyle}"></Style>
      <Style TargetType="Button">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Width" Value="100" />
      </Style>
    </ResourceDictionary>
  </uiLib:Wms3plUserControl.Resources>
  <telerik:RadBusyIndicator x:Name="GridBusyIndicator" BusyContent="{x:Static res:Resources.Loading}" IsIndeterminate="False" IsBusy="{Binding IsBusy}">
    <uiLib:BasicMaster x:Name="Master">
      <uiLib:BasicMaster.ToolBarArea>
        <WrapPanel>
          <Button Style="{StaticResource FirstButton}" controls:PermissionService.FunctionId="BP1905010001" Command="{Binding MoveFirstCommand}" />
          <Button Style="{StaticResource PriorButton}" controls:PermissionService.FunctionId="BP1905010002" Command="{Binding MovePreviousCommand}" />
          <Button Style="{StaticResource NextButton}" controls:PermissionService.FunctionId="BP1905010003" Command="{Binding MoveNextCommand}" />
          <Button Style="{StaticResource LastButton}" controls:PermissionService.FunctionId="BP1905010004" Command="{Binding MoveLastCommand}" />
          <Button Style="{StaticResource SearchButton}" controls:PermissionService.FunctionId="BP1905010009" Command="{Binding SearchCommand}" />
          <Button Style="{StaticResource AddButton}" controls:PermissionService.FunctionId="BP1905010005" Command="{Binding AddCommand}" />
          <Button Style="{StaticResource EditButton}" controls:PermissionService.FunctionId="BP1905010010" Command="{Binding EditCommand}" />
          <Button Style="{StaticResource CancelButton}" controls:PermissionService.FunctionId="BP1905010006" Command="{Binding CancelCommand}" />
          <Button Style="{StaticResource DeleteButton}" controls:PermissionService.FunctionId="BP1905010008" Command="{Binding DeleteCommand}" />
          <Button Style="{StaticResource SaveButton}" controls:PermissionService.FunctionId="BP1905010007" Command="{Binding SaveCommand}" IsEnabled="{Binding Path=(Validation.HasError), ElementName=LayoutRoot, Converter={StaticResource NotConverter}}" />
        </WrapPanel>
      </uiLib:BasicMaster.ToolBarArea>
      <uiLib:BasicMaster.MainContent>
        <TabControl x:Name="LayoutRoot">
          <TabControl.BindingGroup>
            <BindingGroup Name="errorGroup" />
          </TabControl.BindingGroup>
          <TabItem Header="{x:Static res:Resources.Main}" Width="Auto">
            <DockPanel>
              <!-- 由此處開始加入畫面項目 -->
              <DockPanel DockPanel.Dock="Top">
                <GroupBox Header="{x:Static res:Resources.QueryCondition}">
                  <WrapPanel Orientation="Horizontal">
                    <Label Content="{x:Static Properties:Resources.SearchEmpId}" Style="{StaticResource LbTitleStyle}" />
                    <TextBox Name="txtEmpId" VerticalContentAlignment="Center" MaxLength="16" Text="{Binding SearchEmpId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                  </WrapPanel>
                </GroupBox>
              </DockPanel>
              <Grid DockPanel.Dock="Left">
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <GroupBox Grid.Column="0" Grid.Row="0" Header="" IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Row="0" Grid.Column="0" Content="{x:Static Properties:Resources.SearchEmpId}" Style="{StaticResource LbTitleStyle}" />
                    <TextBox Grid.Row="0" Grid.Column="1" Name="txtEmpIdResult" Text="{Binding CurrentRecord.EMP_ID, Mode=TwoWay, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" MaxLength="16" IsEnabled="{Binding IsNewRecord, UpdateSourceTrigger=PropertyChanged}" />
                    <Label Grid.Row="0" Grid.Column="2" Content="{x:Static Properties:Resources.EMP_NAME}" Style="{StaticResource LbTitleStyle}" />
                    <TextBox Grid.Row="0" Grid.Column="3" Name="txtEmpName" Text="{Binding CurrentRecord.EMP_NAME, Mode=TwoWay, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" MaxLength="16" />
                    <!--<CheckBox Grid.Row="0" Grid.Column="4" Content="{x:Static Properties:Resources.ISCOMMON}" IsChecked="{Binding CurrentRecord.ISCOMMON, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringToBoolConverter}}" VerticalAlignment="Center" VerticalContentAlignment="Center" Margin="5,0,0,0" />-->
                    <Label Grid.Row="1" Grid.Column="0" Content="{x:Static Properties:Resources.ITEM_SPEC}" Style="{StaticResource LbTitleStyle}" />
                    <ComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{Binding DepList, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True}" DisplayMemberPath="Name" SelectedValuePath="Value" Style="{StaticResource ComboStyle}" SelectedValue="{Binding CurrentRecord.DEP_ID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True}" />
                    <Label Grid.Row="1" Grid.Column="2" Content="{x:Static Properties:Resources.TEL_EXTENSION}" Style="{StaticResource LbTitleStyle}" />
                    <TextBox Grid.Row="1" Grid.Column="3" Text="{Binding CurrentRecord.TEL_EXTENSION, Mode=TwoWay, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" MaxLength="5" />
                    <Label Grid.Row="2" Grid.Column="0" Content="{x:Static Properties:Resources.MOBILE}" Style="{StaticResource LbTitleStyle}" />
                    <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding CurrentRecord.MOBILE, Mode=TwoWay, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" MaxLength="15" />
                    <Label Grid.Row="2" Grid.Column="2" Content="{x:Static Properties:Resources.SHORT_MOBILE}" Style="{StaticResource LbTitleStyle}" />
                    <TextBox Grid.Row="2" Grid.Column="3" Text="{Binding CurrentRecord.SHORT_MOBILE, Mode=TwoWay, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" MaxLength="10" />
                    <Label Grid.Row="3" Grid.Column="0" Content="{x:Static Properties:Resources.EMAIL}" Style="{StaticResource LbTitleStyle}" />
                    <TextBox Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="3" Width="395" Text="{Binding CurrentRecord.EMAIL, Mode=TwoWay, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringEmptyToNullConverter}}" MaxLength="60" />
                    <TextBlock Grid.Row="3" Grid.Column="4" Visibility="{Binding DataVisibility, Mode=OneWay}" Text="{Binding AccountStatus, UpdateSourceTrigger=PropertyChanged}" Foreground="{Binding AccountStatusColor, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"></TextBlock>
                    <Label Grid.Row="4" Grid.Column="0" Content="{x:Static res:Resources.CRT_STAFF}" Style="{StaticResource LbTitleStyle}" Visibility="{Binding UserOperateMode, Converter={StaticResource EnumToNotVisibilityConverter}, ConverterParameter={x:Static uiLib:OperateMode.Add}}" />
                    <Label Grid.Row="4" Grid.Column="1" Content="{Binding CurrentRecord.CRT_NAME, UpdateSourceTrigger=PropertyChanged}" Width="Auto" HorizontalAlignment="Left" Visibility="{Binding UserOperateMode, Converter={StaticResource EnumToNotVisibilityConverter}, ConverterParameter={x:Static uiLib:OperateMode.Add}}" />
                    <Label Grid.Row="4" Grid.Column="2" Content="{x:Static Properties:Resources.CRT_DATE}" Style="{StaticResource LbTitleStyle}" Visibility="{Binding UserOperateMode, Converter={StaticResource EnumToNotVisibilityConverter}, ConverterParameter={x:Static uiLib:OperateMode.Add}}" />
                    <Label Grid.Row="4" Grid.Column="3" HorizontalAlignment="Left" Visibility="{Binding UserOperateMode, Converter={StaticResource EnumToNotVisibilityConverter}, ConverterParameter={x:Static uiLib:OperateMode.Add}}">
                      <TextBlock Text="{Binding CurrentRecord.CRT_DATE, UpdateSourceTrigger=PropertyChanged, StringFormat=\{0:yyyy/MM/dd HH:mm\}}" />
                    </Label>
                    <Label Grid.Row="5" Grid.Column="0" Content="{x:Static res:Resources.UPD_STAFF}" Style="{StaticResource LbTitleStyle}" Visibility="{Binding UserOperateMode, Converter={StaticResource EnumToNotVisibilityConverter}, ConverterParameter={x:Static uiLib:OperateMode.Add}}" />
                    <Label Grid.Row="5" Grid.Column="1" Content="{Binding CurrentRecord.UPD_NAME, UpdateSourceTrigger=PropertyChanged}" Width="Auto" HorizontalAlignment="Left" Visibility="{Binding UserOperateMode, Converter={StaticResource EnumToNotVisibilityConverter}, ConverterParameter={x:Static uiLib:OperateMode.Add}}" />
                    <Label Grid.Row="5" Grid.Column="2" Content="{x:Static Properties:Resources.UPD_DATE}" Style="{StaticResource LbTitleStyle}" Visibility="{Binding UserOperateMode, Converter={StaticResource EnumToNotVisibilityConverter}, ConverterParameter={x:Static uiLib:OperateMode.Add}}" />
                    <Label Grid.Row="5" Grid.Column="3" HorizontalAlignment="Left" Visibility="{Binding UserOperateMode, Converter={StaticResource EnumToNotVisibilityConverter}, ConverterParameter={x:Static uiLib:OperateMode.Add}}">
                      <TextBlock Text="{Binding CurrentRecord.UPD_DATE, UpdateSourceTrigger=PropertyChanged, StringFormat=\{0:yyyy/MM/dd HH:mm\}}" />
                    </Label>
                  </Grid>
                </GroupBox>
                <GroupBox Grid.Column="0" Grid.Row="1" IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}">
                  <GroupBox.HeaderTemplate>
                    <DataTemplate>
                      <CheckBox Content="{x:Static Properties:Resources.MENUSTYLE}" IsChecked="{Binding DataContext.CurrentRecord.MENUSTYLE, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}, Converter={StaticResource StringToBoolConverter}}" VerticalAlignment="Center" VerticalContentAlignment="Center" Margin="5,0,0,0" />
                    </DataTemplate>
                  </GroupBox.HeaderTemplate>
                  <DockPanel>
                    <WrapPanel DockPanel.Dock="Top"></WrapPanel>
                    <WrapPanel DockPanel.Dock="Top">
                      <WrapPanel.Style>
                        <Style TargetType="WrapPanel">
                          <Setter Property="IsEnabled" Value="True" />
                          <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentRecord.MENUSTYLE, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="0">
                              <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                          </Style.Triggers>
                        </Style>
                      </WrapPanel.Style>
                      <Label Style="{StaticResource LbStyle}" Content="{x:Static Properties:Resources.MENU_CODE}" />
                      <ComboBox Style="{StaticResource ComboStyle}" ItemsSource="{Binding MenuStyleList}" DisplayMemberPath="Name" SelectedValuePath="Value" SelectedValue="{Binding CurrentRecord.MENU_CODE,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                      <Label Style="{StaticResource LbStyle}" Content="{x:Static Properties:Resources.NewMenuName}" />
                      <TextBox Style="{ StaticResource TxtStyle}" Text="{Binding NewMenuName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                    </WrapPanel>
                  </DockPanel>
                </GroupBox>
                <GroupBox Grid.Column="0" Grid.Row="2" Header="{x:Static Properties:Resources.SET_JOB_GROUP}" Foreground="Red">
                  <DataGrid Name="dgGroupList" ItemsSource="{Binding GroupList}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" SelectionMode="Single" SelectionUnit="FullRow" IsReadOnly="False">
                    <DataGrid.Columns>
                      <DataGridCheckBoxColumn Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}">
                        <DataGridCheckBoxColumn.ElementStyle>
                          <Style TargetType="CheckBox">
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="IsEnabled" Value="{Binding DataContext.UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" />
                          </Style>
                        </DataGridCheckBoxColumn.ElementStyle>
                        <DataGridCheckBoxColumn.HeaderTemplate>
                          <DataTemplate>
                            <CheckBox IsChecked="{Binding IsCheckedAll, ElementName=Vm, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding CheckedAllCommand, ElementName=Vm}" Content="{x:Static res:Resources.SelectAll}"></CheckBox>
                          </DataTemplate>
                        </DataGridCheckBoxColumn.HeaderTemplate>
                      </DataGridCheckBoxColumn>
                      <DataGridTextColumn Header="{x:Static Properties:Resources.GRP_ID}" Binding="{Binding Item.GRP_ID}" Width="60" IsReadOnly="True" />
                      <DataGridTextColumn Header="{x:Static Properties:Resources.GRP_NAME}" Binding="{Binding Item.GRP_NAME}" Width="180" IsReadOnly="True" />
                      <DataGridTextColumn Header="{x:Static Properties:Resources.GRP_DESC}" Binding="{Binding Item.GRP_DESC}" Width="140" IsReadOnly="True" />
                    </DataGrid.Columns>
                    <DataGrid.Resources>
                      <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="DodgerBlue" />
                      <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="White" />
                    </DataGrid.Resources>
                  </DataGrid>
                </GroupBox>
                <GroupBox Grid.Column="1" Grid.Row="0" Grid.RowSpan="3" Header="{x:Static Properties:Resources.SET_DC_CODE_CUST_CODE}" Foreground="Red">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <WrapPanel Grid.Row="0" Orientation="Vertical">
                        
                      <WrapPanel Orientation="Horizontal">
                        <Label Content="{x:Static Properties:Resources.CHOOSE_DC_CODE}" Style="{StaticResource LbTitleStyle}" />
                        <ComboBox Width="200" Name="cbDc" ItemsSource="{Binding DcList, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="DC_CODE" IsSynchronizedWithCurrentItem="True" VerticalContentAlignment="Center" SelectionChanged="cbDc_SelectionChanged">
                          <ComboBox.ItemTemplate>
                            <DataTemplate>
                              <WrapPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding DC_CODE}" />
                                <TextBlock Text=" - " />
                                <TextBlock Text="{Binding DC_NAME}" />
                              </WrapPanel>
                            </DataTemplate>
                          </ComboBox.ItemTemplate>
                        </ComboBox>
                      </WrapPanel>
                      <WrapPanel Orientation="Horizontal">
                        <Label Content="{x:Static Properties:Resources.CHOOOSE_GUP_CODE}" Style="{StaticResource LbTitleStyle}" />
                        <ComboBox Width="200" Name="cbGup" ItemsSource="{Binding GupList, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="GUP_CODE" IsSynchronizedWithCurrentItem="True" SelectionChanged="cbGup_SelectionChanged" VerticalContentAlignment="Center">
                          <ComboBox.ItemTemplate>
                            <DataTemplate>
                              <WrapPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding GUP_CODE}" />
                                <TextBlock Text=" - " />
                                <TextBlock Text="{Binding GUP_NAME}" />
                              </WrapPanel>
                            </DataTemplate>
                          </ComboBox.ItemTemplate>
                        </ComboBox>
                      </WrapPanel>
                    </WrapPanel>
                    <telerik:RadTreeView Grid.Row="1" IsOptionElementsEnabled="True" Name="tvTreeView" SelectionMode="Single" Margin="3" IsTriStateMode="False" ItemsSource="{Binding CustList}" SelectedItem="{Binding SelectedCust, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" BorderBrush="DarkGray" BorderThickness="1" IsVirtualizing="True" FontSize="14">
                      <telerik:RadTreeView.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding TreeView}">
                          <TreeViewItem Header="{Binding Name}" />
                        </HierarchicalDataTemplate>
                      </telerik:RadTreeView.ItemTemplate>
                      <telerik:RadTreeView.ItemContainerStyle>
                        <Style TargetType="telerik:RadTreeViewItem">
                          <Setter Property="IsEnabled" Value="{Binding DataContext.UserOperateMode, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}, Converter={StaticResource EnumToNotBooleanConverter}, ConverterParameter={x:Static uiLib:OperateMode.Query}}" />
                          <Setter Property="IsExpanded" Value="True" />
                          <Setter Property="CheckState" Value="{Binding IsChecked, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource CheckStateConverter}}" />
                        </Style>
                      </telerik:RadTreeView.ItemContainerStyle>
                    </telerik:RadTreeView>
                  </Grid>
                </GroupBox>
              </Grid>
            </DockPanel>
          </TabItem>
        </TabControl>
      </uiLib:BasicMaster.MainContent>
    </uiLib:BasicMaster>
  </telerik:RadBusyIndicator>
</uiLib:Wms3plUserControl>