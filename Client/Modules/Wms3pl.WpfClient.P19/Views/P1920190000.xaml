<?xml version="1.0" encoding="utf-8"?>
<uiLib:Wms3plUserControl x:Class="Wms3pl.WpfClient.P19.Views.P1920190000" xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d" xmlns:uiLib="clr-namespace:Wms3pl.WpfClient.UILib;assembly=Wms3pl.WpfClient.UILib" xmlns:controls="clr-namespace:Wms3pl.WpfClient.UILib.Controls;assembly=Wms3pl.WpfClient.UILib" xmlns:common="clr-namespace:Wms3pl.WpfClient.Common;assembly=Wms3pl.WpfClient.Common" xmlns:viewModel="clr-namespace:Wms3pl.WpfClient.P19.ViewModel" xmlns:Properties="clr-namespace:Wms3pl.WpfClient.P19.Properties" xmlns:res="clr-namespace:Wms3pl.WpfClient.Resources;assembly=Wms3pl.WpfClient.Resources" xmlns:converters="clr-namespace:Wms3pl.WpfClient.Common.Converters;assembly=Wms3pl.WpfClient.Common" x:Name="Window" Margin="0,0,0,0" HorizontalAlignment="Stretch" FontSize="18" MinWidth="800" controls:PermissionService.FunctionId="P1920190000" controls:PermissionService.FunctionName="商品大中小分類維護" FormException="{Binding Exception}">
  <uiLib:Wms3plUserControl.DataContext>
    <viewModel:P1920190000_ViewModel x:Name="Vm" />
  </uiLib:Wms3plUserControl.DataContext>
  <uiLib:Wms3plUserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Wms3pl.WpfClient.UILib;component/Generic.xaml" />
      </ResourceDictionary.MergedDictionaries>
      <common:NotConverter x:Key="NotConverter" />
      <converters:StringTypeToVisiablityConverter x:Key="StringTypeToVisiablityConverter" />
      <FrameworkElement x:Key="ProxyElement" DataContext="{Binding}"></FrameworkElement>
      <converters:OwnerItemsSourceConverter x:Key="OwnerItemsSourceConverter" />
      <converters:EnumBooleanConverter x:Key="EnumBooleanConverter" />
      <converters:StringFormatNumberConverter x:Key="StringFormatNumberConverter" />
    </ResourceDictionary>
  </uiLib:Wms3plUserControl.Resources>
  <telerik:RadBusyIndicator x:Name="GridBusyIndicator" BusyContent="{x:Static res:Resources.Loading}" IsIndeterminate="False" IsBusy="{Binding IsBusy}">
    <uiLib:BasicMaster x:Name="Master">
      <uiLib:BasicMaster.ToolBarArea>
        <WrapPanel>
          <Button Style="{StaticResource SearchButton}" controls:PermissionService.FunctionId="BP1920190001" Command="{Binding SearchCommand}" />
          <Button Style="{StaticResource AddButton}" controls:PermissionService.FunctionId="BP1920190002" Command="{Binding AddCommand}" />
          <Button Style="{StaticResource EditButton}" controls:PermissionService.FunctionId="BP1920190003" Command="{Binding EditCommand}" />
          <Button Style="{StaticResource CancelButton}" controls:PermissionService.FunctionId="BP1920190004" Command="{Binding CancelCommand}" />
          <Button Style="{StaticResource DeleteButton}" controls:PermissionService.FunctionId="BP1920190005" Command="{Binding DeleteCommand}" />
          <Button Style="{StaticResource SaveButton}" controls:PermissionService.FunctionId="BP1920190006" Command="{Binding SaveCommand}" IsEnabled="{Binding Path=(Validation.HasError), ElementName=LayoutRoot, Converter={StaticResource NotConverter}}" />
        </WrapPanel>
      </uiLib:BasicMaster.ToolBarArea>
      <uiLib:BasicMaster.MainContent>
        <TabControl x:Name="LayoutRoot">
          <TabControl.BindingGroup>
            <BindingGroup Name="errorGroup" />
          </TabControl.BindingGroup>
          <TabItem Header="{x:Static res:Resources.Main}" Width="Auto">
            <DockPanel>
              <GroupBox DockPanel.Dock="Top" Header="{x:Static res:Resources.QueryCondition}">
                <WrapPanel>
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ContentControl Visibility="Collapsed" Content="{StaticResource ProxyElement}"></ContentControl>
                    <Label Grid.Row="0" Grid.Column="0" Content="{x:Static Properties:Resources.SelectedClassType}" Style="{StaticResource LbTitleStyle}" />
                    <ComboBox Grid.Row="0" Grid.Column="1" Style="{StaticResource ComboStyle}" ItemsSource="{Binding ClassTypeList}" SelectedValue="{Binding SelectedClassType,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged }" SelectedValuePath="Value" DisplayMemberPath="Name" IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}"></ComboBox>
                    <Label Grid.Row="1" Grid.Column="0" Content="{x:Static Properties:Resources.ClassCode}" Style="{StaticResource LbTitleStyle}" />
                    <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding ClassCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TxtStyle}" IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}" />
                    <Label Grid.Row="1" Grid.Column="2" Content="{x:Static Properties:Resources.ClassName}" Style="{StaticResource LbTitleStyle}" Foreground="Blue" />
                    <TextBox Grid.Row="1" Grid.Column="3" Text="{Binding ClassName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TxtStyle}" IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}" />
                  </Grid>
                </WrapPanel>
              </GroupBox>
              <GroupBox DockPanel.Dock="Top" Header="{x:Static res:Resources.OueryResult}">
                <DockPanel>
                  <ContentControl Visibility="Collapsed" Content="{StaticResource ProxyElement}"></ContentControl>
                  <!--大分類-->
                  <DockPanel Visibility="{Binding SelectedClassType,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource StringTypeToVisiablityConverter},ConverterParameter=A}" DockPanel.Dock="Top">
                    <controls:ValidationDataGrid ItemsSource="{Binding DataListA,UpdateSourceTrigger=PropertyChanged}" Name="DgListA" SelectedItem="{Binding SelectedDataA,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource DgStyle}" IsReadOnly="False" CellStyle="{StaticResource UcSingleRowEdit}" RowHeaderStyle="{StaticResource UcSingleRowHeaderEdit}">
                      <DataGrid.Columns>
                        <DataGridTextColumn Header="{x:Static Properties:Resources.ACODE}" Binding="{Binding ACODE,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True}" IsReadOnly="True">
                          <DataGridTextColumn.CellStyle>
                            <Style TargetType="DataGridCell" BasedOn="{StaticResource UcSingleRowAddEditFocus}" />
                          </DataGridTextColumn.CellStyle>
                          <DataGridTextColumn.EditingElementStyle>
                            <Style TargetType="TextBox" BasedOn="{StaticResource DataGridEditingElement}">
                              <Setter Property="MaxLength" Value="6" />
                              <EventSetter Event="GotFocus" Handler="CellElement_GotFocus" />
                            </Style>
                          </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="{x:Static Properties:Resources.ANAME}" Binding="{Binding ANAME,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True}" IsReadOnly="True">
                          <DataGridTextColumn.EditingElementStyle>
                            <Style TargetType="TextBox" BasedOn="{StaticResource DataGridEditingElement}">
                              <Setter Property="MaxLength" Value="40" />
                            </Style>
                          </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="{x:Static Properties:Resources.CHECKPERCENT}" Binding="{Binding CHECK_PERCENT,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True, Converter={StaticResource StringFormatNumberConverter}, ConverterParameter=##0.##########}" IsReadOnly="True">
                          <DataGridTextColumn.EditingElementStyle>
                            <Style TargetType="TextBox" BasedOn="{StaticResource DataGridEditingElement}">
                              <Setter Property="MaxLength" Value="14" />
                            </Style>
                          </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="{x:Static res:Resources.CRT_STAFF}" IsReadOnly="True" Binding="{Binding CRT_NAME}" />
                        <DataGridTextColumn Header="{x:Static Properties:Resources.CRT_DATE}" IsReadOnly="True" Binding="{Binding CRT_DATE, StringFormat=\{0:yyyy/MM/dd HH:mm\}}" />
                        <DataGridTextColumn Header="{x:Static res:Resources.UPD_STAFF}" IsReadOnly="True" Binding="{Binding UPD_NAME}" />
                        <DataGridTextColumn Header="{x:Static Properties:Resources.UPD_DATE}" IsReadOnly="True" Binding="{Binding UPD_DATE, StringFormat=\{0:yyyy/MM/dd HH:mm\}}" />
                      </DataGrid.Columns>
                    </controls:ValidationDataGrid>
                  </DockPanel>
                  <!--中分類-->
                  <DockPanel Visibility="{Binding SelectedClassType,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource StringTypeToVisiablityConverter},ConverterParameter=B}" DockPanel.Dock="Top">
                    <controls:ValidationDataGrid ItemsSource="{Binding DataListB, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Name="DgListB" SelectedItem="{Binding SelectedDataB,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource DgStyle}" IsReadOnly="False" CellStyle="{StaticResource UcSingleRowEdit}" RowHeaderStyle="{StaticResource UcSingleRowHeaderEdit}">
                      <DataGrid.Columns>
                        <DataGridComboBoxColumn Header="{x:Static Properties:Resources.SearchLTypes}" ItemsSource="{Binding DataContext.ClassTypeAList,Source={StaticResource ProxyElement}, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Value" DisplayMemberPath="Name" SelectedValueBinding="{Binding ACODE, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True}" IsReadOnly="True">
                          <DataGridComboBoxColumn.CellStyle>
                            <Style TargetType="DataGridCell" BasedOn="{StaticResource UcSingleRowAddEditFocus}" />
                          </DataGridComboBoxColumn.CellStyle>
                          <DataGridComboBoxColumn.EditingElementStyle>
                            <Style TargetType="ComboBox" BasedOn="{StaticResource DataGridEditingElement}">
                              <EventSetter Event="GotFocus" Handler="CellElement_GotFocus" />
                            </Style>
                          </DataGridComboBoxColumn.EditingElementStyle>
                        </DataGridComboBoxColumn>
                        <DataGridTextColumn Header="{x:Static Properties:Resources.BCODE}" Binding="{Binding BCODE,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True}" IsReadOnly="True">
                          <DataGridTextColumn.EditingElementStyle>
                            <Style TargetType="TextBox" BasedOn="{StaticResource DataGridEditingElement}">
                              <Setter Property="MaxLength" Value="6" />
                            </Style>
                          </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="{x:Static Properties:Resources.BNAME}" Binding="{Binding BNAME,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True}" IsReadOnly="True">
                          <DataGridTextColumn.EditingElementStyle>
                            <Style TargetType="TextBox" BasedOn="{StaticResource DataGridEditingElement}">
                              <Setter Property="MaxLength" Value="40" />
                            </Style>
                          </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>
                                                <DataGridTextColumn Header="{x:Static Properties:Resources.CHECKPERCENT}" Binding="{Binding CHECK_PERCENT,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True, Converter={StaticResource StringFormatNumberConverter}, ConverterParameter=##0.###########}" IsReadOnly="True">
                          <DataGridTextColumn.EditingElementStyle>
                            <Style TargetType="TextBox" BasedOn="{StaticResource DataGridEditingElement}">
                              <Setter Property="MaxLength" Value="14" />
                            </Style>
                          </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="{x:Static res:Resources.CRT_STAFF}" IsReadOnly="True" Binding="{Binding CRT_NAME}" />
                        <DataGridTextColumn Header="{x:Static Properties:Resources.CRT_DATE}" IsReadOnly="True" Binding="{Binding CRT_DATE, StringFormat=\{0:yyyy/MM/dd HH:mm\}}" />
                        <DataGridTextColumn Header="{x:Static res:Resources.UPD_STAFF}" IsReadOnly="True" Binding="{Binding UPD_NAME}" />
                        <DataGridTextColumn Header="{x:Static Properties:Resources.UPD_DATE}" IsReadOnly="True" Binding="{Binding UPD_DATE, StringFormat=\{0:yyyy/MM/dd HH:mm\}}" />
                      </DataGrid.Columns>
                    </controls:ValidationDataGrid>
                  </DockPanel>
                  <!--小分類-->
                  <DockPanel Visibility="{Binding SelectedClassType,Converter={StaticResource StringTypeToVisiablityConverter},ConverterParameter=C}" DockPanel.Dock="Top">
                    <controls:ValidationDataGrid ItemsSource="{Binding DataListC,UpdateSourceTrigger=PropertyChanged}" Name="DgListC" SelectedItem="{Binding SelectedDataC,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource DgStyle}" IsReadOnly="False" CellStyle="{StaticResource UcSingleRowEdit}" RowHeaderStyle="{StaticResource UcSingleRowHeaderEdit}">
                      <DataGrid.Columns>
                        <DataGridComboBoxColumn Header="{x:Static Properties:Resources.SearchLTypes}" ItemsSource="{Binding DataContext.ClassTypeAList,Source={StaticResource ProxyElement},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Value" DisplayMemberPath="Name" SelectedValueBinding="{Binding ACODE, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True}" IsReadOnly="True">
                          <DataGridComboBoxColumn.CellStyle>
                            <Style TargetType="DataGridCell" BasedOn="{StaticResource UcSingleRowAddEditFocus}" />
                          </DataGridComboBoxColumn.CellStyle>
                          <DataGridComboBoxColumn.EditingElementStyle>
                            <Style TargetType="ComboBox" BasedOn="{StaticResource DataGridEditingElement}">
                              <EventSetter Event="GotFocus" Handler="CellElement_GotFocus" />
                            </Style>
                          </DataGridComboBoxColumn.EditingElementStyle>
                        </DataGridComboBoxColumn>
                        <DataGridTemplateColumn Header="{x:Static Properties:Resources.MTYPE}" IsReadOnly="True">
                          <DataGridTemplateColumn.CellStyle>
                            <Style TargetType="DataGridCell" BasedOn="{StaticResource UcSingleRowEdit}" />
                          </DataGridTemplateColumn.CellStyle>
                          <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                              <TextBlock>
                                <TextBlock.Text>
                                  <MultiBinding Converter="{StaticResource OwnerItemsSourceConverter}">
                                    <Binding Path="ACODE" />
                                    <Binding Path="DataContext.ClassTypeBList" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" Source="{StaticResource ProxyElement}" />
                                    <Binding Path="BCODE" />
                                  </MultiBinding>
                                </TextBlock.Text>
                              </TextBlock>
                            </DataTemplate>
                          </DataGridTemplateColumn.CellTemplate>
                          <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                              <ComboBox Name="CbBType" SelectedValuePath="Value" DisplayMemberPath="Name" SelectedValue="{Binding BCODE, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True}" SelectionChanged="CbBType_OnSelectionChanged">
                                <ComboBox.ItemsSource>
                                  <MultiBinding Converter="{StaticResource OwnerItemsSourceConverter}">
                                    <Binding Path="ACODE" />
                                    <Binding Path="DataContext.ClassTypeBList" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay" Source="{StaticResource ProxyElement}" />
                                  </MultiBinding>
                                </ComboBox.ItemsSource>
                              </ComboBox>
                            </DataTemplate>
                          </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="{x:Static Properties:Resources.CCODE}" Binding="{Binding CCODE,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True}" IsReadOnly="True">
                          <DataGridTextColumn.EditingElementStyle>
                            <Style TargetType="TextBox" BasedOn="{StaticResource DataGridEditingElement}">
                              <Setter Property="MaxLength" Value="6" />
                            </Style>
                          </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="{x:Static Properties:Resources.CNAME}" Binding="{Binding CNAME,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True}" IsReadOnly="True">
                          <DataGridTextColumn.EditingElementStyle>
                            <Style TargetType="TextBox" BasedOn="{StaticResource DataGridEditingElement}">
                              <Setter Property="MaxLength" Value="40" />
                            </Style>
                          </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>
                                                <DataGridTextColumn Header="{x:Static Properties:Resources.CHECKPERCENT}" Binding="{Binding CHECK_PERCENT,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True, Converter={StaticResource StringFormatNumberConverter}, ConverterParameter=##0.###########}" IsReadOnly="True">
                          <DataGridTextColumn.EditingElementStyle>
                            <Style TargetType="TextBox" BasedOn="{StaticResource DataGridEditingElement}">
                              <Setter Property="MaxLength" Value="14" />
                            </Style>
                          </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="{x:Static res:Resources.CRT_STAFF}" IsReadOnly="True" Binding="{Binding CRT_NAME}" />
                        <DataGridTextColumn Header="{x:Static Properties:Resources.CRT_DATE}" IsReadOnly="True" Binding="{Binding CRT_DATE, StringFormat=\{0:yyyy/MM/dd HH:mm\}}" />
                        <DataGridTextColumn Header="{x:Static res:Resources.UPD_STAFF}" IsReadOnly="True" Binding="{Binding UPD_NAME}" />
                        <DataGridTextColumn Header="{x:Static Properties:Resources.UPD_DATE}" IsReadOnly="True" Binding="{Binding UPD_DATE, StringFormat=\{0:yyyy/MM/dd HH:mm\}}" />
                      </DataGrid.Columns>
                    </controls:ValidationDataGrid>
                  </DockPanel>
                  <DockPanel />
                </DockPanel>
              </GroupBox>
            </DockPanel>
          </TabItem>
        </TabControl>
      </uiLib:BasicMaster.MainContent>
    </uiLib:BasicMaster>
  </telerik:RadBusyIndicator>
</uiLib:Wms3plUserControl>