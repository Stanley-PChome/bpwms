<uiLib:Wms3plWindow x:Class="Wms3pl.WpfClient.P71.Views.P7101020100"
		xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d"
		xmlns:uiLib="clr-namespace:Wms3pl.WpfClient.UILib;assembly=Wms3pl.WpfClient.UILib"
		xmlns:controls="clr-namespace:Wms3pl.WpfClient.UILib.Controls;assembly=Wms3pl.WpfClient.UILib"
		xmlns:common="clr-namespace:Wms3pl.WpfClient.Common;assembly=Wms3pl.WpfClient.Common"
		xmlns:converters="clr-namespace:Wms3pl.WpfClient.Common.Converters;assembly=Wms3pl.WpfClient.Common"
		xmlns:viewModel="clr-namespace:Wms3pl.WpfClient.P71.ViewModel" 
		xmlns:Properties="clr-namespace:Wms3pl.WpfClient.P71.Properties" 
		xmlns:res="clr-namespace:Wms3pl.WpfClient.Resources;assembly=Wms3pl.WpfClient.Resources"    
		x:Name="Window" Margin="0,0,0,0" HorizontalAlignment="Stretch" FontSize="16" MinWidth="600" MinHeight="500"
        Loaded="Window_Loaded"
		controls:PermissionService.FunctionName="設定儲區範圍" controls:PermissionService.CheckPermission="False"
		FormException="{Binding Exception}">
	<uiLib:Wms3plWindow.DataContext>
		<viewModel:P7101020100_ViewModel x:Name="Vm" />
	</uiLib:Wms3plWindow.DataContext>
	<uiLib:Wms3plWindow.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/Wms3pl.WpfClient.UILib;component/Generic.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<common:NotConverter x:Key="NotConverter" />
            <converters:StringToBoolConverter x:Key="StringToBoolConverter" />
            <FrameworkElement x:Key="ProxyElement" DataContext="{Binding}"></FrameworkElement>
		</ResourceDictionary>
	</uiLib:Wms3plWindow.Resources>
	<telerik:RadBusyIndicator x:Name="GridBusyIndicator" BusyContent="{x:Static res:Resources.Loading}" IsIndeterminate="False"
			IsBusy="{Binding IsBusy}">
		<uiLib:BasicMaster x:Name="Master">
			<uiLib:BasicMaster.ToolBarArea>
				<WrapPanel>
					<Button Style="{StaticResource CancelButton}" controls:PermissionService.FunctionId="BP7101020101"
							Command="{Binding CancelCommand}" />
					<Button Style="{StaticResource SaveButton}" controls:PermissionService.FunctionId="BP7101020102"
							Command="{Binding SaveCommand}"
							IsEnabled="{Binding Path=(Validation.HasError), ElementName=LayoutRoot, Converter={StaticResource NotConverter}}" />
				</WrapPanel>
			</uiLib:BasicMaster.ToolBarArea>
			<uiLib:BasicMaster.MainContent>
				<TabControl x:Name="LayoutRoot">
					<TabControl.BindingGroup>
						<BindingGroup Name="errorGroup" />
					</TabControl.BindingGroup>
					<TabItem Header="{x:Static res:Resources.Main}" Width="Auto">
						<ScrollViewer>
							<DockPanel Style="{StaticResource WindowDockPanelStyle}">
								<!-- 由此處開始加入畫面項目 -->
								<GroupBox DockPanel.Dock="Top">
									<StackPanel>
										<WrapPanel>
											<Label Content="{x:Static res:Resources.Dc}" Style="{StaticResource LbStyle}" />
											<TextBox Text="{Binding SelectedDcName}" Style="{StaticResource TxtStyle}"
													IsEnabled="False" />
											<WrapPanel Visibility="{Binding VisibilityGupAndCust }">
												<Label Content="{x:Static Properties:Resources.GupCode}" Style="{StaticResource LbStyle}" />
												<TextBox Text="{Binding SelectedGupName}"
														Style="{StaticResource TxtStyle}" IsEnabled="False" />
												<Label Content="{x:Static Properties:Resources.CustCode}" Style="{StaticResource LbStyle}" />
												<TextBox Text="{Binding SelectedCustName}"
														Style="{StaticResource TxtStyle}" IsEnabled="False" />
											</WrapPanel>
										</WrapPanel>
										<WrapPanel>
											<Label Content="{x:Static Properties:Resources.WAREHOUSE_Name}" Style="{StaticResource LbStyle}" />
											<TextBox
													Text="{Binding WarehouseName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
													Style="{StaticResource TxtStyle}" IsEnabled="False" />
											<Label Content="{x:Static Properties:Resources.WarehouseId}" Style="{StaticResource LbStyle}" />
											<TextBox
													Text="{Binding WarehouseId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
													Style="{StaticResource TxtStyle}" IsEnabled="False" />
										</WrapPanel>
										<WrapPanel>
											<Label Content="{x:Static Properties:Resources.AType}" Style="{StaticResource LbStyle}" />
											<ComboBox Style="{StaticResource ComboStyle}"
													ItemsSource="{Binding ATypeList, UpdateSourceTrigger=PropertyChanged}"
													DisplayMemberPath="Name" SelectedValuePath="Value"
													IsEnabled="{Binding IsAdd,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
													SelectedValue="{Binding SelectedAType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
											<Label Content="{x:Static Properties:Resources.AREA_NAME}" Style="{StaticResource LbStyle}" />
											<TextBox
													Text="{Binding AreaName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
													Style="{StaticResource TxtStyle}"
													IsEnabled="{Binding IsAdd,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
											<Label Content="{x:Static Properties:Resources.AREA_CODE}" Style="{StaticResource LbStyle}" />
											<TextBox
													Text="{Binding AreaCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
													Style="{StaticResource TxtStyle}" IsEnabled="False" />
										</WrapPanel>
                                        <!--建立儲區揀貨設定-->
                                        <WrapPanel>
                                            <CheckBox Content="{x:Static Properties:Resources.CreateStorageAreaPickSetting}" IsChecked="{Binding CreateStorageAreaPickCheck,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringToBoolConverter}}" 
                                                      Style="{StaticResource CheckStyle}"/>
                                        </WrapPanel>
                                        <!--<WrapPanel>
                                            <CheckBox Content="{x:Static Properties:Resources.SINGLE_BOX}" IsChecked="{Binding CheckSingleBox,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringToBoolConverter}}" 
                                                      Style="{StaticResource CheckStyle}"
                                                      IsEnabled="{Binding  CreateStorageAreaPickCheckEnabled ,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                      />
                                            <CheckBox Margin="145,0,0,0" Content="{x:Static Properties:Resources.PICK_CHECK}" IsChecked="{Binding CheckPickCheck,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringToBoolConverter}}" 
                                                      Style="{StaticResource CheckStyle}"
                                                      IsEnabled="{Binding  CreateStorageAreaPickCheckEnabled ,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                      />
                                        </WrapPanel>-->
                                        <WrapPanel>
                                            <Label Content="{x:Static Properties:Resources.PICK_TYPE}" Style="{StaticResource LbStyle}" />
                                            <ComboBox  Style="{StaticResource ComboStyle}"
                                                       ItemsSource="{Binding PickTypeList,UpdateSourceTrigger=PropertyChanged}"
                                                       DisplayMemberPath="Name" SelectedValuePath="Value"                                                   
                                                       SelectedValue="{Binding SelectedPickType,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                       IsEnabled="{Binding  CreateStorageAreaPickCheckEnabled ,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                       />
                                            <Label Content="{x:Static Properties:Resources.PICK_TOOL}" Style="{StaticResource LbStyle}" />
                                            <ComboBox  Style="{StaticResource ComboStyle}"
                                                       ItemsSource="{Binding PickToolList,UpdateSourceTrigger=PropertyChanged}"
                                                       DisplayMemberPath="Name" SelectedValuePath="Value"                                                    
                                                       SelectedValue="{Binding SelectedPickTool,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                     IsEnabled="{Binding  CreateStorageAreaPickCheckEnabled ,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                       />
                                            <Label  Content="{x:Static Properties:Resources.PUT_TOOL}" Style="{StaticResource LbStyle}" />
                                            <ComboBox  Margin="35,2,0,2"  Style="{StaticResource ComboStyle}"
                                                       ItemsSource="{Binding PutToolList,UpdateSourceTrigger=PropertyChanged}"
                                                       DisplayMemberPath="Name" SelectedValuePath="Value"                                                    
                                                       SelectedValue="{Binding SelectedPutTool,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                        IsEnabled="{Binding  CreateStorageAreaPickCheckEnabled ,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                       />
                                        </WrapPanel>
                                        <!--<WrapPanel>
                                            <Label Content="{x:Static Properties:Resources.PICK_UNIT}" Style="{StaticResource LbStyle}" />
                                            <ComboBox  Style="{StaticResource ComboStyle}"
                                                       ItemsSource="{Binding PickUnitList,UpdateSourceTrigger=PropertyChanged}"
                                                       DisplayMemberPath="Name" SelectedValuePath="Value"                                                     
                                                       SelectedValue="{Binding SelectedPickUnit,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                        IsEnabled="{Binding  CreateStorageAreaPickCheckEnabled ,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                       />
                                            <Label Content="{x:Static Properties:Resources.PICK_MARTERIAL}" Style="{StaticResource LbStyle}" />
                                            <ComboBox  Style="{StaticResource ComboStyle}"
                                                       ItemsSource="{Binding PickMarterialList,UpdateSourceTrigger=PropertyChanged}"
                                                       DisplayMemberPath="Name" SelectedValuePath="Value"                                                   
                                                       SelectedValue="{Binding SelectedPickMarterial,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                         IsEnabled="{Binding  CreateStorageAreaPickCheckEnabled ,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                       />
                                            <Label Content="{x:Static Properties:Resources.DELIVERY_MARTERIAL}" Style="{StaticResource LbStyle}" />
                                            <ComboBox  Style="{StaticResource ComboStyle}"
                                                       ItemsSource="{Binding DeliveryMarterialList,UpdateSourceTrigger=PropertyChanged}"
                                                       DisplayMemberPath="Name" SelectedValuePath="Value"                                                    
                                                       SelectedValue="{Binding SelectedDeliveryMarterial,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                         IsEnabled="{Binding  CreateStorageAreaPickCheckEnabled ,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                       />
                                        </WrapPanel>-->
                                        <WrapPanel>
                                            <!--<Label Content="{x:Static Properties:Resources.PICK_SEQ}" Style="{StaticResource LbStyle}" />
                                            <ComboBox  Style="{StaticResource ComboStyle}"
                                                       ItemsSource="{Binding PickSEQList,UpdateSourceTrigger=PropertyChanged}"
                                                       DisplayMemberPath="Name" SelectedValuePath="Value"                                                     
                                                       SelectedValue="{Binding SelectedPickSEQ,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                        IsEnabled="{Binding  CreateStorageAreaPickCheckEnabled ,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                       />
                                            <Label Content="{x:Static Properties:Resources.SORT_BY}" Style="{StaticResource LbStyle}" />
                                            <ComboBox  Style="{StaticResource ComboStyle}"
                                                       ItemsSource="{Binding SortByList,UpdateSourceTrigger=PropertyChanged}"
                                                       DisplayMemberPath="Name" SelectedValuePath="Value"                                                    
                                                       SelectedValue="{Binding SelectedSortBy,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                        IsEnabled="{Binding  CreateStorageAreaPickCheckEnabled ,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                       />-->
											<Label Content="{x:Static Properties:Resources.SHELF_TOOL}" Style="{StaticResource LbStyle}" />
											<ComboBox  Style="{StaticResource ComboStyle}"
                                                       ItemsSource="{Binding MoveToolList,UpdateSourceTrigger=PropertyChanged}"
                                                       DisplayMemberPath="Name" SelectedValuePath="Value"                                                    
                                                       SelectedValue="{Binding SelectedMoveTool,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                        IsEnabled="{Binding  CreateStorageAreaPickCheckEnabled ,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                       />
                                        </WrapPanel>
                                    </StackPanel>
								</GroupBox>
								<GroupBox Header="{x:Static Properties:Resources.LocCodeTotal}" DockPanel.Dock="Top">
									<DockPanel>
										<Label Content="{x:Static Properties:Resources.OldLocTotalCount}" Style="{StaticResource LbStyle}" />
										<TextBox
												Text="{Binding OldLocTotalCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
												IsEnabled="False" Style="{StaticResource TxtStyle}" />
										<Label Content="{x:Static Properties:Resources.LocCount}" Style="{StaticResource LbStyle}" />
										<TextBox
												Text="{Binding LocCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
												IsEnabled="False" Style="{StaticResource TxtStyle}" />
									</DockPanel>
								</GroupBox>
								<GroupBox Header="{x:Static Properties:Resources.LocData}">
									<DockPanel>
										<ContentControl Visibility="Collapsed" Content="{StaticResource ProxyElement}" />
										<Grid DockPanel.Dock="Top">
											<Grid.RowDefinitions>
												<RowDefinition Height="Auto" />
												<RowDefinition Height="*" />
											</Grid.RowDefinitions>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="3*" />
												<ColumnDefinition Width="2*" />
											</Grid.ColumnDefinitions>
											<DockPanel Grid.Row="0" Grid.Column="0">
												<WrapPanel DockPanel.Dock="Top">
													<Label Content="{x:Static Properties:Resources.Floor}" Style="{StaticResource LbStyle}" />
													<ComboBox Style="{StaticResource ComboStyle}"
															ItemsSource="{Binding QueryFloorList , UpdateSourceTrigger=PropertyChanged}"
															DisplayMemberPath="Name" SelectedValuePath="Value"
															SelectedValue="{Binding SelectedQueryFloor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
												</WrapPanel>
												<WrapPanel DockPanel.Dock="Top">
													<Label Content="{x:Static Properties:Resources.AreaType}" Style="{StaticResource LbStyle}" />
													<ComboBox Style="{StaticResource ComboStyle}"
															ItemsSource="{Binding AreaType , UpdateSourceTrigger=PropertyChanged}"
															DisplayMemberPath="Name" SelectedValuePath="Value"
															SelectedValue="{Binding SelectedAreaType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                    <Button Margin="5" Content="{x:Static Properties:Resources.Adjust}" Width="120"
															Command="{Binding AdjustCommand, ElementName=Vm}"></Button>
												</WrapPanel>
											</DockPanel>
											<DataGrid Name="dgMaster" Height="400"
													ItemsSource="{Binding MasterDataList,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
													Grid.Row="1" Grid.Column="0" AutoGenerateColumns="False"
													CanUserAddRows="False" CanUserDeleteRows="False"
													SelectionMode="Single" SelectionUnit="FullRow" IsReadOnly="True"
													Style="{StaticResource DgStyle}"
													SelectedItem="{Binding SelectMasertData,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
													IsSynchronizedWithCurrentItem="True">
												<DataGrid.Columns>
													<DataGridTextColumn Header="{x:Static Properties:Resources.Channel}" IsReadOnly="True"
															Binding="{Binding ChannelNo}" />
													<DataGridTextColumn Header="{x:Static Properties:Resources.Plain}" IsReadOnly="True"
															Binding="{Binding PlainNo}" />
													<DataGridTextColumn Header="{x:Static Properties:Resources.LocLevel}" IsReadOnly="True"
															Binding="{Binding LocLevelNo}" />
													<DataGridTextColumn Header="{x:Static Properties:Resources.TotelLocCount}" IsReadOnly="True"
															Binding="{Binding TotelLocCount}" />
													<DataGridTextColumn Header="{x:Static Properties:Resources.Old_LocCount}" IsReadOnly="True"
															Binding="{Binding OldLocCount}" />
													<DataGridTextColumn Header="{x:Static Properties:Resources.Now_ChangeCount}" IsReadOnly="True"
															Binding="{Binding ChangeCount}" />
													<DataGridTextColumn Header="{x:Static Properties:Resources.Now_LocCount}" IsReadOnly="True"
															Binding="{Binding NowLocCount,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
													<DataGridComboBoxColumn Header="{x:Static Properties:Resources.SettingStatus}" IsReadOnly="True"
															ItemsSource="{Binding DataContext.SettingStatusList,Source={StaticResource ProxyElement}}"
															SelectedValuePath="Value" DisplayMemberPath="Name"
															SelectedValueBinding="{Binding SettingStatus}">
													</DataGridComboBoxColumn>
												</DataGrid.Columns>
												<DataGrid.Resources>
													<SolidColorBrush
															x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
															Color="DodgerBlue" />
													<SolidColorBrush
															x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
															Color="White" />
												</DataGrid.Resources>
											</DataGrid>
											<WrapPanel VerticalAlignment="Bottom" Grid.Row="0" Grid.Column="1">
												<Button Margin="5" Content="{x:Static Properties:Resources.Confirm}" Width="120"
														Command="{Binding ConfirmCommand, ElementName=Vm}"></Button>
											</WrapPanel>
											<DataGrid Name="dgDetail" Height="400"
													ItemsSource="{Binding DetailDataList,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
													Grid.Row="1" Grid.Column="1" AutoGenerateColumns="False"
													CanUserAddRows="False" CanUserDeleteRows="False"
													SelectionMode="Single" SelectionUnit="FullRow" IsReadOnly="True"
													Style="{StaticResource DgStyle}"
													SelectedItem="{Binding SelectedDetailData,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
													IsSynchronizedWithCurrentItem="True">
												<DataGrid.Columns>
													<DataGridCheckBoxColumn
															Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
														<DataGridCheckBoxColumn.HeaderTemplate>
															<DataTemplate>
																<CheckBox
																		IsChecked="{Binding IsJobSelectedAll, ElementName=Vm, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
																		Command="{Binding CheckAllCommand, ElementName=Vm}"
																		CommandParameter="JobGroup" Content="{x:Static res:Resources.SelectAll}">
																</CheckBox>
															</DataTemplate>
														</DataGridCheckBoxColumn.HeaderTemplate>
														<DataGridCheckBoxColumn.ElementStyle>
															<Style TargetType="CheckBox">
																<Setter Property="VerticalAlignment" Value="Center" />
																<Setter Property="HorizontalAlignment" Value="Center" />
																<Setter Property="IsEnabled"
																		Value="{Binding Item.IsEditData, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
															</Style>
														</DataGridCheckBoxColumn.ElementStyle>
													</DataGridCheckBoxColumn>
													<DataGridTextColumn Header="{x:Static Properties:Resources.LOC_CODE}" IsReadOnly="True"
															Binding="{Binding Item.LOC_CODE}" />
													<DataGridTextColumn Header="{x:Static Properties:Resources.Channel}" IsReadOnly="True"
															Binding="{Binding Item.CHANNEL}" />
													<DataGridTextColumn Header="{x:Static Properties:Resources.Plain}" IsReadOnly="True"
															Binding="{Binding Item.PLAIN}" />
													<DataGridTextColumn Header="{x:Static Properties:Resources.LocLevel}" IsReadOnly="True"
															Binding="{Binding Item.LOC_LEVEL}" />
													<DataGridComboBoxColumn Header="{x:Static Properties:Resources.SettingStatus}" IsReadOnly="True"
															ItemsSource="{Binding DataContext.LocStatusList, Source={StaticResource ProxyElement}}"
															SelectedValuePath="Value" DisplayMemberPath="Name"
															SelectedValueBinding="{Binding Item.STATUS, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True}">
													</DataGridComboBoxColumn>
													<DataGridComboBoxColumn Header="{x:Static Properties:Resources.AreaType}" IsReadOnly="True"
															ItemsSource="{Binding DataContext.AreaType, Source={StaticResource ProxyElement}}"
															SelectedValuePath="Value" DisplayMemberPath="Name"
															SelectedValueBinding="{Binding Item.AREA_CODE, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True}">
													</DataGridComboBoxColumn>
												</DataGrid.Columns>
											</DataGrid>
										</Grid>
									</DockPanel>
								</GroupBox>
							</DockPanel>
						</ScrollViewer>
					</TabItem>
				</TabControl>
			</uiLib:BasicMaster.MainContent>
		</uiLib:BasicMaster>
	</telerik:RadBusyIndicator>
</uiLib:Wms3plWindow>
