<uiLib:Wms3plUserControl x:Class="Wms3pl.WpfClient.P71.Views.P7109010000"
			xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
			xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"                        
			xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d" 
			xmlns:uiLib="clr-namespace:Wms3pl.WpfClient.UILib;assembly=Wms3pl.WpfClient.UILib"
			xmlns:controls="clr-namespace:Wms3pl.WpfClient.UILib.Controls;assembly=Wms3pl.WpfClient.UILib"
			xmlns:common="clr-namespace:Wms3pl.WpfClient.Common;assembly=Wms3pl.WpfClient.Common"
            xmlns:converters="clr-namespace:Wms3pl.WpfClient.Common.Converters;assembly=Wms3pl.WpfClient.Common"
            xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
			xmlns:viewModel="clr-namespace:Wms3pl.WpfClient.P71.ViewModel"     
			xmlns:Properties="clr-namespace:Wms3pl.WpfClient.P71.Properties" 
			xmlns:res="clr-namespace:Wms3pl.WpfClient.Resources;assembly=Wms3pl.WpfClient.Resources"                     
			x:Name="Window" Margin="0,0,0,0" HorizontalAlignment="Stretch" FontSize="18" MinWidth="800"
			controls:PermissionService.FunctionId="P7109010000"
			controls:PermissionService.FunctionName="配送商主檔"
			FormException="{Binding Exception}">
	<uiLib:Wms3plUserControl.DataContext>
		<viewModel:P7109010000_ViewModel x:Name="Vm"/>
	</uiLib:Wms3plUserControl.DataContext>
	<uiLib:Wms3plUserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/Wms3pl.WpfClient.UILib;component/Generic.xaml"/>
			</ResourceDictionary.MergedDictionaries>
			<common:NotConverter x:Key="NotConverter" />
			<converters:StringToBoolConverter x:Key="StringToBool" />
			<converters:IntToBoolConverter x:Key="IntToBool" />
			<converters:EnumToNotVisibilityConverter x:Key="EnumToNotVisibilityConverter"/>
			<converters:EnumBooleanConverter x:Key="EnumBooleanConverter" />
			<converters:EnumToNotBooleanConverter x:Key="EnumToNotBooleanConverter" />
			<converters:TimeConverterHHMM x:Key="TimeConverterHHMM" />
			<converters:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter"/>
			<converters:NameValuePairMultiConverter x:Key="NameValuePairMultiConverter"/>
			<converters:ZeroPointConverter x:Key="ZeroPointConverter"/>
			<Style x:Key="basicStyle" TargetType="{x:Type FrameworkElement}">
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="Margin" Value="3" />
				<Setter Property="HorizontalAlignment" Value="Left" />
				<Setter Property="Width" Value="120"/>
			</Style>
			<Style TargetType="ComboBox" BasedOn="{StaticResource basicStyle}" />
			<Style TargetType="Label" BasedOn="{StaticResource LbTitleStyle}" />
			<Style TargetType="TextBox" BasedOn="{StaticResource TxtStyle}" />
			<Style TargetType="CheckBox" BasedOn="{StaticResource CheckStyle}" />
		</ResourceDictionary>
	</uiLib:Wms3plUserControl.Resources>
	<telerik:RadBusyIndicator x:Name="GridBusyIndicator" BusyContent="{x:Static res:Resources.Loading}" IsIndeterminate="False" IsBusy="{Binding IsBusy}">
		<uiLib:BasicMaster x:Name="Master">
			<uiLib:BasicMaster.ToolBarArea>
				<WrapPanel>
					<Button Style="{StaticResource SearchButton}" controls:PermissionService.FunctionId="BP7109010001" Command="{Binding SearchCommand}" />
					<Button Style="{StaticResource AddButton}" controls:PermissionService.FunctionId="BP7109010002" Command="{Binding AddCommand}" />
					<Button Style="{StaticResource EditButton}" controls:PermissionService.FunctionId="BP7109010003" Command="{Binding EditCommand}" />
					<Button Style="{StaticResource CancelButton}" controls:PermissionService.FunctionId="BP7109010004" Command="{Binding CancelCommand}" />
					<Button Style="{StaticResource DeleteButton}" controls:PermissionService.FunctionId="BP7109010005" Command="{Binding DeleteCommand}" />
					<Button Style="{StaticResource SaveButton}" controls:PermissionService.FunctionId="BP7109010006" Command="{Binding SaveCommand}" IsEnabled="{Binding Path=(Validation.HasError), ElementName=LayoutRoot, Converter={StaticResource NotConverter}}"/>
				</WrapPanel>
			</uiLib:BasicMaster.ToolBarArea>
			<uiLib:BasicMaster.MainContent>
				<TabControl x:Name="LayoutRoot" >
					<TabControl.BindingGroup>
						<BindingGroup Name="errorGroup" />
					</TabControl.BindingGroup>
					<TabItem Header="{x:Static res:Resources.Main}" Width="Auto">
						<DockPanel>
							<!-- 由此處開始加入畫面項目 -->
							<Border DockPanel.Dock="Top" CornerRadius="5" BorderThickness="1" BorderBrush="#FFD5DFE5">
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>

									<StackPanel Grid.Row="0" Orientation="Horizontal">
										<Label Grid.Column="0" Grid.Row="0" Content="{x:Static res:Resources.Dc}" Margin="23,3,3,3"/>
										<ComboBox Grid.Column="1" Grid.Row="0"
                                              SelectionChanged="DcCode_SelectionChanged"
										      ItemsSource="{Binding DcList, UpdateSourceTrigger=PropertyChanged}" 
										      DisplayMemberPath="Name" SelectedValuePath="Value"
                                              IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Add}}"
										      SelectedItem="{Binding SelectedDcItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged }"
											  SelectedValue="{Binding CurrentMaster.DC_CODE, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" />										
									</StackPanel>
									<StackPanel Grid.Row="1" Orientation="Horizontal">
										<Label Grid.Column="0" Grid.Row="1" Content="{x:Static Properties:Resources.ALL_ID}"></Label>
										<TextBox Grid.Column="1" Grid.Row="1" IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Add }}" 
                                             Text="{Binding CurrentMaster.ALL_ID, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Width="120" MaxLength="10"></TextBox>
										<Label Grid.Column="2" Grid.Row="1" Content="{x:Static Properties:Resources.ALL_COMP}"></Label>
										<TextBox Grid.Column="3" Grid.Row="1" IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}" 
                                             Width="319" Text="{Binding CurrentMaster.ALL_COMP, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" MaxLength="30" Margin="3,3,3,2.8"></TextBox>
										<Label Grid.Column="4" Grid.Row="1" Content="{x:Static Properties:Resources.TYPE}"></Label>
										<ComboBox Grid.Column="5" Grid.Row="1"
												IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}"
												Style="{StaticResource ComboStyle}"
											 SelectedValuePath="Value" DisplayMemberPath="Name" ItemsSource="{Binding AllTypeList}"
												SelectedValue="{Binding CurrentMaster.TYPE, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
												></ComboBox>
									</StackPanel>
									<StackPanel Grid.Row="2" Orientation="Horizontal">
										<Label Grid.Column="0" Grid.Row="2" Content="{x:Static Properties:Resources.PIER_CODE}" Margin="23,3,3,3"></Label>
										<ComboBox Grid.Column="1" Grid.Row="2"
										      ItemsSource="{Binding PierList, UpdateSourceTrigger=PropertyChanged}" 
										      IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}"
										      SelectedValue="{Binding CurrentMaster.PIER_CODE, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
										<Label Grid.Column="0" Grid.Row="2" Content="{x:Static Properties:Resources.SelectedPastType}" Margin="23,3,3,3"></Label>
										<ComboBox Grid.Column="1" Grid.Row="2"
										      ItemsSource="{Binding PastTypeList, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Name" SelectedValuePath="Value" 
										      SelectedValue="{Binding SelectedPastType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
										<CheckBox Margin="23,3,3,3" Content="{x:Static Properties:Resources.CHECK_ROUTE}" Style="{StaticResource CheckStyle}"
														IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}"
														IsChecked="{Binding CurrentMaster.CHECK_ROUTE,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource StringToBool}}"/>
										<CheckBox Margin="23,3,3,3" Content="{x:Static Properties:Resources.AllowRoundPiece}" Style="{StaticResource CheckStyle}"
														IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}"
														IsChecked="{Binding CurrentMaster.ALLOW_ROUND_PIECE,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource StringToBool}}"/>
									</StackPanel>
								</Grid>
							</Border>
							<GroupBox Header="{x:Static Properties:Resources.Delv__Time}" >
								<DockPanel>
									<Grid HorizontalAlignment="Left" DockPanel.Dock="Top">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>
										<xctk:TimePicker Grid.Row="0" Grid.Column="0" Value="{Binding Path=SelectedDelvTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                         IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}" HorizontalAlignment="Center" Width="150" Height="30" Margin="3" Format="Custom" FormatString="HH:mm"></xctk:TimePicker>

										<Label Grid.Row="0" Grid.Column="1"  Content="{x:Static Properties:Resources.DelvEfficList}"  HorizontalAlignment="Left" Margin="3"  />
										<ComboBox Grid.Row="0" Grid.Column="2" SelectedItem="{Binding F190102S_DELV_EFFIC_Selected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                    x:Name="cbo_F190102S_DELV_EFFIC" ItemsSource="{Binding F190102S_DELV_EFFIC}"  Margin="3" MinWidth="140"
																								 SelectedValuePath="DELV_EFFIC" DisplayMemberPath="DELV_EFFIC_NAME"
                                                   IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}"></ComboBox>

										<Label Grid.Row="0" Grid.Column="3"  Content="{x:Static Properties:Resources.DELV_TMPR}"  HorizontalAlignment="Left" Margin="3"  />
										<ComboBox Grid.Row="0" Grid.Column="4"  SelectedItem="{Binding F000904S_DELV_TMPR_Selected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                   x:Name="cbo_F000904S_DELV_TMPR" ItemsSource="{Binding F000904S_DELV_TMPR}"  Margin="3"   MinWidth="140"
																								 SelectedValuePath="VALUE" DisplayMemberPath="NAME"
                                                  IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}"></ComboBox>

										<Button Grid.Row="0" Grid.Column="5" Grid.RowSpan="2" controls:PermissionService.FunctionId="BP7109010007" Command="{Binding AddTimeCommand}" 
                                                 Content="{x:Static Properties:Resources.AddTime}" IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}" Style="{StaticResource BtnStyle}"></Button>
										<Button Grid.Row="0" Grid.Column="6" Grid.RowSpan="2" controls:PermissionService.FunctionId="BP7109010008" Command="{Binding RemoveTimeCommand}" 
                                                Content="{x:Static Properties:Resources.DelTime}" IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}" Style="{StaticResource BtnStyle}"></Button>
										<DockPanel Grid.Column="0" Grid.Row="1" IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}">
											<Label Style="{StaticResource LbStyle}" Width="50" Content="{x:Static Properties:Resources.DelvTimes}"/>
											<TextBox Style="{StaticResource TxtStyle}" Text="{Binding DelvTimes,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" MaxWidth="80"/>
										</DockPanel>										
										<Label Grid.Row="1" Grid.Column="1"  Content="{x:Static Properties:Resources.DelvFrequency}"  HorizontalAlignment="Left" Margin="3"  />
										<WrapPanel Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="3" VerticalAlignment="Center" IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}">
											<CheckBox Content="{x:Static Properties:Resources.Sun}" Style="{StaticResource CheckStyle}" IsChecked="{Binding Sun,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
											<CheckBox Content="{x:Static Properties:Resources.Mon}" Style="{StaticResource CheckStyle}" IsChecked="{Binding Mon,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
											<CheckBox Content="{x:Static Properties:Resources.Tue}" Style="{StaticResource CheckStyle}" IsChecked="{Binding Tue,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
											<CheckBox Content="{x:Static Properties:Resources.Wen}" Style="{StaticResource CheckStyle}" IsChecked="{Binding Wed,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
											<CheckBox Content="{x:Static Properties:Resources.Thu}" Style="{StaticResource CheckStyle}" IsChecked="{Binding Thu,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
											<CheckBox Content="{x:Static Properties:Resources.Fri}" Style="{StaticResource CheckStyle}" IsChecked="{Binding Fri,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
											<CheckBox Content="{x:Static Properties:Resources.Sat}" Style="{StaticResource CheckStyle}" IsChecked="{Binding Sat,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
										</WrapPanel>
									</Grid>

									<DataGrid Name="F194701Grid" ItemsSource="{Binding F194701WithF19470101List}" DockPanel.Dock="Left" MinWidth="410" ScrollViewer.VerticalScrollBarVisibility="Auto"
											  Style="{StaticResource DgStyle}" SelectionMode="Single" SelectionUnit="FullRow"											
                                              HorizontalAlignment="Left" EnableRowVirtualization="True"
                                              SelectedItem="{Binding SelectedF194701WithF19470101, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
										<DataGrid.Columns>
											<DataGridCheckBoxColumn Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
												<DataGridCheckBoxColumn.HeaderTemplate>
													<DataTemplate>
														<CheckBox IsChecked="{Binding F194701AllSelectChecked, ElementName=Vm, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
																  Command="{Binding DataContext.F194701AllSelectCheckedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type uiLib:Wms3plUserControl}}}"
                                                                  Content="{x:Static res:Resources.SelectAll}">
														</CheckBox>
													</DataTemplate>
												</DataGridCheckBoxColumn.HeaderTemplate>
												<DataGridCheckBoxColumn.ElementStyle>
													<Style TargetType="CheckBox">
														<Setter Property="VerticalAlignment" Value="Center"/>
														<Setter Property="HorizontalAlignment" Value="Center"/>
														<Setter Property="Command" Value="{Binding DataContext.F194701SelectCheckedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type uiLib:Wms3plUserControl}}}"/>
													</Style>
												</DataGridCheckBoxColumn.ElementStyle>
												<DataGridCheckBoxColumn.EditingElementStyle>
													<Style TargetType="CheckBox">
														<Setter Property="VerticalAlignment" Value="Center"/>
														<Setter Property="HorizontalAlignment" Value="Center"/>
														<Setter Property="Command" Value="{Binding DataContext.F194701SelectCheckedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type uiLib:Wms3plUserControl}}}"/>
													</Style>
												</DataGridCheckBoxColumn.EditingElementStyle>
											</DataGridCheckBoxColumn>
											<DataGridTextColumn Header="{x:Static Properties:Resources.Delv__Time}" Binding="{Binding Item.Item1.DELV_TIME}" Width="100" IsReadOnly="True"  />
											<DataGridTextColumn Header="{x:Static Properties:Resources.DelvEfficList}" Binding="{Binding Item.Item1.DELV_EFFIC_NAME}" Width="100" IsReadOnly="True"  />
											<DataGridTextColumn Header="{x:Static Properties:Resources.DELV_EFFIC}" Visibility="Collapsed" Binding="{Binding Item.Item1.DELV_EFFIC}" Width="150" IsReadOnly="True"  />
											<DataGridTextColumn Header="{x:Static Properties:Resources.DELV_TMPR}" Binding="{Binding Item.Item1.DELV_TMPR_NAME}" Width="100" IsReadOnly="True"  />
											<DataGridTextColumn Header="{x:Static Properties:Resources.DELVTMPR}" Visibility="Collapsed" Binding="{Binding Item.Item1.DELV_TMPR}" Width="150" IsReadOnly="True"  />
											<DataGridCheckBoxColumn Header="{x:Static Properties:Resources.Sun}" Binding="{Binding Item.Item1.Sun,Converter={StaticResource StringToBool}}" Width="30" IsReadOnly="True"  />
											<DataGridCheckBoxColumn Header="{x:Static Properties:Resources.Mon}" Binding="{Binding Item.Item1.Mon,Converter={StaticResource StringToBool}}" Width="30" IsReadOnly="True"  />
											<DataGridCheckBoxColumn Header="{x:Static Properties:Resources.Tue}" Binding="{Binding Item.Item1.Tue,Converter={StaticResource StringToBool}}" Width="30" IsReadOnly="True"  />
											<DataGridCheckBoxColumn Header="{x:Static Properties:Resources.Wen}" Binding="{Binding Item.Item1.Wed,Converter={StaticResource StringToBool}}" Width="30" IsReadOnly="True"  />
											<DataGridCheckBoxColumn Header="{x:Static Properties:Resources.Thu}" Binding="{Binding Item.Item1.Thu,Converter={StaticResource StringToBool}}" Width="30" IsReadOnly="True"  />
											<DataGridCheckBoxColumn Header="{x:Static Properties:Resources.Fri}" Binding="{Binding Item.Item1.Fri,Converter={StaticResource StringToBool}}" Width="30" IsReadOnly="True"  />
											<DataGridCheckBoxColumn Header="{x:Static Properties:Resources.Sat}" Binding="{Binding Item.Item1.Sat,Converter={StaticResource StringToBool}}" Width="30" IsReadOnly="True"  />
											<DataGridTextColumn Header="{x:Static Properties:Resources.DelvTimes}" Binding="{Binding Item.Item1.DELV_TIMES}" IsReadOnly="True"  />
										</DataGrid.Columns>
										<DataGrid.Resources>
											<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="DodgerBlue"/>
											<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="White"/>
										</DataGrid.Resources>
									</DataGrid>

									<DataGrid ItemsSource="{Binding SelectedF194701WithF19470101.Item.Item2}" DockPanel.Dock="Top" MinWidth="230" ScrollViewer.VerticalScrollBarVisibility="Auto"
											Style="{StaticResource DgStyle}" SelectionMode="Single" SelectionUnit="FullRow" EnableRowVirtualization="True" >
										<DataGrid.Columns>
											<DataGridCheckBoxColumn  Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
												<DataGridCheckBoxColumn.HeaderTemplate>
													<DataTemplate>
														<CheckBox Command="{Binding DataContext.F1934EXAllSelectCheckedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type uiLib:Wms3plUserControl}}}" 
                                                                  IsChecked="{Binding F1934EXAllSelectChecked, ElementName=Vm,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                                  Content="{x:Static res:Resources.SelectAll}">
														</CheckBox>
													</DataTemplate>
												</DataGridCheckBoxColumn.HeaderTemplate>
												<DataGridCheckBoxColumn.ElementStyle>
													<Style TargetType="CheckBox">
														<Setter Property="VerticalAlignment" Value="Center"/>
														<Setter Property="HorizontalAlignment" Value="Center"/>
														<Setter Property="Command" Value="{Binding DataContext.F1934EXSelectCheckedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type uiLib:Wms3plUserControl}}}"/>
													</Style>
												</DataGridCheckBoxColumn.ElementStyle>
												<DataGridCheckBoxColumn.EditingElementStyle>
													<Style TargetType="CheckBox">
														<Setter Property="VerticalAlignment" Value="Center"/>
														<Setter Property="HorizontalAlignment" Value="Center"/>
														<Setter Property="Command" Value="{Binding DataContext.F1934EXSelectCheckedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type uiLib:Wms3plUserControl}}}"/>
													</Style>
												</DataGridCheckBoxColumn.EditingElementStyle>
											</DataGridCheckBoxColumn>
											<DataGridTextColumn Header="{x:Static Properties:Resources.ZIPCODE}" Binding="{Binding Item.ZIP_CODE}" Width="150" IsReadOnly="True"  />
											<DataGridTextColumn Header="{x:Static Properties:Resources.ZIPNAME}" Binding="{Binding Item.ZIP_NAME}" Width="150" IsReadOnly="True"  />
										</DataGrid.Columns>
										<DataGrid.Resources>
											<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="DodgerBlue"/>
											<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="White"/>
										</DataGrid.Resources>
									</DataGrid>

								</DockPanel>
							</GroupBox >
						</DockPanel>
					</TabItem>
                    <TabItem Visibility="{Binding UserOperateMode ,Converter={StaticResource EnumToVisibilityConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}">
                        <TabItem.Header>
                            <Button Name="btnP710902" Content="{x:Static Properties:Resources.DeliverServiceCust}" Click="btnP710902_Click"
									controls:PermissionService.FunctionId="BP7109010009"
									controls:PermissionService.FunctionName="{x:Static Properties:Resources.DeliverServiceCustTab}"/>
                        </TabItem.Header>
                    </TabItem>
                    <TabItem Header="{x:Static Properties:Resources.ACC_AREA_ID}" Width="Auto">
						<DockPanel>
							<GroupBox Header="" >
								<DockPanel>
									<Grid DockPanel.Dock="Top">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>
										<Label Style="{StaticResource LbTitleStyle}" Grid.Row="0" Grid.Column="0" Content="{x:Static Properties:Resources.Acc_AreaName}"/>
										<TextBox Style="{StaticResource TxtStyle}" Grid.Row="0" Grid.Column="1" Text="{Binding AccArea,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding UserOperateMode,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}"/>

										<Button Grid.Row="0" Grid.Column="2" controls:PermissionService.FunctionId="BP7109010010" Command="{Binding AddAreaCommand}" 
                                                 Content="{x:Static Properties:Resources.AddArea}"  Style="{StaticResource BtnStyle}"/>
										<Button Grid.Row="0" Grid.Column="3" controls:PermissionService.FunctionId="BP7109010011" Command="{Binding EditAreaCommand}" 
                                                Content="{x:Static Properties:Resources.EditArea}"  Style="{StaticResource BtnStyle}"/>
									</Grid>
									<DataGrid Name="F194708Grid" ItemsSource="{Binding F194708List}" DockPanel.Dock="Left" MinWidth="230" ScrollViewer.VerticalScrollBarVisibility="Auto"
											  Style="{StaticResource DgStyle}" SelectionMode="Single" SelectionUnit="FullRow"											
                                              HorizontalAlignment="Left"
                                              SelectedItem="{Binding SelectedF194708, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"                                              
                                              >
										<DataGrid.Columns>
											<DataGridTextColumn Header="{x:Static Properties:Resources.Acc_AreaName}"  Width="150" IsReadOnly="True" Binding="{Binding ACC_AREA}"/>
										</DataGrid.Columns>
										<DataGrid.Resources>
											<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="DodgerBlue"/>
											<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="White"/>
										</DataGrid.Resources>
									</DataGrid>

									<DataGrid ItemsSource="{Binding F1934ExList2,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" DockPanel.Dock="Top" MinWidth="230" ScrollViewer.VerticalScrollBarVisibility="Auto"
											Style="{StaticResource DgStyle}" SelectionMode="Single" SelectionUnit="FullRow" SelectedItem="{Binding SelectedF1934Ex2,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
											IsSynchronizedWithCurrentItem="True" HorizontalAlignment="Left" IsReadOnly="False" >
										<DataGrid.Columns>
											<DataGridCheckBoxColumn  Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
												<DataGridCheckBoxColumn.HeaderTemplate>
													<DataTemplate>
														<CheckBox Name="F1934EX2_ALLCheckBox" Checked="F1934EX2_ALLCheckBox_Checked" Unchecked="F1934EX2_ALLCheckBox_Unchecked"                                                                                                                                   
                                                                  IsEnabled="{Binding DataContext.UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query},RelativeSource={RelativeSource AncestorType={x:Type uiLib:Wms3plUserControl}}}" 
                                                                  IsChecked="{Binding F1934EX2AllSelectChecked, ElementName=Vm,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                                  Content="{x:Static res:Resources.SelectAll}">
														</CheckBox>
													</DataTemplate>
												</DataGridCheckBoxColumn.HeaderTemplate>
												<DataGridCheckBoxColumn.ElementStyle>
													<Style TargetType="CheckBox">
														<Setter Property="VerticalAlignment" Value="Center"/>
														<Setter Property="HorizontalAlignment" Value="Center"/>
														<Setter Property="IsEnabled" Value="{Binding DataContext.UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query},RelativeSource={RelativeSource AncestorType={x:Type uiLib:Wms3plUserControl}}}" />

													</Style>
												</DataGridCheckBoxColumn.ElementStyle>
											</DataGridCheckBoxColumn>
											<DataGridTextColumn Header="{x:Static Properties:Resources.ZIPCODE}" Binding="{Binding Item.ZIP_CODE}" Width="150" IsReadOnly="True"  />
											<DataGridTextColumn Header="{x:Static Properties:Resources.ZIPNAME}" Binding="{Binding Item.ZIP_NAME}" Width="150" IsReadOnly="True"  />
										</DataGrid.Columns>
										<DataGrid.Resources>
											<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="DodgerBlue"/>
											<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="White"/>
										</DataGrid.Resources>
									</DataGrid>
								</DockPanel>
							</GroupBox >
						</DockPanel>
					</TabItem>

					<TabItem Header="{x:Static Properties:Resources.OrdMaintain}" Width="Auto">
						<DockPanel>
							<GroupBox Header="" >
								<DockPanel>
									<Grid DockPanel.Dock="Top">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto"/>
										</Grid.RowDefinitions>
										<Label Grid.Row="0" Grid.Column="0" Style="{StaticResource LbTitleStyle}" Content="{x:Static Properties:Resources.TxtNum}"/>
										<TextBox Grid.Row="0" Grid.Column="1" Style="{StaticResource TxtStyle}" Text="{Binding TxtNum,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
										<Button Grid.Row="0" Grid.Column="2" controls:PermissionService.FunctionId="BP7109010012" Command="{Binding AddNumCommand}" 
                                                 Content="{x:Static Properties:Resources.AddNum}"  Style="{StaticResource BtnStyle}"/>
										<Button Grid.Row="0" Grid.Column="3" controls:PermissionService.FunctionId="BP7109010013" Command="{Binding EditNumCommand}" 
                                                Content="{x:Static Properties:Resources.EditNum}"  Style="{StaticResource BtnStyle}"/>
									</Grid>
									<DataGrid Name="F194709Grid" ItemsSource="{Binding F194709List}"  ScrollViewer.VerticalScrollBarVisibility="Auto"
											  Style="{StaticResource DgStyle}" SelectionMode="Single" SelectionUnit="FullRow"											
                                              HorizontalAlignment="Left"
                                              SelectedItem="{Binding SelectedF194709, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"                                              
                                              >
										<DataGrid.Columns>
											<DataGridTextColumn Header="{x:Static Properties:Resources.TxtNum}"  Width="150" IsReadOnly="True" Binding="{Binding NUM}"/>
										</DataGrid.Columns>
										<DataGrid.Resources>
											<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="DodgerBlue"/>
											<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="White"/>
										</DataGrid.Resources>
									</DataGrid>
								</DockPanel>
							</GroupBox>
						</DockPanel>
					</TabItem>

					<TabItem Header="{x:Static Properties:Resources.CarSendFee}" Width="Auto">
						<DockPanel>
							<GroupBox Header="" >
								<DockPanel>
									<Grid HorizontalAlignment="Left" DockPanel.Dock="Top">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="50" />
										</Grid.RowDefinitions>

										<Label Grid.Row="0" Grid.Column="1"  Content="{x:Static Properties:Resources.CarType}" />
										<!--,ValidatesOnDataErrors=True,ValidatesOnExceptions=True,NotifyOnValidationError=True-->
										<ComboBox Grid.Row="0" Grid.Column="2" SelectedValuePath="Value" DisplayMemberPath="Name"
													SelectedValue="{Binding CarData.CAR_KIND_ID,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
													ItemsSource="{Binding CarKindList}" Margin="3" MinWidth="140"													
													IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}"/>

										<Label Grid.Row="0" Grid.Column="3"  Content="{x:Static Properties:Resources.IN_OUT}" />
										<!--,ValidatesOnDataErrors=True,ValidatesOnExceptions=True,NotifyOnValidationError=True-->
										<ComboBox Grid.Row="0" Grid.Column="4" SelectedValuePath="Value" DisplayMemberPath="Name"
												  SelectedValue="{Binding CarData.IN_OUT,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                  ItemsSource="{Binding InOutList}" Margin="3" MinWidth="140"												  
                                                  IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}"/>

										<Label Grid.Row="0" Grid.Column="5" Content="{x:Static Properties:Resources.UNIT_FEE}" />
										<!--,ValidatesOnDataErrors=True,ValidatesOnExceptions=True,NotifyOnValidationError=True-->
										<TextBox Grid.Row="0" Grid.Column="6" Height="30" Style="{StaticResource TxtStyle}"
												 Text="{Binding CarData.FEE,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, 
															Converter={StaticResource ZeroPointConverter}}"
												 IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}"/>

										<Button Grid.Row="0" Grid.Column="7" Content="{x:Static Properties:Resources.AddSet}" Style="{StaticResource BtnStyle}" Margin="5,0,0,0"
												controls:PermissionService.FunctionId="BP7109010014" 
												Command="{Binding AddCarCommand}" 
                                                IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}" />
										<Button Grid.Row="0" Grid.Column="8" Content="{x:Static Properties:Resources.DelSet}" Style="{StaticResource BtnStyle}" Margin="5,0,0,0"
												controls:PermissionService.FunctionId="BP7109010015" 
												Command="{Binding RemoveCarCommand}" 
                                                IsEnabled="{Binding UserOperateMode,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}" />
									</Grid>

									<DataGrid Style="{StaticResource DgStyle}" DockPanel.Dock="Top"
												CellStyle="{StaticResource SingleClickEdit}"
												RowHeaderStyle="{StaticResource UcSingleRowHeaderEdit}"
												IsReadOnly="False"  
												ItemsSource="{Binding F194703List}" 
												IsEnabled="{Binding UserOperateMode ,Converter={StaticResource EnumToNotBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query},
														Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
										<DataGrid.Columns>
											<DataGridCheckBoxColumn IsReadOnly="False" Binding="{Binding IsSelected,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
												<DataGridCheckBoxColumn.HeaderTemplate>
													<DataTemplate>
														<CheckBox IsChecked="{Binding IsSelectedAll, ElementName=Vm, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
															Command="{Binding CheckAllCommand, ElementName=Vm}" Content="{x:Static res:Resources.SelectAll}"/>
													</DataTemplate>
												</DataGridCheckBoxColumn.HeaderTemplate>
											</DataGridCheckBoxColumn>

											<DataGridTextColumn Header="{x:Static Properties:Resources.CarType}" IsReadOnly="True">
												<DataGridTextColumn.Binding>
													<MultiBinding Converter="{StaticResource NameValuePairMultiConverter}">
														<Binding Path="Item.CAR_KIND_ID" />
														<Binding Path="DataContext.CarKindList" RelativeSource="{RelativeSource AncestorType={x:Type uiLib:Wms3plUserControl}}" />
													</MultiBinding>
												</DataGridTextColumn.Binding>
											</DataGridTextColumn>

											<DataGridTextColumn Header="{x:Static Properties:Resources.IN_OUT}" IsReadOnly="True">
												<DataGridTextColumn.Binding>
													<MultiBinding Converter="{StaticResource NameValuePairMultiConverter}">
														<Binding Path="Item.IN_OUT" />
														<Binding Path="DataContext.InOutList" RelativeSource="{RelativeSource AncestorType={x:Type uiLib:Wms3plUserControl}}" />
													</MultiBinding>
												</DataGridTextColumn.Binding>
											</DataGridTextColumn>

											<DataGridTextColumn Header="{x:Static Properties:Resources.UNIT_FEE}" IsReadOnly="False" Binding="{Binding Item.FEE,Mode=TwoWay,UpdateSourceTrigger=LostFocus,
												ValidatesOnDataErrors=True,ValidatesOnExceptions=True,NotifyOnValidationError=True, 
												Converter={StaticResource ZeroPointConverter}}" />
										</DataGrid.Columns>
									</DataGrid>
								</DockPanel>
							</GroupBox >
						</DockPanel>
					</TabItem>
				</TabControl>
			</uiLib:BasicMaster.MainContent>
		</uiLib:BasicMaster>
	</telerik:RadBusyIndicator>
</uiLib:Wms3plUserControl>
