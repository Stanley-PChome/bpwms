<uiLib:Wms3plUserControl x:Class="Wms3pl.WpfClient.P71.Views.P7106010000"
			xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
			xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"                        
			xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d" 
			xmlns:uiLib="clr-namespace:Wms3pl.WpfClient.UILib;assembly=Wms3pl.WpfClient.UILib"
			xmlns:controls="clr-namespace:Wms3pl.WpfClient.UILib.Controls;assembly=Wms3pl.WpfClient.UILib"
			xmlns:common="clr-namespace:Wms3pl.WpfClient.Common;assembly=Wms3pl.WpfClient.Common"
			xmlns:viewModel="clr-namespace:Wms3pl.WpfClient.P71.ViewModel"
            xmlns:Properties="clr-namespace:Wms3pl.WpfClient.P71.Properties" 
            xmlns:res="clr-namespace:Wms3pl.WpfClient.Resources;assembly=Wms3pl.WpfClient.Resources"
            xmlns:converters="clr-namespace:Wms3pl.WpfClient.Common.Converters;assembly=Wms3pl.WpfClient.Common"
			x:Name="Window" Margin="0,0,0,0" HorizontalAlignment="Stretch" FontSize="18" MinWidth="800"
			controls:PermissionService.FunctionId="P7106010000"
			controls:PermissionService.FunctionName="選單維護"
			FormException="{Binding Exception}">
	<uiLib:Wms3plUserControl.DataContext>
		<viewModel:P7106010000_ViewModel x:Name="Vm"/>
	</uiLib:Wms3plUserControl.DataContext>
	<uiLib:Wms3plUserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/Wms3pl.WpfClient.UILib;component/Generic.xaml"/>
			</ResourceDictionary.MergedDictionaries>
            <common:NotConverter x:Key="NotConverter" />
            <converters:StringToBoolConverter x:Key="StringToBoolConverter" />
            <converters:EnumBooleanConverter x:Key="EnumBooleanConverter"/>
            <converters:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter"/>
            <converters:EnumToNotVisibilityConverter x:Key="EnumToNotVisibilityConverter"/>
            <converters:DataGridRowNumberConverter x:Key="DataGridRowNumberConverter"/>
            <FrameworkElement x:Key="ProxyElement" DataContext="{Binding}"/>
        </ResourceDictionary>
	</uiLib:Wms3plUserControl.Resources>
    <telerik:RadBusyIndicator x:Name="GridBusyIndicator" BusyContent="{x:Static res:Resources.Loading}" IsIndeterminate="False" IsBusy="{Binding IsBusy}">
		<uiLib:BasicMaster x:Name="Master">
			<uiLib:BasicMaster.ToolBarArea>
				<WrapPanel>
                    <Button Style="{StaticResource SearchButton}" controls:PermissionService.FunctionId="BP7106010001" Command="{Binding SearchCommand}" />
                    <Button Style="{StaticResource AddButton}" controls:PermissionService.FunctionId="BP7106010002" Command="{Binding AddCommand}" Visibility="{Binding SelectedTab,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource EnumToNotVisibilityConverter},ConverterParameter={x:Static viewModel:SelectTab.Tab2}}" />
                    <Button Style="{StaticResource EditButton}" controls:PermissionService.FunctionId="BP7106010003" Command="{Binding EditCommand}" />
                    <Button Style="{StaticResource CancelButton}" controls:PermissionService.FunctionId="BP7106010004" Command="{Binding CancelCommand}" />
                    <Button Style="{StaticResource DeleteButton}" controls:PermissionService.FunctionId="BP7106010005" Command="{Binding DeleteCommand}" Visibility="{Binding SelectedTab,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource EnumToNotVisibilityConverter},ConverterParameter={x:Static viewModel:SelectTab.Tab2}}" />
                    <Button Style="{StaticResource SaveButton}" controls:PermissionService.FunctionId="BP7106010006" Command="{Binding SaveCommand}" IsEnabled="{Binding Path=(Validation.HasError), ElementName=LayoutRoot, Converter={StaticResource NotConverter}}"/>
				</WrapPanel>
			</uiLib:BasicMaster.ToolBarArea>
			<uiLib:BasicMaster.MainContent>
				<TabControl x:Name="LayoutRoot" >
					<TabControl.BindingGroup>
						<BindingGroup Name="errorGroup" />
					</TabControl.BindingGroup>
                    <TabItem Header="{x:Static res:Resources.Main}" Width="Auto" 
                             IsEnabled="{Binding EnableMain,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                             Visibility="{Binding IsWmsUser,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                             IsSelected="{Binding SelectedTab,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static viewModel:SelectTab.Tab1}}">
                        <DockPanel>
                            <ContentControl Visibility="Collapsed" Content="{StaticResource ProxyElement}"></ContentControl>
                            <!-- 由此處開始加入畫面項目 -->
                            <DockPanel DockPanel.Dock="Top" Visibility="{Binding UserOperateMode,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource EnumToNotVisibilityConverter},ConverterParameter={x:Static uiLib:OperateMode.Add}}">
                                <GroupBox Header="{x:Static res:Resources.Query}" DockPanel.Dock="Top">
                                    <WrapPanel>
                                        <Label Margin="5" Style="{StaticResource LbStyle}" Content="{x:Static Properties:Resources.P71060000_Topic}"/>
                                        <ComboBox Margin="5" Style="{StaticResource ComboStyle}" 
                                                  SelectedValuePath="Value" DisplayMemberPath="Name"
                                                  IsEnabled="{Binding UserOperateMode,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}"
                                                  ItemsSource="{Binding TopicList,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                                  SelectedValue="{Binding SelectedTopic,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></ComboBox>
                                        <Label Margin="5" Style="{StaticResource LbStyle}" Content="{x:Static Properties:Resources.P71060000_SubTopic}"/>
                                        <ComboBox Margin="5" Style="{StaticResource ComboStyle}" 
                                                  SelectedValuePath="Value" DisplayMemberPath="Name"
                                                  IsEnabled="{Binding UserOperateMode,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}"
                                                  ItemsSource="{Binding SubTopicList,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                                  SelectedValue="{Binding SelectedSubTopic,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></ComboBox>
                                        
                                    </WrapPanel>
                                </GroupBox>
                            </DockPanel>
                            <DockPanel DockPanel.Dock="Top" Visibility="{Binding UserOperateMode,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource EnumToVisibilityConverter},ConverterParameter={x:Static uiLib:OperateMode.Add}}">
                                <WrapPanel DockPanel.Dock="Top">
                                    <Label Margin="5" Style="{StaticResource LbStyle}" Content="{x:Static Properties:Resources.P71060000_Topic}"/>
                                    <TextBox Margin="5" Text="{Binding AddTopic,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                             InputMethod.IsInputMethodEnabled="False" MaxLength="20"
                                             Style="{StaticResource TxtStyle}"/>
                                    <Label Margin="5,5,24,5" Style="{StaticResource LbStyle}" Content="{x:Static Properties:Resources.P71060000_SubTopic}"/>
                                    <TextBox Margin="5" Text="{Binding AddSubTop,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                             InputMethod.IsInputMethodEnabled="False" MaxLength="30"
                                             Style="{StaticResource TxtStyle}"/>
                                    <Label Margin="5" Style="{StaticResource LbStyle}" Content="{x:Static Properties:Resources.P71060000_SubName}"/>
                                    <TextBox Margin="5" Text="{Binding AddSubTopName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                             Style="{StaticResource TxtStyle}"  MaxLength="30"/>
                                </WrapPanel>
                                <WrapPanel DockPanel.Dock="Top">
                                    <Label Margin="5" Style="{StaticResource LbStyle}" Content="{x:Static Properties:Resources.P71060000_Value}"/>
                                    <TextBox Margin="5" Text="{Binding AddValue,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                             InputMethod.IsInputMethodEnabled="False" MaxLength="20"
                                             Style="{StaticResource TxtStyle}"/>
                                    <Label Margin="5" Style="{StaticResource LbStyle}" Content="{x:Static Properties:Resources.P71060000_Name}"/>
                                    <TextBox Margin="5" Text="{Binding AddName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                             Style="{StaticResource TxtStyle}" MaxLength="30"/>
                                    <CheckBox Style="{StaticResource CheckStyle}" Content="{x:Static Properties:Resources.P71060000_IsUsage}" IsChecked="{Binding IsUsage,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource StringToBoolConverter}}"/>
                                    <Button Margin="5" Content="{x:Static Properties:Resources.P71060000_Add}" Width="85px" Command="{Binding InsertCommand}"/>
                                    <Button Margin="5" Content="{x:Static Properties:Resources.P71060000_Remove}" Width="85px" Command="{Binding RemoveCommand}"/>
                                </WrapPanel>
                            </DockPanel>
                            <DataGrid Margin="5" Style="{StaticResource DgStyle}" 
                                          ItemsSource="{Binding DgSource}" CellStyle="{StaticResource SingleClickEdit}"
                                          IsReadOnly="{Binding DataContext.UserOperateMode, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}"
                                          SelectedItem="{Binding SelectDgSource,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <DataGrid.Columns>
                                    <DataGridCheckBoxColumn Binding="{Binding IsSelected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                          IsReadOnly="True" Visibility="{Binding DataContext.UserOperateMode, Source={StaticResource ProxyElement}, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource EnumToNotVisibilityConverter},ConverterParameter={x:Static uiLib:OperateMode.Edit}}">
                                        <DataGridCheckBoxColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <CheckBox Style="{StaticResource CheckStyle}" Content="{x:Static Properties:Resources.IsCheckAll}" 
                                                              IsChecked="{Binding DataContext.IsCheckAll, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl},Mode = TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                              Visibility="{Binding DataContext.UserOperateMode, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource EnumToNotVisibilityConverter},ConverterParameter={x:Static uiLib:OperateMode.Edit}}"/>
                                            </DataTemplate>
                                        </DataGridCheckBoxColumn.HeaderTemplate>
                                        <DataGridCheckBoxColumn.ElementStyle>
                                            <Style TargetType="CheckBox">
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                                <Setter Property="HorizontalAlignment" Value="Center" />
                                                <Setter Property="Visibility" Value="{Binding DataContext.UserOperateMode, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource EnumToNotVisibilityConverter},ConverterParameter={x:Static uiLib:OperateMode.Edit}}"></Setter>
                                            </Style>
                                        </DataGridCheckBoxColumn.ElementStyle>
                                    </DataGridCheckBoxColumn>
                                    <DataGridTextColumn Header="{x:Static res:Resources.ItemNumber}" IsReadOnly="True"
                                                        Visibility="{Binding DataContext.UserOperateMode, Source={StaticResource ProxyElement}, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource EnumToVisibilityConverter},ConverterParameter={x:Static uiLib:OperateMode.Edit}}">
                                        <DataGridTextColumn.Binding>
                                            <MultiBinding Converter="{StaticResource DataGridRowNumberConverter}">
                                                <Binding />
                                                <Binding RelativeSource="{RelativeSource FindAncestor,AncestorType=DataGrid}"/>
                                            </MultiBinding>
                                        </DataGridTextColumn.Binding>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="{x:Static Properties:Resources.P71060000_Topic}" Binding="{Binding Item.TOPIC}" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="{x:Static Properties:Resources.P71060000_SubTopic}" Binding="{Binding Item.SUBTOPIC}" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="{x:Static Properties:Resources.P71060000_SubName}" Binding="{Binding Item.SUB_NAME}" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="{x:Static Properties:Resources.P71060000_Value}" Binding="{Binding Item.VALUE}" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="{x:Static Properties:Resources.P71060000_Name}" Binding="{Binding Item.NAME}">
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="TextBox">
                                                <Setter Property="MaxLength" Value="30"/>
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridCheckBoxColumn Header="{x:Static Properties:Resources.P71060000_IsUsage}" Binding="{Binding Item.ISUSAGE,Converter={StaticResource StringToBoolConverter}}"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </DockPanel>
					</TabItem>
                    <TabItem Header="{x:Static Properties:Resources.P71060000_LangEdit}" Width="Auto" 
                             IsEnabled="{Binding EnableLang,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                             IsSelected="{Binding SelectedTab,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static viewModel:SelectTab.Tab2}}">
                        <DockPanel>
                            <DockPanel DockPanel.Dock="Top" Visibility="{Binding UserOperateMode,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource EnumToNotVisibilityConverter},ConverterParameter={x:Static uiLib:OperateMode.Add}}">
                            <GroupBox Header="{x:Static res:Resources.Query}" DockPanel.Dock="Top">
                                <WrapPanel>
                                    <Label Margin="5" Style="{StaticResource LbStyle}" Content="{x:Static Properties:Resources.P71060000_Topic}"/>
                                    <ComboBox Margin="5" Style="{StaticResource ComboStyle}" 
                                                  SelectedValuePath="Value" DisplayMemberPath="Name"
                                                  IsEnabled="{Binding UserOperateMode,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}"
                                                  ItemsSource="{Binding TopicList,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                                  SelectedValue="{Binding SelectedTopic,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></ComboBox>
                                    <Label Margin="5" Style="{StaticResource LbStyle}" Content="{x:Static Properties:Resources.P71060000_SubTopic}"/>
                                    <ComboBox Margin="5" Style="{StaticResource ComboStyle}" 
                                                  SelectedValuePath="Value" DisplayMemberPath="Name"
                                                  IsEnabled="{Binding UserOperateMode,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}"
                                                  ItemsSource="{Binding SubTopicList,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                                  SelectedValue="{Binding SelectedSubTopic,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></ComboBox>
                                        <Label Margin="5" Style="{StaticResource LbStyle}" Content="{x:Static Properties:Resources.P71060000_Lang}"/>
                                        <ComboBox Margin="5" Style="{StaticResource ComboStyle}" 
                                                  SelectedValuePath="Value" DisplayMemberPath="Name"
                                                  IsEnabled="{Binding UserOperateMode,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}"
                                                  ItemsSource="{Binding LangList,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                                  SelectedValue="{Binding SelectedLang,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></ComboBox>
                                    </WrapPanel>
                            </GroupBox>
                        </DockPanel>
                            <DataGrid Margin="5" Style="{StaticResource DgStyle}" 
                                          ItemsSource="{Binding DgLangSource}" CellStyle="{StaticResource SingleClickEdit}"
                                          IsReadOnly="{Binding DataContext.UserOperateMode, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource EnumBooleanConverter},ConverterParameter={x:Static uiLib:OperateMode.Query}}"
                                          SelectedItem="{Binding SelectDgLangSource,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="{x:Static res:Resources.ItemNumber}" IsReadOnly="True">
                                        <DataGridTextColumn.Binding>
                                            <MultiBinding Converter="{StaticResource DataGridRowNumberConverter}">
                                                <Binding />
                                                <Binding RelativeSource="{RelativeSource FindAncestor,AncestorType=DataGrid}"/>
                                            </MultiBinding>
                                        </DataGridTextColumn.Binding>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="{x:Static Properties:Resources.P71060000_Topic}" Binding="{Binding TOPIC}" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="{x:Static Properties:Resources.P71060000_SubTopic}" Binding="{Binding SUBTOPIC}" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="{x:Static Properties:Resources.P71060000_Value}" Binding="{Binding VALUE}" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="{x:Static Properties:Resources.P71060000_Name}" Binding="{Binding NAME}" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="{x:Static Properties:Resources.P71060000_LangValue}" Binding="{Binding LANG}" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="{x:Static Properties:Resources.P71060000_LangName}" Binding="{Binding LANGNAME}">
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="TextBox">
                                                <Setter Property="MaxLength" Value="30"/>
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                    </DataGridTextColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </DockPanel>
                    </TabItem>
                </TabControl>
			</uiLib:BasicMaster.MainContent>
		</uiLib:BasicMaster>
	</telerik:RadBusyIndicator>
</uiLib:Wms3plUserControl>
