<uiLib:Wms3plWindow x:Class="Wms3pl.WpfClient.P71.Views.P7101010101"
		xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d"
		xmlns:uiLib="clr-namespace:Wms3pl.WpfClient.UILib;assembly=Wms3pl.WpfClient.UILib"
		xmlns:controls="clr-namespace:Wms3pl.WpfClient.UILib.Controls;assembly=Wms3pl.WpfClient.UILib"
		xmlns:common="clr-namespace:Wms3pl.WpfClient.Common;assembly=Wms3pl.WpfClient.Common"
		xmlns:viewModel="clr-namespace:Wms3pl.WpfClient.P71.ViewModel" 
		xmlns:Properties="clr-namespace:Wms3pl.WpfClient.P71.Properties" 
		xmlns:res="clr-namespace:Wms3pl.WpfClient.Resources;assembly=Wms3pl.WpfClient.Resources"    
		x:Name="Window" Margin="0,0,0,0" HorizontalAlignment="Stretch" FontSize="16" MinWidth="600" MinHeight="500" Title="儲位調整"
		controls:PermissionService.CheckPermission="False" FormException="{Binding Exception}">
	<uiLib:Wms3plWindow.DataContext>
		<viewModel:P7101010101_ViewModel x:Name="Vm" />
	</uiLib:Wms3plWindow.DataContext>
	<uiLib:Wms3plWindow.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/Wms3pl.WpfClient.UILib;component/Generic.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<common:NotConverter x:Key="NotConverter" />
			<FrameworkElement x:Key="ProxyElement" DataContext="{Binding}"></FrameworkElement>
		</ResourceDictionary>
	</uiLib:Wms3plWindow.Resources>
	<telerik:RadBusyIndicator x:Name="GridBusyIndicator" BusyContent="{x:Static res:Resources.Loading}" IsIndeterminate="False"
			IsBusy="{Binding IsBusy}">
		<uiLib:BasicMaster x:Name="Master">
			<uiLib:BasicMaster.ToolBarArea>
				<WrapPanel>
					<Button Style="{StaticResource CancelButton}" controls:PermissionService.FunctionId="BP710101010101"
							Command="{Binding CancelCommand}" />
					<Button Style="{StaticResource SaveButton}" controls:PermissionService.FunctionId="BP710101010102"
							Command="{Binding SaveCommand}"
							IsEnabled="{Binding Path=(Validation.HasError), ElementName=LayoutRoot, Converter={StaticResource NotConverter}}" />
				</WrapPanel>
			</uiLib:BasicMaster.ToolBarArea>
			<uiLib:BasicMaster.MainContent>
				<TabControl x:Name="LayoutRoot">
					<TabControl.BindingGroup>
						<BindingGroup Name="errorGroup" />
					</TabControl.BindingGroup>
					<TabItem Header="{x:Static res:Resources.Main}" Width="Auto">
						<DockPanel Style="{StaticResource WindowDockPanelStyle}">
							<ContentControl Visibility="Collapsed" Content="{StaticResource ProxyElement}"></ContentControl>
							<!-- 由此處開始加入畫面項目 -->
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="1*" />
									<ColumnDefinition Width="1*" />
									<ColumnDefinition Width="1*" />
									<ColumnDefinition Width="1*" />
								</Grid.ColumnDefinitions>
								<DataGrid Name="dgFloor"
										ItemsSource="{Binding FloorList,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
										Grid.Row="0" Grid.Column="0" AutoGenerateColumns="False" CanUserAddRows="False"
										CanUserDeleteRows="False" SelectionMode="Single" SelectionUnit="FullRow"
										IsReadOnly="True" Style="{StaticResource DgStyle}"
										SelectedItem="{Binding SelectedFloor,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
										IsSynchronizedWithCurrentItem="True">
									<DataGrid.Columns>
										<DataGridCheckBoxColumn
												Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
											<DataGridCheckBoxColumn.HeaderTemplate>
												<DataTemplate>
													<Label Content="{x:Static Properties:Resources.Check}" />
												</DataTemplate>
											</DataGridCheckBoxColumn.HeaderTemplate>
											<DataGridCheckBoxColumn.ElementStyle>
												<Style TargetType="CheckBox">
													<Setter Property="VerticalAlignment" Value="Center" />
													<Setter Property="HorizontalAlignment" Value="Center" />
												</Style>
											</DataGridCheckBoxColumn.ElementStyle>
										</DataGridCheckBoxColumn>
										<DataGridTextColumn Header="{x:Static Properties:Resources.Floor}" IsReadOnly="True" Binding="{Binding Item}" />
									</DataGrid.Columns>
								</DataGrid>
								<DataGrid Name="dgChannel"
										ItemsSource="{Binding ChannelList,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
										Grid.Row="0" Grid.Column="1" AutoGenerateColumns="False" CanUserAddRows="False"
										CanUserDeleteRows="False" SelectionMode="Single" SelectionUnit="FullRow"
										IsReadOnly="True" Style="{StaticResource DgStyle}"
										SelectedItem="{Binding SelectedChannel,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
										IsSynchronizedWithCurrentItem="True">
									<DataGrid.Columns>
										<DataGridCheckBoxColumn
												Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
											<DataGridCheckBoxColumn.HeaderTemplate >
												<DataTemplate>
													<Label Content="{x:Static Properties:Resources.Check}"/>
												</DataTemplate>
											</DataGridCheckBoxColumn.HeaderTemplate>
											<DataGridCheckBoxColumn.ElementStyle>
												<Style TargetType="CheckBox">
													<Setter Property="VerticalAlignment" Value="Center" />
													<Setter Property="HorizontalAlignment" Value="Center" />
													<Setter Property="IsEnabled"
															Value="{Binding DataContext.FloorIsSelect, Source={StaticResource ProxyElement}, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
												</Style>
											</DataGridCheckBoxColumn.ElementStyle>
										</DataGridCheckBoxColumn>
										<DataGridTextColumn Header="{x:Static Properties:Resources.Channel}" IsReadOnly="True" Binding="{Binding Item}" />
									</DataGrid.Columns>
								</DataGrid>
								<DataGrid Name="dgPlain"
										ItemsSource="{Binding PlainList,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
										Grid.Row="0" Grid.Column="2" AutoGenerateColumns="False" CanUserAddRows="False"
										CanUserDeleteRows="False" SelectionMode="Single" SelectionUnit="FullRow"
										IsReadOnly="True" Style="{StaticResource DgStyle}"
										SelectedItem="{Binding SelectedPlain,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
										IsSynchronizedWithCurrentItem="True">
									<DataGrid.Columns>
										<DataGridCheckBoxColumn
												Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
											<DataGridCheckBoxColumn.HeaderTemplate>
												<DataTemplate>
													<Label Content="{x:Static Properties:Resources.Check}" />
												</DataTemplate>
											</DataGridCheckBoxColumn.HeaderTemplate>
											<DataGridCheckBoxColumn.ElementStyle>
												<Style TargetType="CheckBox">
													<Setter Property="VerticalAlignment" Value="Center" />
													<Setter Property="HorizontalAlignment" Value="Center" />
													<Setter Property="IsEnabled"
															Value="{Binding DataContext.ChannelIsSelect, Source={StaticResource ProxyElement}, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
												</Style>
											</DataGridCheckBoxColumn.ElementStyle>
										</DataGridCheckBoxColumn>
										<DataGridTextColumn Header="{x:Static Properties:Resources.Plain}" IsReadOnly="True" Binding="{Binding Item}" />
									</DataGrid.Columns>
								</DataGrid>
								<DataGrid Name="dgLocLevel"
										ItemsSource="{Binding LocLevelList,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
										Grid.Row="0" Grid.Column="3" AutoGenerateColumns="False" CanUserAddRows="False"
										CanUserDeleteRows="False" SelectionMode="Single" SelectionUnit="FullRow"
										IsReadOnly="True" Style="{StaticResource DgStyle}"
										SelectedItem="{Binding SelectedLocLevel,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
										IsSynchronizedWithCurrentItem="True">
									<DataGrid.Columns>
										<DataGridCheckBoxColumn
												Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
											<DataGridCheckBoxColumn.HeaderTemplate>
												<DataTemplate>
													<Label Content="{x:Static Properties:Resources.Check}" />
												</DataTemplate>
											</DataGridCheckBoxColumn.HeaderTemplate>
											<DataGridCheckBoxColumn.ElementStyle>
												<Style TargetType="CheckBox">
													<Setter Property="VerticalAlignment" Value="Center" />
													<Setter Property="HorizontalAlignment" Value="Center" />
													<Setter Property="IsEnabled"
															Value="{Binding DataContext.PlainIsSelect, Source={StaticResource ProxyElement}, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
												</Style>
											</DataGridCheckBoxColumn.ElementStyle>
										</DataGridCheckBoxColumn>
										<DataGridTextColumn Header="{x:Static Properties:Resources.LocLevel}" IsReadOnly="True" Binding="{Binding Item}" />
									</DataGrid.Columns>
								</DataGrid>
							</Grid>
						</DockPanel>
					</TabItem>
				</TabControl>
			</uiLib:BasicMaster.MainContent>
		</uiLib:BasicMaster>
	</telerik:RadBusyIndicator>
</uiLib:Wms3plWindow>
