//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wms3pl.WpfClient.Services.MembershipProviderService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProviderProperties", Namespace="http://schemas.datacontract.org/2004/07/Wms3pl.WebServices.Security")]
    [System.SerializableAttribute()]
    public partial class ProviderProperties : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnablePasswordResetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnablePasswordRetrievalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxInvalidPasswordAttemptsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinRequiredNonAlphanumericCharactersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinRequiredPasswordLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PasswordAttemptWindowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Web.Security.MembershipPasswordFormat PasswordFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordStrengthRegularExpressionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RequiresQuestionAndAnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RequiresUniqueEmailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationName {
            get {
                return this.ApplicationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationNameField, value) != true)) {
                    this.ApplicationNameField = value;
                    this.RaisePropertyChanged("ApplicationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnablePasswordReset {
            get {
                return this.EnablePasswordResetField;
            }
            set {
                if ((this.EnablePasswordResetField.Equals(value) != true)) {
                    this.EnablePasswordResetField = value;
                    this.RaisePropertyChanged("EnablePasswordReset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnablePasswordRetrieval {
            get {
                return this.EnablePasswordRetrievalField;
            }
            set {
                if ((this.EnablePasswordRetrievalField.Equals(value) != true)) {
                    this.EnablePasswordRetrievalField = value;
                    this.RaisePropertyChanged("EnablePasswordRetrieval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxInvalidPasswordAttempts {
            get {
                return this.MaxInvalidPasswordAttemptsField;
            }
            set {
                if ((this.MaxInvalidPasswordAttemptsField.Equals(value) != true)) {
                    this.MaxInvalidPasswordAttemptsField = value;
                    this.RaisePropertyChanged("MaxInvalidPasswordAttempts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinRequiredNonAlphanumericCharacters {
            get {
                return this.MinRequiredNonAlphanumericCharactersField;
            }
            set {
                if ((this.MinRequiredNonAlphanumericCharactersField.Equals(value) != true)) {
                    this.MinRequiredNonAlphanumericCharactersField = value;
                    this.RaisePropertyChanged("MinRequiredNonAlphanumericCharacters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinRequiredPasswordLength {
            get {
                return this.MinRequiredPasswordLengthField;
            }
            set {
                if ((this.MinRequiredPasswordLengthField.Equals(value) != true)) {
                    this.MinRequiredPasswordLengthField = value;
                    this.RaisePropertyChanged("MinRequiredPasswordLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PasswordAttemptWindow {
            get {
                return this.PasswordAttemptWindowField;
            }
            set {
                if ((this.PasswordAttemptWindowField.Equals(value) != true)) {
                    this.PasswordAttemptWindowField = value;
                    this.RaisePropertyChanged("PasswordAttemptWindow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Web.Security.MembershipPasswordFormat PasswordFormat {
            get {
                return this.PasswordFormatField;
            }
            set {
                if ((this.PasswordFormatField.Equals(value) != true)) {
                    this.PasswordFormatField = value;
                    this.RaisePropertyChanged("PasswordFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordStrengthRegularExpression {
            get {
                return this.PasswordStrengthRegularExpressionField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordStrengthRegularExpressionField, value) != true)) {
                    this.PasswordStrengthRegularExpressionField = value;
                    this.RaisePropertyChanged("PasswordStrengthRegularExpression");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RequiresQuestionAndAnswer {
            get {
                return this.RequiresQuestionAndAnswerField;
            }
            set {
                if ((this.RequiresQuestionAndAnswerField.Equals(value) != true)) {
                    this.RequiresQuestionAndAnswerField = value;
                    this.RaisePropertyChanged("RequiresQuestionAndAnswer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RequiresUniqueEmail {
            get {
                return this.RequiresUniqueEmailField;
            }
            set {
                if ((this.RequiresUniqueEmailField.Equals(value) != true)) {
                    this.RequiresUniqueEmailField = value;
                    this.RaisePropertyChanged("RequiresUniqueEmail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MembershipCreateResult", Namespace="http://schemas.datacontract.org/2004/07/Wms3pl.WebServices.Security")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Wms3pl.WpfClient.Services.MembershipProviderService.ProviderProperties))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Wms3pl.WpfClient.Services.MembershipProviderService.MembershipFindResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Web.Security.MembershipPasswordFormat))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Web.Security.MembershipCreateStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Web.Security.MembershipUser[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Wms3pl.WpfClient.Services.MembershipProviderService.FaultDetail))]
    public partial class MembershipCreateResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Web.Security.MembershipCreateStatus CreateStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Web.Security.MembershipUser UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Web.Security.MembershipCreateStatus CreateStatus {
            get {
                return this.CreateStatusField;
            }
            set {
                if ((this.CreateStatusField.Equals(value) != true)) {
                    this.CreateStatusField = value;
                    this.RaisePropertyChanged("CreateStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Web.Security.MembershipUser User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MembershipFindResult", Namespace="http://schemas.datacontract.org/2004/07/Wms3pl.WebServices.Security")]
    [System.SerializableAttribute()]
    public partial class MembershipFindResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecordCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Web.Security.MembershipUser[] UsersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecordCount {
            get {
                return this.RecordCountField;
            }
            set {
                if ((this.RecordCountField.Equals(value) != true)) {
                    this.RecordCountField = value;
                    this.RaisePropertyChanged("RecordCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Web.Security.MembershipUser[] Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaultDetail", Namespace="http://Wms3pl")]
    [System.SerializableAttribute()]
    public partial class FaultDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Wms3pl", ConfigurationName="MembershipProviderService.MembershipProvider")]
    public interface MembershipProvider {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wms3pl/MembershipProvider/TestInput", ReplyAction="http://Wms3pl/MembershipProvider/TestInputResponse")]
        System.DateTime TestInput(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wms3pl/MembershipProvider/GetProviderProperties", ReplyAction="http://Wms3pl/MembershipProvider/GetProviderPropertiesResponse")]
        Wms3pl.WpfClient.Services.MembershipProviderService.ProviderProperties GetProviderProperties();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wms3pl/MembershipProvider/GetUserByKey", ReplyAction="http://Wms3pl/MembershipProvider/GetUserByKeyResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Wms3pl.WpfClient.Services.MembershipProviderService.ProviderProperties))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Wms3pl.WpfClient.Services.MembershipProviderService.MembershipCreateResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Wms3pl.WpfClient.Services.MembershipProviderService.MembershipFindResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Web.Security.MembershipPasswordFormat))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Web.Security.MembershipUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Web.Security.MembershipCreateStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Web.Security.MembershipUser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Wms3pl.WpfClient.Services.MembershipProviderService.FaultDetail))]
        System.Web.Security.MembershipUser GetUserByKey(object providerUserKey, bool userIsOnline);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wms3pl/MembershipProvider/CreateUser", ReplyAction="http://Wms3pl/MembershipProvider/CreateUserResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Wms3pl.WpfClient.Services.MembershipProviderService.ProviderProperties))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Wms3pl.WpfClient.Services.MembershipProviderService.MembershipCreateResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Wms3pl.WpfClient.Services.MembershipProviderService.MembershipFindResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Web.Security.MembershipPasswordFormat))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Web.Security.MembershipUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Web.Security.MembershipCreateStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Web.Security.MembershipUser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Wms3pl.WpfClient.Services.MembershipProviderService.FaultDetail))]
        Wms3pl.WpfClient.Services.MembershipProviderService.MembershipCreateResult CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wms3pl/MembershipProvider/AddUser", ReplyAction="http://Wms3pl/MembershipProvider/AddUserResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Wms3pl.WpfClient.Services.MembershipProviderService.ProviderProperties))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Wms3pl.WpfClient.Services.MembershipProviderService.MembershipCreateResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Wms3pl.WpfClient.Services.MembershipProviderService.MembershipFindResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Web.Security.MembershipPasswordFormat))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Web.Security.MembershipCreateStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Web.Security.MembershipUser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Wms3pl.WpfClient.Services.MembershipProviderService.FaultDetail))]
        Wms3pl.WpfClient.Services.MembershipProviderService.MembershipCreateResult AddUser(System.Web.Security.MembershipUser user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wms3pl/MembershipProvider/ChangePasswordQuestionAndAnswer", ReplyAction="http://Wms3pl/MembershipProvider/ChangePasswordQuestionAndAnswerResponse")]
        bool ChangePasswordQuestionAndAnswer(string username, string password, string newPasswordQuestion, string newPasswordAnswer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wms3pl/MembershipProvider/GetPassword", ReplyAction="http://Wms3pl/MembershipProvider/GetPasswordResponse")]
        string GetPassword(string username, string answer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wms3pl/MembershipProvider/ChangePassword", ReplyAction="http://Wms3pl/MembershipProvider/ChangePasswordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Wms3pl.WpfClient.Services.MembershipProviderService.FaultDetail), Action="http://Wms3pl/MembershipProvider/ChangePasswordFaultDetailFault", Name="FaultDetail")]
        bool ChangePassword(string username, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wms3pl/MembershipProvider/ResetPassword", ReplyAction="http://Wms3pl/MembershipProvider/ResetPasswordResponse")]
        string ResetPassword(string username, string answer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wms3pl/MembershipProvider/UpdateUser", ReplyAction="http://Wms3pl/MembershipProvider/UpdateUserResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Wms3pl.WpfClient.Services.MembershipProviderService.ProviderProperties))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Wms3pl.WpfClient.Services.MembershipProviderService.MembershipCreateResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Wms3pl.WpfClient.Services.MembershipProviderService.MembershipFindResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Web.Security.MembershipPasswordFormat))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Web.Security.MembershipCreateStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Web.Security.MembershipUser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Wms3pl.WpfClient.Services.MembershipProviderService.FaultDetail))]
        void UpdateUser(System.Web.Security.MembershipUser user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wms3pl/MembershipProvider/ValidateUser", ReplyAction="http://Wms3pl/MembershipProvider/ValidateUserResponse")]
        bool ValidateUser(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wms3pl/MembershipProvider/UnlockUser", ReplyAction="http://Wms3pl/MembershipProvider/UnlockUserResponse")]
        bool UnlockUser(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wms3pl/MembershipProvider/GetUserByName", ReplyAction="http://Wms3pl/MembershipProvider/GetUserByNameResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Wms3pl.WpfClient.Services.MembershipProviderService.ProviderProperties))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Wms3pl.WpfClient.Services.MembershipProviderService.MembershipCreateResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Wms3pl.WpfClient.Services.MembershipProviderService.MembershipFindResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Web.Security.MembershipPasswordFormat))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Web.Security.MembershipCreateStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Web.Security.MembershipUser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Wms3pl.WpfClient.Services.MembershipProviderService.FaultDetail))]
        System.Web.Security.MembershipUser GetUserByName(string username, bool userIsOnline);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wms3pl/MembershipProvider/GetUserNameByEmail", ReplyAction="http://Wms3pl/MembershipProvider/GetUserNameByEmailResponse")]
        string GetUserNameByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wms3pl/MembershipProvider/DeleteUser", ReplyAction="http://Wms3pl/MembershipProvider/DeleteUserResponse")]
        bool DeleteUser(string username, bool deleteAllRelatedData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wms3pl/MembershipProvider/GetAllUsers", ReplyAction="http://Wms3pl/MembershipProvider/GetAllUsersResponse")]
        Wms3pl.WpfClient.Services.MembershipProviderService.MembershipFindResult GetAllUsers(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wms3pl/MembershipProvider/GetNumberOfUsersOnline", ReplyAction="http://Wms3pl/MembershipProvider/GetNumberOfUsersOnlineResponse")]
        int GetNumberOfUsersOnline();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wms3pl/MembershipProvider/FindUsersByName", ReplyAction="http://Wms3pl/MembershipProvider/FindUsersByNameResponse")]
        Wms3pl.WpfClient.Services.MembershipProviderService.MembershipFindResult FindUsersByName(string usernameToMatch, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wms3pl/MembershipProvider/FindUsersByEmail", ReplyAction="http://Wms3pl/MembershipProvider/FindUsersByEmailResponse")]
        Wms3pl.WpfClient.Services.MembershipProviderService.MembershipFindResult FindUsersByEmail(string emailToMatch, int pageIndex, int pageSize);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MembershipProviderChannel : Wms3pl.WpfClient.Services.MembershipProviderService.MembershipProvider, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MembershipProviderClient : System.ServiceModel.ClientBase<Wms3pl.WpfClient.Services.MembershipProviderService.MembershipProvider>, Wms3pl.WpfClient.Services.MembershipProviderService.MembershipProvider {
        
        public MembershipProviderClient() {
        }
        
        public MembershipProviderClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MembershipProviderClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MembershipProviderClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MembershipProviderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.DateTime TestInput(System.DateTime date) {
            return base.Channel.TestInput(date);
        }
        
        public Wms3pl.WpfClient.Services.MembershipProviderService.ProviderProperties GetProviderProperties() {
            return base.Channel.GetProviderProperties();
        }
        
        public System.Web.Security.MembershipUser GetUserByKey(object providerUserKey, bool userIsOnline) {
            return base.Channel.GetUserByKey(providerUserKey, userIsOnline);
        }
        
        public Wms3pl.WpfClient.Services.MembershipProviderService.MembershipCreateResult CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey) {
            return base.Channel.CreateUser(username, password, email, passwordQuestion, passwordAnswer, isApproved, providerUserKey);
        }
        
        public Wms3pl.WpfClient.Services.MembershipProviderService.MembershipCreateResult AddUser(System.Web.Security.MembershipUser user) {
            return base.Channel.AddUser(user);
        }
        
        public bool ChangePasswordQuestionAndAnswer(string username, string password, string newPasswordQuestion, string newPasswordAnswer) {
            return base.Channel.ChangePasswordQuestionAndAnswer(username, password, newPasswordQuestion, newPasswordAnswer);
        }
        
        public string GetPassword(string username, string answer) {
            return base.Channel.GetPassword(username, answer);
        }
        
        public bool ChangePassword(string username, string oldPassword, string newPassword) {
            return base.Channel.ChangePassword(username, oldPassword, newPassword);
        }
        
        public string ResetPassword(string username, string answer) {
            return base.Channel.ResetPassword(username, answer);
        }
        
        public void UpdateUser(System.Web.Security.MembershipUser user) {
            base.Channel.UpdateUser(user);
        }
        
        public bool ValidateUser(string username, string password) {
            return base.Channel.ValidateUser(username, password);
        }
        
        public bool UnlockUser(string userName) {
            return base.Channel.UnlockUser(userName);
        }
        
        public System.Web.Security.MembershipUser GetUserByName(string username, bool userIsOnline) {
            return base.Channel.GetUserByName(username, userIsOnline);
        }
        
        public string GetUserNameByEmail(string email) {
            return base.Channel.GetUserNameByEmail(email);
        }
        
        public bool DeleteUser(string username, bool deleteAllRelatedData) {
            return base.Channel.DeleteUser(username, deleteAllRelatedData);
        }
        
        public Wms3pl.WpfClient.Services.MembershipProviderService.MembershipFindResult GetAllUsers(int pageIndex, int pageSize) {
            return base.Channel.GetAllUsers(pageIndex, pageSize);
        }
        
        public int GetNumberOfUsersOnline() {
            return base.Channel.GetNumberOfUsersOnline();
        }
        
        public Wms3pl.WpfClient.Services.MembershipProviderService.MembershipFindResult FindUsersByName(string usernameToMatch, int pageIndex, int pageSize) {
            return base.Channel.FindUsersByName(usernameToMatch, pageIndex, pageSize);
        }
        
        public Wms3pl.WpfClient.Services.MembershipProviderService.MembershipFindResult FindUsersByEmail(string emailToMatch, int pageIndex, int pageSize) {
            return base.Channel.FindUsersByEmail(emailToMatch, pageIndex, pageSize);
        }
    }
}
